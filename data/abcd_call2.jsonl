{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Array","signature":"func Array(key string, val zapcore.ArrayMarshaler) Field","start_line":33,"end_line":35,"code":"func Array(key string, val zapcore.ArrayMarshaler) Field {\n\treturn Field{Key: key, Type: zapcore.ArrayMarshalerType, Interface: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"Float64s","path":"array.go"},{"symbol":"Int16s","path":"array.go"},{"symbol":"Int64s","path":"array.go"},{"symbol":"Ints","path":"array.go"},{"symbol":"ObjectValues","path":"array.go"},{"symbol":"Stringers","path":"array.go"},{"symbol":"Strings","path":"array.go"},{"symbol":"Times","path":"array.go"},{"symbol":"Uint32s","path":"array.go"},{"symbol":"Uintptrs","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Bools","signature":"func Bools(key string, bs []bool) Field","start_line":38,"end_line":40,"code":"func Bools(key string, bs []bool) Field {\n\treturn Array(key, bools(bs))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"ByteStrings","signature":"func ByteStrings(key string, bss [][]byte) Field","start_line":44,"end_line":46,"code":"func ByteStrings(key string, bss [][]byte) Field {\n\treturn Array(key, byteStringsArray(bss))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Complex128s","signature":"func Complex128s(key string, nums []complex128) Field","start_line":49,"end_line":51,"code":"func Complex128s(key string, nums []complex128) Field {\n\treturn Array(key, complex128s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Complex64s","signature":"func Complex64s(key string, nums []complex64) Field","start_line":54,"end_line":56,"code":"func Complex64s(key string, nums []complex64) Field {\n\treturn Array(key, complex64s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Durations","signature":"func Durations(key string, ds []time.Duration) Field","start_line":59,"end_line":61,"code":"func Durations(key string, ds []time.Duration) Field {\n\treturn Array(key, durations(ds))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Float64s","signature":"func Float64s(key string, nums []float64) Field","start_line":64,"end_line":66,"code":"func Float64s(key string, nums []float64) Field {\n\treturn Array(key, float64s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Float32s","signature":"func Float32s(key string, nums []float32) Field","start_line":69,"end_line":71,"code":"func Float32s(key string, nums []float32) Field {\n\treturn Array(key, float32s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Ints","signature":"func Ints(key string, nums []int) Field","start_line":74,"end_line":76,"code":"func Ints(key string, nums []int) Field {\n\treturn Array(key, ints(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Int64s","signature":"func Int64s(key string, nums []int64) Field","start_line":79,"end_line":81,"code":"func Int64s(key string, nums []int64) Field {\n\treturn Array(key, int64s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Int32s","signature":"func Int32s(key string, nums []int32) Field","start_line":84,"end_line":86,"code":"func Int32s(key string, nums []int32) Field {\n\treturn Array(key, int32s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Int16s","signature":"func Int16s(key string, nums []int16) Field","start_line":89,"end_line":91,"code":"func Int16s(key string, nums []int16) Field {\n\treturn Array(key, int16s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Int8s","signature":"func Int8s(key string, nums []int8) Field","start_line":94,"end_line":96,"code":"func Int8s(key string, nums []int8) Field {\n\treturn Array(key, int8s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Objects","signature":"func Objects[T zapcore.ObjectMarshaler](key string, values []T) Field","start_line":130,"end_line":132,"code":"func Objects[T zapcore.ObjectMarshaler](key string, values []T) Field {\n\treturn Array(key, objects[T](values))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(objects[T]).MarshalLogArray","signature":"func (os objects[T]) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":136,"end_line":143,"code":"func (os objects[T]) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor _, o := range os {\n\t\tif err := arr.AppendObject(o); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendInt","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*ints).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"ObjectValues","signature":"func ObjectValues[T any, P ObjectMarshalerPtr[T]](key string, values []T) Field","start_line":174,"end_line":176,"code":"func ObjectValues[T any, P ObjectMarshalerPtr[T]](key string, values []T) Field {\n\treturn Array(key, objectValues[T, P](values))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(objectValues[T, P]).MarshalLogArray","signature":"func (os objectValues[T, P]) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":180,"end_line":194,"code":"func (os objectValues[T, P]) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range os {\n\t\t// It is necessary for us to explicitly reference the \"P\" type.\n\t\t// We cannot simply pass \"\u0026os[i]\" to AppendObject because its type\n\t\t// is \"*T\", which the type system does not consider as\n\t\t// implementing ObjectMarshaler.\n\t\t// Only the type \"P\" satisfies ObjectMarshaler, which we have\n\t\t// to convert \"*T\" to explicitly.\n\t\tvar p P = \u0026os[i]\n\t\tif err := arr.AppendObject(p); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt32","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendInt32","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*int32s).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Strings","signature":"func Strings(key string, ss []string) Field","start_line":197,"end_line":199,"code":"func Strings(key string, ss []string) Field {\n\treturn Array(key, stringArray(ss))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Stringers","signature":"func Stringers[T fmt.Stringer](key string, values []T) Field","start_line":216,"end_line":218,"code":"func Stringers[T fmt.Stringer](key string, values []T) Field {\n\treturn Array(key, stringers[T](values))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(stringers[T]).MarshalLogArray","signature":"func (os stringers[T]) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":222,"end_line":227,"code":"func (os stringers[T]) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor _, o := range os {\n\t\tarr.AppendString(o.String())\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*stringArray).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Times","signature":"func Times(key string, ts []time.Time) Field","start_line":230,"end_line":232,"code":"func Times(key string, ts []time.Time) Field {\n\treturn Array(key, times(ts))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Uints","signature":"func Uints(key string, nums []uint) Field","start_line":235,"end_line":237,"code":"func Uints(key string, nums []uint) Field {\n\treturn Array(key, uints(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Uint64s","signature":"func Uint64s(key string, nums []uint64) Field","start_line":240,"end_line":242,"code":"func Uint64s(key string, nums []uint64) Field {\n\treturn Array(key, uint64s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Uint32s","signature":"func Uint32s(key string, nums []uint32) Field","start_line":245,"end_line":247,"code":"func Uint32s(key string, nums []uint32) Field {\n\treturn Array(key, uint32s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Uint16s","signature":"func Uint16s(key string, nums []uint16) Field","start_line":250,"end_line":252,"code":"func Uint16s(key string, nums []uint16) Field {\n\treturn Array(key, uint16s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Uint8s","signature":"func Uint8s(key string, nums []uint8) Field","start_line":255,"end_line":257,"code":"func Uint8s(key string, nums []uint8) Field {\n\treturn Array(key, uint8s(nums))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Uintptrs","signature":"func Uintptrs(key string, us []uintptr) Field","start_line":260,"end_line":262,"code":"func Uintptrs(key string, us []uintptr) Field {\n\treturn Array(key, uintptrs(us))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"Errors","signature":"func Errors(key string, errs []error) Field","start_line":265,"end_line":267,"code":"func Errors(key string, errs []error) Field {\n\treturn Array(key, errArray(errs))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Array","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(bools).MarshalLogArray","signature":"func (bs bools) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":271,"end_line":276,"code":"func (bs bools) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range bs {\n\t\tarr.AppendBool(bs[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendFloat32","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendFloat32","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*float32s).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(byteStringsArray).MarshalLogArray","signature":"func (bss byteStringsArray) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":280,"end_line":285,"code":"func (bss byteStringsArray) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range bss {\n\t\tarr.AppendByteString(bss[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendUint32","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendUint32","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*uint32s).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(complex128s).MarshalLogArray","signature":"func (nums complex128s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":289,"end_line":294,"code":"func (nums complex128s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendComplex128(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendUint64","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendUint64","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*uint64s).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(complex64s).MarshalLogArray","signature":"func (nums complex64s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":298,"end_line":303,"code":"func (nums complex64s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendComplex64(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendDuration","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*durations).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(durations).MarshalLogArray","signature":"func (ds durations) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":307,"end_line":312,"code":"func (ds durations) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range ds {\n\t\tarr.AppendDuration(ds[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendComplex128","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendComplex128","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*complex128s).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(float64s).MarshalLogArray","signature":"func (nums float64s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":316,"end_line":321,"code":"func (nums float64s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendFloat64(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt16","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendInt16","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*int16s).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(float32s).MarshalLogArray","signature":"func (nums float32s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":325,"end_line":330,"code":"func (nums float32s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendFloat32(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendUintptr","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendUintptr","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*uintptrs).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(ints).MarshalLogArray","signature":"func (nums ints) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":334,"end_line":339,"code":"func (nums ints) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendInt(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt16","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendInt16","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*int16s).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(int64s).MarshalLogArray","signature":"func (nums int64s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":343,"end_line":348,"code":"func (nums int64s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendInt64(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt16","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendInt16","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*int16s).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(int32s).MarshalLogArray","signature":"func (nums int32s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":352,"end_line":357,"code":"func (nums int32s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendInt32(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendComplex128","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendComplex128","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*complex128s).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(int16s).MarshalLogArray","signature":"func (nums int16s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":361,"end_line":366,"code":"func (nums int16s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendInt16(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendTime","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*times).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(int8s).MarshalLogArray","signature":"func (nums int8s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":370,"end_line":375,"code":"func (nums int8s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendInt8(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendUintptr","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendUintptr","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*uintptrs).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(stringArray).MarshalLogArray","signature":"func (ss stringArray) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":379,"end_line":384,"code":"func (ss stringArray) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range ss {\n\t\tarr.AppendString(ss[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendBool","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendBool","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*bools).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(times).MarshalLogArray","signature":"func (ts times) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":388,"end_line":393,"code":"func (ts times) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range ts {\n\t\tarr.AppendTime(ts[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendFloat32","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendFloat32","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*float32s).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(uints).MarshalLogArray","signature":"func (nums uints) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":397,"end_line":402,"code":"func (nums uints) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendUint(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendUintptr","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendUintptr","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*uintptrs).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(uint64s).MarshalLogArray","signature":"func (nums uint64s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":406,"end_line":411,"code":"func (nums uint64s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendUint64(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendDuration","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*durations).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(uint32s).MarshalLogArray","signature":"func (nums uint32s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":415,"end_line":420,"code":"func (nums uint32s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendUint32(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendUint8","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendUint8","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*uint8s).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(uint16s).MarshalLogArray","signature":"func (nums uint16s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":424,"end_line":429,"code":"func (nums uint16s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendUint16(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendBool","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendBool","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*bools).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(uint8s).MarshalLogArray","signature":"func (nums uint8s) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":433,"end_line":438,"code":"func (nums uint8s) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendUint8(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendByteString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendByteString","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*byteStringsArray).MarshalLogArray","path":"array.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"array.go","symbol":"(uintptrs).MarshalLogArray","signature":"func (nums uintptrs) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":442,"end_line":447,"code":"func (nums uintptrs) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range nums {\n\t\tarr.AppendUintptr(nums[i])\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendUint64","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendUint64","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*uint64s).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).AppendByte","signature":"func (b *Buffer) AppendByte(v byte)","start_line":41,"end_line":43,"code":"func (b *Buffer) AppendByte(v byte) {\n\tb.bs = append(b.bs, v)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.78},"call_graph":{"callees":[],"callers":[{"symbol":"(*Buffer).WriteByte","path":"buffer/buffer.go"},{"symbol":"(*Formatter).FormatFrame","path":"internal/stacktrace/stack.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendByteString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"},{"symbol":"(EntryCaller).FullPath","path":"zapcore/entry.go"},{"symbol":"(EntryCaller).TrimmedPath","path":"zapcore/entry.go"},{"symbol":"safeAppendStringLike","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).AppendBytes","signature":"func (b *Buffer) AppendBytes(v []byte)","start_line":46,"end_line":48,"code":"func (b *Buffer) AppendBytes(v []byte) {\n\tb.bs = append(b.bs, v...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).AppendString","signature":"func (b *Buffer) AppendString(s string)","start_line":51,"end_line":53,"code":"func (b *Buffer) AppendString(s string) {\n\tb.bs = append(b.bs, s...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.74},"call_graph":{"callees":[],"callers":[{"symbol":"(*Buffer).WriteString","path":"buffer/buffer.go"},{"symbol":"(*Formatter).FormatFrame","path":"internal/stacktrace/stack.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).appendFloat","path":"zapcore/json_encoder.go"},{"symbol":"(EntryCaller).FullPath","path":"zapcore/entry.go"},{"symbol":"(EntryCaller).TrimmedPath","path":"zapcore/entry.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"},{"symbol":"(consoleEncoder).addSeparatorIfNecessary","path":"zapcore/console_encoder.go"},{"symbol":"safeAppendStringLike","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).AppendInt","signature":"func (b *Buffer) AppendInt(i int64)","start_line":56,"end_line":58,"code":"func (b *Buffer) AppendInt(i int64) {\n\tb.bs = strconv.AppendInt(b.bs, i, 10)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.62},"call_graph":{"callees":[{"symbol":"AppendInt","path":"../../../../usr/local/go/src/strconv/itoa.go"}],"callers":[{"symbol":"(*Formatter).FormatFrame","path":"internal/stacktrace/stack.go"},{"symbol":"(*jsonEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"(EntryCaller).FullPath","path":"zapcore/entry.go"},{"symbol":"(EntryCaller).TrimmedPath","path":"zapcore/entry.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).AppendTime","signature":"func (b *Buffer) AppendTime(t time.Time, layout string)","start_line":61,"end_line":63,"code":"func (b *Buffer) AppendTime(t time.Time, layout string) {\n\tb.bs = t.AppendFormat(b.bs, layout)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(Time).AppendFormat","path":"../../../../usr/local/go/src/time/format.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendTimeLayout","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).AppendUint","signature":"func (b *Buffer) AppendUint(i uint64)","start_line":67,"end_line":69,"code":"func (b *Buffer) AppendUint(i uint64) {\n\tb.bs = strconv.AppendUint(b.bs, i, 10)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"AppendUint","path":"../../../../usr/local/go/src/strconv/itoa.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendUint64","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).AppendBool","signature":"func (b *Buffer) AppendBool(v bool)","start_line":72,"end_line":74,"code":"func (b *Buffer) AppendBool(v bool) {\n\tb.bs = strconv.AppendBool(b.bs, v)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.62},"call_graph":{"callees":[{"symbol":"AppendBool","path":"../../../../usr/local/go/src/strconv/atob.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendBool","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).AppendFloat","signature":"func (b *Buffer) AppendFloat(f float64, bitSize int)","start_line":78,"end_line":80,"code":"func (b *Buffer) AppendFloat(f float64, bitSize int) {\n\tb.bs = strconv.AppendFloat(b.bs, f, 'f', -1, bitSize)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.62},"call_graph":{"callees":[{"symbol":"AppendFloat","path":"../../../../usr/local/go/src/strconv/ftoa.go"}],"callers":[{"symbol":"(*jsonEncoder).appendComplex","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).appendFloat","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).Len","signature":"func (b *Buffer) Len() int","start_line":83,"end_line":85,"code":"func (b *Buffer) Len() int {\n\treturn len(b.bs)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).addSeparatorIfNecessary","path":"zapcore/console_encoder.go"},{"symbol":"(consoleEncoder).writeContext","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).Cap","signature":"func (b *Buffer) Cap() int","start_line":88,"end_line":90,"code":"func (b *Buffer) Cap() int {\n\treturn cap(b.bs)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).Bytes","signature":"func (b *Buffer) Bytes() []byte","start_line":93,"end_line":95,"code":"func (b *Buffer) Bytes() []byte {\n\treturn b.bs\n}\n","selection":{"visibility":"exported","reason":"other","score":0.63},"call_graph":{"callees":[],"callers":[{"symbol":"(*ioCore).Write","path":"zapcore/core.go"},{"symbol":"(*jsonEncoder).Clone","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).encodeReflected","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).writeContext","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).String","signature":"func (b *Buffer) String() string","start_line":98,"end_line":100,"code":"func (b *Buffer) String() string {\n\treturn string(b.bs)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.68},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*pp).handleMethods","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"(EntryCaller).FullPath","path":"zapcore/entry.go"},{"symbol":"(EntryCaller).TrimmedPath","path":"zapcore/entry.go"},{"symbol":"(http2FrameWriteRequest).String","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"Take","path":"internal/stacktrace/stack.go"},{"symbol":"contextName","path":"../../../../usr/local/go/src/context/context.go"},{"symbol":"encodeStringer","path":"zapcore/field.go"},{"symbol":"preprintpanics","path":"../../../../usr/local/go/src/runtime/panic.go"},{"symbol":"stringify","path":"../../../../usr/local/go/src/context/context.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).Reset","signature":"func (b *Buffer) Reset()","start_line":104,"end_line":106,"code":"func (b *Buffer) Reset() {\n\tb.bs = b.bs[:0]\n}\n","selection":{"visibility":"exported","reason":"other","score":0.62},"call_graph":{"callees":[],"callers":[{"symbol":"(*jsonEncoder).resetReflectBuf","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).truncate","path":"zapcore/json_encoder.go"},{"symbol":"(Pool).Get","path":"buffer/pool.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).Write","signature":"func (b *Buffer) Write(bs []byte) (int, error)","start_line":109,"end_line":112,"code":"func (b *Buffer) Write(bs []byte) (int, error) {\n\tb.bs = append(b.bs, bs...)\n\treturn len(bs), nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"(*chunkedWriter).Write","path":"../../../../usr/local/go/src/net/http/internal/chunked.go"},{"symbol":"(*jsonEncoder).AddReflected","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendReflected","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).Clone","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(*multiError).writeMultiline","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"},{"symbol":"(bufioFlushWriter).Write","path":"../../../../usr/local/go/src/net/http/transfer.go"},{"symbol":"(consoleEncoder).writeContext","path":"zapcore/console_encoder.go"},{"symbol":"Fprint","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"writeHeader","path":"../../../../usr/local/go/src/encoding/pem/pem.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).WriteByte","signature":"func (b *Buffer) WriteByte(v byte) error","start_line":118,"end_line":121,"code":"func (b *Buffer) WriteByte(v byte) error {\n\tb.AppendByte(v)\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).WriteString","signature":"func (b *Buffer) WriteString(s string) (int, error)","start_line":127,"end_line":130,"code":"func (b *Buffer) WriteString(s string) (int, error) {\n\tb.AppendString(s)\n\treturn len(s), nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendString","path":"buffer/buffer.go"}],"callers":[{"symbol":"(*Writer).WriteString","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*byteReplacer).WriteString","path":"../../../../usr/local/go/src/strings/replace.go"},{"symbol":"(*byteStringReplacer).WriteString","path":"../../../../usr/local/go/src/strings/replace.go"},{"symbol":"(*genericReplacer).WriteString","path":"../../../../usr/local/go/src/strings/replace.go"},{"symbol":"(*multiWriter).WriteString","path":"../../../../usr/local/go/src/io/multi.go"},{"symbol":"(*singleStringReplacer).WriteString","path":"../../../../usr/local/go/src/strings/replace.go"},{"symbol":"(Header).writeSubset","path":"../../../../usr/local/go/src/net/http/header.go"},{"symbol":"WriteString","path":"../../../../usr/local/go/src/io/io.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).TrimNewline","signature":"func (b *Buffer) TrimNewline()","start_line":133,"end_line":139,"code":"func (b *Buffer) TrimNewline() {\n\tif i := len(b.bs) - 1; i \u003e= 0 {\n\t\tif b.bs[i] == '\\n' {\n\t\t\tb.bs = b.bs[:i]\n\t\t}\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"(*jsonEncoder).encodeReflected","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/buffer.go","symbol":"(*Buffer).Free","signature":"func (b *Buffer) Free()","start_line":144,"end_line":146,"code":"func (b *Buffer) Free() {\n\tb.pool.put(b)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.64},"call_graph":{"callees":[{"symbol":"(Pool).put","path":"buffer/pool.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*ioCore).Write","path":"zapcore/core.go"},{"symbol":"(EntryCaller).FullPath","path":"zapcore/entry.go"},{"symbol":"(EntryCaller).TrimmedPath","path":"zapcore/entry.go"},{"symbol":"Take","path":"internal/stacktrace/stack.go"},{"symbol":"putJSONEncoder","path":"zapcore/json_encoder.go"},{"symbol":"writeContext$1","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/pool.go","symbol":"NewPool","signature":"func NewPool() Pool","start_line":33,"end_line":41,"code":"func NewPool() Pool {\n\treturn Pool{\n\t\tp: pool.New(func() *Buffer {\n\t\t\treturn \u0026Buffer{\n\t\t\t\tbs: make([]byte, 0, _size),\n\t\t\t}\n\t\t}),\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"New[*go.uber.org/zap/buffer.Buffer]","path":"internal/pool/pool.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/pool.go","symbol":"(Pool).Get","signature":"func (p Pool) Get() *Buffer","start_line":44,"end_line":49,"code":"func (p Pool) Get() *Buffer {\n\tbuf := p.p.Get()\n\tbuf.Reset()\n\tbuf.pool = p\n\treturn buf\n}\n","selection":{"visibility":"exported","reason":"other","score":0.77},"call_graph":{"callees":[{"symbol":"(*Buffer).Reset","path":"buffer/buffer.go"},{"symbol":"(*Pool).Get[*go.uber.org/zap/buffer.Buffer]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*Pool).Get","path":"buffer/pool.go"},{"symbol":"(*jsonEncoder).clone","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).resetReflectBuf","path":"zapcore/json_encoder.go"},{"symbol":"(EntryCaller).FullPath","path":"zapcore/entry.go"},{"symbol":"(EntryCaller).TrimmedPath","path":"zapcore/entry.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"},{"symbol":"Take","path":"internal/stacktrace/stack.go"},{"symbol":"newJSONEncoder","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"buffer/pool.go","symbol":"(Pool).put","signature":"func (p Pool) put(buf *Buffer)","start_line":51,"end_line":53,"code":"func (p Pool) put(buf *Buffer) {\n\tp.p.Put(buf)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.4},"call_graph":{"callees":[{"symbol":"(*Pool).Put[*go.uber.org/zap/buffer.Buffer]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(*Buffer).Free","path":"buffer/buffer.go"},{"symbol":"(*Pool).put","path":"buffer/pool.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"config.go","symbol":"NewProductionEncoderConfig","signature":"func NewProductionEncoderConfig() zapcore.EncoderConfig","start_line":124,"end_line":139,"code":"func NewProductionEncoderConfig() zapcore.EncoderConfig {\n\treturn zapcore.EncoderConfig{\n\t\tTimeKey:        \"ts\",\n\t\tLevelKey:       \"level\",\n\t\tNameKey:        \"logger\",\n\t\tCallerKey:      \"caller\",\n\t\tFunctionKey:    zapcore.OmitKey,\n\t\tMessageKey:     \"msg\",\n\t\tStacktraceKey:  \"stacktrace\",\n\t\tLineEnding:     zapcore.DefaultLineEnding,\n\t\tEncodeLevel:    zapcore.LowercaseLevelEncoder,\n\t\tEncodeTime:     zapcore.EpochTimeEncoder,\n\t\tEncodeDuration: zapcore.SecondsDurationEncoder,\n\t\tEncodeCaller:   zapcore.ShortCallerEncoder,\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[],"callers":[{"symbol":"NewProductionConfig","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"config.go","symbol":"NewProductionConfig","signature":"func NewProductionConfig() Config","start_line":157,"end_line":170,"code":"func NewProductionConfig() Config {\n\treturn Config{\n\t\tLevel:       NewAtomicLevelAt(InfoLevel),\n\t\tDevelopment: false,\n\t\tSampling: \u0026SamplingConfig{\n\t\t\tInitial:    100,\n\t\t\tThereafter: 100,\n\t\t},\n\t\tEncoding:         \"json\",\n\t\tEncoderConfig:    NewProductionEncoderConfig(),\n\t\tOutputPaths:      []string{\"stderr\"},\n\t\tErrorOutputPaths: []string{\"stderr\"},\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"NewAtomicLevelAt","path":"level.go"},{"symbol":"NewProductionEncoderConfig","path":"config.go"}],"callers":[{"symbol":"NewProduction","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"config.go","symbol":"NewDevelopmentEncoderConfig","signature":"func NewDevelopmentEncoderConfig() zapcore.EncoderConfig","start_line":200,"end_line":216,"code":"func NewDevelopmentEncoderConfig() zapcore.EncoderConfig {\n\treturn zapcore.EncoderConfig{\n\t\t// Keys can be anything except the empty string.\n\t\tTimeKey:        \"T\",\n\t\tLevelKey:       \"L\",\n\t\tNameKey:        \"N\",\n\t\tCallerKey:      \"C\",\n\t\tFunctionKey:    zapcore.OmitKey,\n\t\tMessageKey:     \"M\",\n\t\tStacktraceKey:  \"S\",\n\t\tLineEnding:     zapcore.DefaultLineEnding,\n\t\tEncodeLevel:    zapcore.CapitalLevelEncoder,\n\t\tEncodeTime:     zapcore.ISO8601TimeEncoder,\n\t\tEncodeDuration: zapcore.StringDurationEncoder,\n\t\tEncodeCaller:   zapcore.ShortCallerEncoder,\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.86},"call_graph":{"callees":[],"callers":[{"symbol":"NewDevelopmentConfig","path":"config.go"},{"symbol":"NewLogger","path":"zaptest/logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"config.go","symbol":"NewDevelopmentConfig","signature":"func NewDevelopmentConfig() Config","start_line":227,"end_line":236,"code":"func NewDevelopmentConfig() Config {\n\treturn Config{\n\t\tLevel:            NewAtomicLevelAt(DebugLevel),\n\t\tDevelopment:      true,\n\t\tEncoding:         \"console\",\n\t\tEncoderConfig:    NewDevelopmentEncoderConfig(),\n\t\tOutputPaths:      []string{\"stderr\"},\n\t\tErrorOutputPaths: []string{\"stderr\"},\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"NewAtomicLevelAt","path":"level.go"},{"symbol":"NewDevelopmentEncoderConfig","path":"config.go"}],"callers":[{"symbol":"NewDevelopment","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"config.go","symbol":"(Config).Build","signature":"func (cfg Config) Build(opts ...Option) (*Logger, error)","start_line":239,"end_line":262,"code":"func (cfg Config) Build(opts ...Option) (*Logger, error) {\n\tenc, err := cfg.buildEncoder()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tsink, errSink, err := cfg.openSinks()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tif cfg.Level == (AtomicLevel{}) {\n\t\treturn nil, errors.New(\"missing Level\")\n\t}\n\n\tlog := New(\n\t\tzapcore.NewCore(enc, sink, cfg.Level),\n\t\tcfg.buildOptions(errSink)...,\n\t)\n\tif len(opts) \u003e 0 {\n\t\tlog = log.WithOptions(opts...)\n\t}\n\treturn log, nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"(Config).buildEncoder","path":"config.go"},{"symbol":"(Config).buildOptions","path":"config.go"},{"symbol":"(Config).openSinks","path":"config.go"},{"symbol":"New","path":"../../../../usr/local/go/src/errors/errors.go"},{"symbol":"New","path":"logger.go"},{"symbol":"NewCore","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Config).Build","path":"config.go"},{"symbol":"NewDevelopment","path":"logger.go"},{"symbol":"NewProduction","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"config.go","symbol":"(Config).buildOptions","signature":"func (cfg Config) buildOptions(errSink zapcore.WriteSyncer) []Option","start_line":264,"end_line":313,"code":"func (cfg Config) buildOptions(errSink zapcore.WriteSyncer) []Option {\n\topts := []Option{ErrorOutput(errSink)}\n\n\tif cfg.Development {\n\t\topts = append(opts, Development())\n\t}\n\n\tif !cfg.DisableCaller {\n\t\topts = append(opts, AddCaller())\n\t}\n\n\tstackLevel := ErrorLevel\n\tif cfg.Development {\n\t\tstackLevel = WarnLevel\n\t}\n\tif !cfg.DisableStacktrace {\n\t\topts = append(opts, AddStacktrace(stackLevel))\n\t}\n\n\tif scfg := cfg.Sampling; scfg != nil {\n\t\topts = append(opts, WrapCore(func(core zapcore.Core) zapcore.Core {\n\t\t\tvar samplerOpts []zapcore.SamplerOption\n\t\t\tif scfg.Hook != nil {\n\t\t\t\tsamplerOpts = append(samplerOpts, zapcore.SamplerHook(scfg.Hook))\n\t\t\t}\n\t\t\treturn zapcore.NewSamplerWithOptions(\n\t\t\t\tcore,\n\t\t\t\ttime.Second,\n\t\t\t\tcfg.Sampling.Initial,\n\t\t\t\tcfg.Sampling.Thereafter,\n\t\t\t\tsamplerOpts...,\n\t\t\t)\n\t\t}))\n\t}\n\n\tif len(cfg.InitialFields) \u003e 0 {\n\t\tfs := make([]Field, 0, len(cfg.InitialFields))\n\t\tkeys := make([]string, 0, len(cfg.InitialFields))\n\t\tfor k := range cfg.InitialFields {\n\t\t\tkeys = append(keys, k)\n\t\t}\n\t\tsort.Strings(keys)\n\t\tfor _, k := range keys {\n\t\t\tfs = append(fs, Any(k, cfg.InitialFields[k]))\n\t\t}\n\t\topts = append(opts, Fields(fs...))\n\t}\n\n\treturn opts\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"AddCaller","path":"options.go"},{"symbol":"AddStacktrace","path":"options.go"},{"symbol":"Any","path":"field.go"},{"symbol":"Development","path":"options.go"},{"symbol":"ErrorOutput","path":"options.go"},{"symbol":"Fields","path":"options.go"},{"symbol":"Strings","path":"../../../../usr/local/go/src/sort/sort.go"},{"symbol":"WrapCore","path":"options.go"}],"callers":[{"symbol":"(*Config).buildOptions","path":"config.go"},{"symbol":"(Config).Build","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"config.go","symbol":"(Config).openSinks","signature":"func (cfg Config) openSinks() (zapcore.WriteSyncer, zapcore.WriteSyncer, error)","start_line":315,"end_line":326,"code":"func (cfg Config) openSinks() (zapcore.WriteSyncer, zapcore.WriteSyncer, error) {\n\tsink, closeOut, err := Open(cfg.OutputPaths...)\n\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\terrSink, _, err := Open(cfg.ErrorOutputPaths...)\n\tif err != nil {\n\t\tcloseOut()\n\t\treturn nil, nil, err\n\t}\n\treturn sink, errSink, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"Open","path":"writer.go"},{"symbol":"badsystemstack","path":"../../../../usr/local/go/src/runtime/stubs.go"},{"symbol":"goroutineProfileWithLabelsConcurrent$1","path":"../../../../usr/local/go/src/runtime/mprof.go"},{"symbol":"init#1","path":"../../../../usr/local/go/src/crypto/md5/md5.go"},{"symbol":"init#1","path":"../../../../usr/local/go/src/crypto/rand/rand.go"},{"symbol":"libc_adjtime_trampoline","path":"../../../../usr/local/go/src/syscall/zsyscall_darwin_arm64.go"},{"symbol":"libc_getgroups_trampoline","path":"../../../../usr/local/go/src/syscall/zsyscall_darwin_arm64.go"},{"symbol":"libc_umask_trampoline","path":"../../../../usr/local/go/src/syscall/zsyscall_darwin_arm64.go"},{"symbol":"sigpipe","path":"../../../../usr/local/go/src/os/file_unix.go"},{"symbol":"sigtramp","path":"../../../../usr/local/go/src/runtime/os_darwin.go"}],"callers":[{"symbol":"(*Config).openSinks","path":"config.go"},{"symbol":"(Config).Build","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"config.go","symbol":"(Config).buildEncoder","signature":"func (cfg Config) buildEncoder() (zapcore.Encoder, error)","start_line":328,"end_line":330,"code":"func (cfg Config) buildEncoder() (zapcore.Encoder, error) {\n\treturn newEncoder(cfg.Encoding, cfg.EncoderConfig)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.4},"call_graph":{"callees":[{"symbol":"newEncoder","path":"encoder.go"}],"callers":[{"symbol":"(*Config).buildEncoder","path":"config.go"},{"symbol":"(Config).Build","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"encoder.go","symbol":"RegisterEncoder","signature":"func RegisterEncoder(name string, constructor func(zapcore.EncoderConfig) (zapcore.Encoder, error)) error","start_line":51,"end_line":62,"code":"func RegisterEncoder(name string, constructor func(zapcore.EncoderConfig) (zapcore.Encoder, error)) error {\n\t_encoderMutex.Lock()\n\tdefer _encoderMutex.Unlock()\n\tif name == \"\" {\n\t\treturn errNoEncoderNameSpecified\n\t}\n\tif _, ok := _encoderNameToConstructor[name]; ok {\n\t\treturn fmt.Errorf(\"encoder already registered for name %q\", name)\n\t}\n\t_encoderNameToConstructor[name] = constructor\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*RWMutex).Lock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).Unlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"encoder.go","symbol":"newEncoder","signature":"func newEncoder(name string, encoderConfig zapcore.EncoderConfig) (zapcore.Encoder, error)","start_line":64,"end_line":79,"code":"func newEncoder(name string, encoderConfig zapcore.EncoderConfig) (zapcore.Encoder, error) {\n\tif encoderConfig.TimeKey != \"\" \u0026\u0026 encoderConfig.EncodeTime == nil {\n\t\treturn nil, errors.New(\"missing EncodeTime in EncoderConfig\")\n\t}\n\n\t_encoderMutex.RLock()\n\tdefer _encoderMutex.RUnlock()\n\tif name == \"\" {\n\t\treturn nil, errNoEncoderNameSpecified\n\t}\n\tconstructor, ok := _encoderNameToConstructor[name]\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"no encoder registered for name %q\", name)\n\t}\n\treturn constructor(encoderConfig)\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.55},"call_graph":{"callees":[{"symbol":"(*RWMutex).RLock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).RUnlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"},{"symbol":"New","path":"../../../../usr/local/go/src/errors/errors.go"},{"symbol":"init$1","path":"encoder.go"},{"symbol":"init$2","path":"encoder.go"}],"callers":[{"symbol":"(Config).buildEncoder","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"error.go","symbol":"Error","signature":"func Error(err error) Field","start_line":33,"end_line":35,"code":"func Error(err error) Field {\n\treturn NamedError(\"error\", err)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.64},"call_graph":{"callees":[{"symbol":"(*Error).Error","path":"../../../../usr/local/go/src/net/textproto/textproto.go"},{"symbol":"(*UnsupportedValueError).Error","path":"../../../../usr/local/go/src/encoding/json/encode.go"},{"symbol":"(*http2httpError).Error","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*notFoundError).Error","path":"../../../../usr/local/go/src/net/net.go"},{"symbol":"(InvalidHostError).Error","path":"../../../../usr/local/go/src/net/url/url.go"},{"symbol":"(KeySizeError).Error","path":"../../../../usr/local/go/src/crypto/rc4/rc4.go"},{"symbol":"(ProtocolError).Error","path":"../../../../usr/local/go/src/net/textproto/textproto.go"},{"symbol":"(http2duplicatePseudoHeaderError).Error","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(tlsHandshakeTimeoutError).Error","path":"../../../../usr/local/go/src/net/http/transport.go"},{"symbol":"(wrappedError).Error","path":"../../../../usr/local/go/src/os/exec/exec.go"}],"callers":[{"symbol":"(*Certificate).systemVerify","path":"../../../../usr/local/go/src/crypto/x509/root_darwin.go"},{"symbol":"(*Config).encryptTicket","path":"../../../../usr/local/go/src/crypto/tls/ticket.go"},{"symbol":"(*Conn).processCertsFromClient","path":"../../../../usr/local/go/src/crypto/tls/handshake_server.go"},{"symbol":"(*Resolver).goLookupPTR","path":"../../../../usr/local/go/src/net/dnsclient_unix.go"},{"symbol":"(*ecdheKeyAgreement).processServerKeyExchange","path":"../../../../usr/local/go/src/crypto/tls/key_agreement.go"},{"symbol":"(*pp).handleMethods","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"(Time).MarshalJSON","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"(wrappedError).Error","path":"../../../../usr/local/go/src/os/exec/exec.go"},{"symbol":"MarshalPKCS8PrivateKey","path":"../../../../usr/local/go/src/crypto/x509/pkcs8.go"},{"symbol":"http2new400Handler$1","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"error.go","symbol":"NamedError","signature":"func NamedError(key string, err error) Field","start_line":44,"end_line":49,"code":"func NamedError(key string, err error) Field {\n\tif err == nil {\n\t\treturn Skip()\n\t}\n\treturn Field{Key: key, Type: zapcore.ErrorType, Interface: err}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":[{"symbol":"Skip","path":"field.go"}],"callers":[{"symbol":"Error","path":"error.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"error.go","symbol":"(errArray).MarshalLogArray","signature":"func (errs errArray) MarshalLogArray(arr zapcore.ArrayEncoder) error","start_line":53,"end_line":72,"code":"func (errs errArray) MarshalLogArray(arr zapcore.ArrayEncoder) error {\n\tfor i := range errs {\n\t\tif errs[i] == nil {\n\t\t\tcontinue\n\t\t}\n\t\t// To represent each error as an object with an \"error\" attribute and\n\t\t// potentially an \"errorVerbose\" attribute, we need to wrap it in a\n\t\t// type that implements LogObjectMarshaler. To prevent this from\n\t\t// allocating, pool the wrapper type.\n\t\telem := _errArrayElemPool.Get()\n\t\telem.error = errs[i]\n\t\terr := arr.AppendObject(elem)\n\t\telem.error = nil\n\t\t_errArrayElemPool.Put(elem)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*errArrayElem).Free","path":"zapcore/error.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"},{"symbol":"newErrArrayElem","path":"zapcore/error.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*errArray).MarshalLogArray","path":"zapcore/error.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"error.go","symbol":"(*errArrayElem).MarshalLogObject","signature":"func (e *errArrayElem) MarshalLogObject(enc zapcore.ObjectEncoder) error","start_line":78,"end_line":82,"code":"func (e *errArrayElem) MarshalLogObject(enc zapcore.ObjectEncoder) error {\n\t// Re-use the error field's logic, which supports non-standard error types.\n\tError(e.error).AddTo(enc)\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.72},"call_graph":{"callees":[{"symbol":"encodeError","path":"zapcore/error.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddObject","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Skip","signature":"func Skip() Field","start_line":43,"end_line":45,"code":"func Skip() Field {\n\treturn Field{Type: zapcore.SkipType}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"NamedError","path":"error.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Binary","signature":"func Binary(key string, val []byte) Field","start_line":58,"end_line":60,"code":"func Binary(key string, val []byte) Field {\n\treturn Field{Key: key, Type: zapcore.BinaryType, Interface: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Bool","signature":"func Bool(key string, val bool) Field","start_line":63,"end_line":69,"code":"func Bool(key string, val bool) Field {\n\tvar ival int64\n\tif val {\n\t\tival = 1\n\t}\n\treturn Field{Key: key, Type: zapcore.BoolType, Integer: ival}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"Boolp","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Boolp","signature":"func Boolp(key string, val *bool) Field","start_line":73,"end_line":78,"code":"func Boolp(key string, val *bool) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Bool(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Bool","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"ByteString","signature":"func ByteString(key string, val []byte) Field","start_line":83,"end_line":85,"code":"func ByteString(key string, val []byte) Field {\n\treturn Field{Key: key, Type: zapcore.ByteStringType, Interface: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Complex128","signature":"func Complex128(key string, val complex128) Field","start_line":90,"end_line":92,"code":"func Complex128(key string, val complex128) Field {\n\treturn Field{Key: key, Type: zapcore.Complex128Type, Interface: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Complex128p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Complex128p","signature":"func Complex128p(key string, val *complex128) Field","start_line":96,"end_line":101,"code":"func Complex128p(key string, val *complex128) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Complex128(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Complex128","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Complex64","signature":"func Complex64(key string, val complex64) Field","start_line":106,"end_line":108,"code":"func Complex64(key string, val complex64) Field {\n\treturn Field{Key: key, Type: zapcore.Complex64Type, Interface: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Complex64p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Complex64p","signature":"func Complex64p(key string, val *complex64) Field","start_line":112,"end_line":117,"code":"func Complex64p(key string, val *complex64) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Complex64(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Complex64","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Float64","signature":"func Float64(key string, val float64) Field","start_line":122,"end_line":124,"code":"func Float64(key string, val float64) Field {\n\treturn Field{Key: key, Type: zapcore.Float64Type, Integer: int64(math.Float64bits(val))}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Float64bits","path":"../../../../usr/local/go/src/math/unsafe.go"}],"callers":[{"symbol":"Float64p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Float64p","signature":"func Float64p(key string, val *float64) Field","start_line":128,"end_line":133,"code":"func Float64p(key string, val *float64) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Float64(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Float64","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Float32","signature":"func Float32(key string, val float32) Field","start_line":138,"end_line":140,"code":"func Float32(key string, val float32) Field {\n\treturn Field{Key: key, Type: zapcore.Float32Type, Integer: int64(math.Float32bits(val))}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Float32bits","path":"../../../../usr/local/go/src/math/unsafe.go"}],"callers":[{"symbol":"Float32p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Float32p","signature":"func Float32p(key string, val *float32) Field","start_line":144,"end_line":149,"code":"func Float32p(key string, val *float32) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Float32(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Float32","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int","signature":"func Int(key string, val int) Field","start_line":152,"end_line":154,"code":"func Int(key string, val int) Field {\n\treturn Int64(key, int64(val))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Int64","path":"field.go"}],"callers":[{"symbol":"Intp","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Intp","signature":"func Intp(key string, val *int) Field","start_line":158,"end_line":163,"code":"func Intp(key string, val *int) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Int(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Int","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int64","signature":"func Int64(key string, val int64) Field","start_line":166,"end_line":168,"code":"func Int64(key string, val int64) Field {\n\treturn Field{Key: key, Type: zapcore.Int64Type, Integer: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[],"callers":[{"symbol":"Int","path":"field.go"},{"symbol":"Int64p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int64p","signature":"func Int64p(key string, val *int64) Field","start_line":172,"end_line":177,"code":"func Int64p(key string, val *int64) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Int64(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Int64","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int32","signature":"func Int32(key string, val int32) Field","start_line":180,"end_line":182,"code":"func Int32(key string, val int32) Field {\n\treturn Field{Key: key, Type: zapcore.Int32Type, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Int32p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int32p","signature":"func Int32p(key string, val *int32) Field","start_line":186,"end_line":191,"code":"func Int32p(key string, val *int32) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Int32(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Int32","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int16","signature":"func Int16(key string, val int16) Field","start_line":194,"end_line":196,"code":"func Int16(key string, val int16) Field {\n\treturn Field{Key: key, Type: zapcore.Int16Type, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Int16p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int16p","signature":"func Int16p(key string, val *int16) Field","start_line":200,"end_line":205,"code":"func Int16p(key string, val *int16) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Int16(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Int16","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int8","signature":"func Int8(key string, val int8) Field","start_line":208,"end_line":210,"code":"func Int8(key string, val int8) Field {\n\treturn Field{Key: key, Type: zapcore.Int8Type, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Int8p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Int8p","signature":"func Int8p(key string, val *int8) Field","start_line":214,"end_line":219,"code":"func Int8p(key string, val *int8) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Int8(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Int8","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"String","signature":"func String(key string, val string) Field","start_line":222,"end_line":224,"code":"func String(key string, val string) Field {\n\treturn Field{Key: key, Type: zapcore.StringType, String: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.68},"call_graph":{"callees":[],"callers":[{"symbol":"StackSkip","path":"field.go"},{"symbol":"Stringp","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Stringp","signature":"func Stringp(key string, val *string) Field","start_line":228,"end_line":233,"code":"func Stringp(key string, val *string) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn String(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"String","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint","signature":"func Uint(key string, val uint) Field","start_line":236,"end_line":238,"code":"func Uint(key string, val uint) Field {\n\treturn Uint64(key, uint64(val))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"Uint64","path":"field.go"}],"callers":[{"symbol":"Uintp","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uintp","signature":"func Uintp(key string, val *uint) Field","start_line":242,"end_line":247,"code":"func Uintp(key string, val *uint) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Uint(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Uint","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint64","signature":"func Uint64(key string, val uint64) Field","start_line":250,"end_line":252,"code":"func Uint64(key string, val uint64) Field {\n\treturn Field{Key: key, Type: zapcore.Uint64Type, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[],"callers":[{"symbol":"Uint","path":"field.go"},{"symbol":"Uint64p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint64p","signature":"func Uint64p(key string, val *uint64) Field","start_line":256,"end_line":261,"code":"func Uint64p(key string, val *uint64) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Uint64(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Uint64","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint32","signature":"func Uint32(key string, val uint32) Field","start_line":264,"end_line":266,"code":"func Uint32(key string, val uint32) Field {\n\treturn Field{Key: key, Type: zapcore.Uint32Type, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Uint32p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint32p","signature":"func Uint32p(key string, val *uint32) Field","start_line":270,"end_line":275,"code":"func Uint32p(key string, val *uint32) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Uint32(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Uint32","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint16","signature":"func Uint16(key string, val uint16) Field","start_line":278,"end_line":280,"code":"func Uint16(key string, val uint16) Field {\n\treturn Field{Key: key, Type: zapcore.Uint16Type, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Uint16p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint16p","signature":"func Uint16p(key string, val *uint16) Field","start_line":284,"end_line":289,"code":"func Uint16p(key string, val *uint16) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Uint16(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Uint16","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint8","signature":"func Uint8(key string, val uint8) Field","start_line":292,"end_line":294,"code":"func Uint8(key string, val uint8) Field {\n\treturn Field{Key: key, Type: zapcore.Uint8Type, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Uint8p","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uint8p","signature":"func Uint8p(key string, val *uint8) Field","start_line":298,"end_line":303,"code":"func Uint8p(key string, val *uint8) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Uint8(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Uint8","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uintptr","signature":"func Uintptr(key string, val uintptr) Field","start_line":306,"end_line":308,"code":"func Uintptr(key string, val uintptr) Field {\n\treturn Field{Key: key, Type: zapcore.UintptrType, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"Uintptrp","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Uintptrp","signature":"func Uintptrp(key string, val *uintptr) Field","start_line":312,"end_line":317,"code":"func Uintptrp(key string, val *uintptr) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Uintptr(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Uintptr","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Reflect","signature":"func Reflect(key string, val interface{}) Field","start_line":326,"end_line":328,"code":"func Reflect(key string, val interface{}) Field {\n\treturn Field{Key: key, Type: zapcore.ReflectType, Interface: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"nilField","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Namespace","signature":"func Namespace(key string) Field","start_line":335,"end_line":337,"code":"func Namespace(key string) Field {\n\treturn Field{Key: key, Type: zapcore.NamespaceType}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Stringer","signature":"func Stringer(key string, val fmt.Stringer) Field","start_line":341,"end_line":343,"code":"func Stringer(key string, val fmt.Stringer) Field {\n\treturn Field{Key: key, Type: zapcore.StringerType, Interface: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Time","signature":"func Time(key string, val time.Time) Field","start_line":347,"end_line":352,"code":"func Time(key string, val time.Time) Field {\n\tif val.Before(_minTimeInt64) || val.After(_maxTimeInt64) {\n\t\treturn Field{Key: key, Type: zapcore.TimeFullType, Interface: val}\n\t}\n\treturn Field{Key: key, Type: zapcore.TimeType, Integer: val.UnixNano(), Interface: val.Location()}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(Time).After","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"(Time).Before","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"(Time).Location","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"(Time).UnixNano","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"Timep","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Timep","signature":"func Timep(key string, val *time.Time) Field","start_line":356,"end_line":361,"code":"func Timep(key string, val *time.Time) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Time(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Time","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Stack","signature":"func Stack(key string) Field","start_line":367,"end_line":369,"code":"func Stack(key string) Field {\n\treturn StackSkip(key, 1) // skip Stack\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"StackSkip","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"StackSkip","signature":"func StackSkip(key string, skip int) Field","start_line":373,"end_line":379,"code":"func StackSkip(key string, skip int) Field {\n\t// Returning the stacktrace as a string costs an allocation, but saves us\n\t// from expanding the zapcore.Field union struct to include a byte slice. Since\n\t// taking a stacktrace is already so expensive (~10us), the extra allocation\n\t// is okay.\n\treturn String(key, stacktrace.Take(skip+1)) // skip StackSkip\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"String","path":"field.go"},{"symbol":"Take","path":"internal/stacktrace/stack.go"}],"callers":[{"symbol":"Stack","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Duration","signature":"func Duration(key string, val time.Duration) Field","start_line":383,"end_line":385,"code":"func Duration(key string, val time.Duration) Field {\n\treturn Field{Key: key, Type: zapcore.DurationType, Integer: int64(val)}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[],"callers":[{"symbol":"Durationp","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Durationp","signature":"func Durationp(key string, val *time.Duration) Field","start_line":389,"end_line":394,"code":"func Durationp(key string, val *time.Duration) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Duration(key, *val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Duration","path":"field.go"},{"symbol":"nilField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Object","signature":"func Object(key string, val zapcore.ObjectMarshaler) Field","start_line":400,"end_line":405,"code":"func Object(key string, val zapcore.ObjectMarshaler) Field {\n\tif val == nil {\n\t\treturn nilField(key)\n\t}\n\treturn Field{Key: key, Type: zapcore.ObjectMarshalerType, Interface: val}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"nilField","path":"field.go"}],"callers":[{"symbol":"dictField","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Inline","signature":"func Inline(val zapcore.ObjectMarshaler) Field","start_line":410,"end_line":415,"code":"func Inline(val zapcore.ObjectMarshaler) Field {\n\treturn zapcore.Field{\n\t\tType:      zapcore.InlineMarshalerType,\n\t\tInterface: val,\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Dict","signature":"func Dict(key string, val ...Field) Field","start_line":419,"end_line":421,"code":"func Dict(key string, val ...Field) Field {\n\treturn dictField(key, val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"dictField","path":"field.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"dictField","signature":"func dictField(key string, val []Field) Field","start_line":424,"end_line":426,"code":"func dictField(key string, val []Field) Field {\n\treturn Object(key, dictObject(val))\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.4},"call_graph":{"callees":[{"symbol":"Object","path":"field.go"}],"callers":[{"symbol":"Dict","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"(dictObject).MarshalLogObject","signature":"func (d dictObject) MarshalLogObject(enc zapcore.ObjectEncoder) error","start_line":430,"end_line":435,"code":"func (d dictObject) MarshalLogObject(enc zapcore.ObjectEncoder) error {\n\tfor _, f := range d {\n\t\tf.AddTo(enc)\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.72},"call_graph":{"callees":[{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddObject","path":"zapcore/memory_encoder.go"},{"symbol":"(*dictObject).MarshalLogObject","path":"field.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"DictObject","signature":"func DictObject(val ...Field) zapcore.ObjectMarshaler","start_line":440,"end_line":442,"code":"func DictObject(val ...Field) zapcore.ObjectMarshaler {\n\treturn dictObject(val)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"(anyFieldC[T]).Any","signature":"func (f anyFieldC[T]) Any(key string, val any) Field","start_line":477,"end_line":481,"code":"func (f anyFieldC[T]) Any(key string, val any) Field {\n\tv, _ := val.(T)\n\t// val is guaranteed to be a T, except when it's nil.\n\treturn f(key, v)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.72},"call_graph":{"callees":[],"callers":[{"symbol":"(anyFieldC).Any[*int16]","path":"field.go"},{"symbol":"(anyFieldC).Any[*string]","path":"field.go"},{"symbol":"(anyFieldC).Any[*uint32]","path":"field.go"},{"symbol":"(anyFieldC).Any[[]complex64]","path":"field.go"},{"symbol":"(anyFieldC).Any[[]go.uber.org/zap.Field]","path":"field.go"},{"symbol":"(anyFieldC).Any[[]int16]","path":"field.go"},{"symbol":"(anyFieldC).Any[[]time.Time]","path":"field.go"},{"symbol":"(anyFieldC).Any[complex64]","path":"field.go"},{"symbol":"(anyFieldC).Any[float64]","path":"field.go"},{"symbol":"(anyFieldC).Any[int16]","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"field.go","symbol":"Any","signature":"func Any(key string, value interface{}) Field","start_line":490,"end_line":494,"code":"func Any(key string, value interface{\n}) Field {\n\tvar c interface{ Any(string, any) Field }\n  // ... trimmed ...\n}\n","selection":{"visibility":"exported","reason":"other","score":0.72},"call_graph":{"callees":[{"symbol":"(anyFieldC).Any","path":"field.go"},{"symbol":"(anyFieldC).Any[*uint64]","path":"field.go"},{"symbol":"(anyFieldC).Any[[]byte]","path":"field.go"},{"symbol":"(anyFieldC).Any[[]complex128]","path":"field.go"},{"symbol":"(anyFieldC).Any[[]int16]","path":"field.go"},{"symbol":"(anyFieldC).Any[[]string]","path":"field.go"},{"symbol":"(anyFieldC).Any[complex128]","path":"field.go"},{"symbol":"(anyFieldC).Any[go.uber.org/zap/zapcore.ArrayMarshaler]","path":"field.go"},{"symbol":"(anyFieldC).Any[string]","path":"field.go"},{"symbol":"(anyFieldC).Any[uint16]","path":"field.go"}],"callers":[{"symbol":"(*SugaredLogger).sweetenFields","path":"sugar.go"},{"symbol":"(Config).buildOptions","path":"config.go"},{"symbol":"(invalidPair).MarshalLogObject","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"flag.go","symbol":"LevelFlag","signature":"func LevelFlag(name string, defaultLevel zapcore.Level, usage string) *zapcore.Level","start_line":35,"end_line":39,"code":"func LevelFlag(name string, defaultLevel zapcore.Level, usage string) *zapcore.Level {\n\tlvl := defaultLevel\n\tflag.Var(\u0026lvl, name, usage)\n\treturn \u0026lvl\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Var","path":"../../../../usr/local/go/src/flag/flag.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"L","signature":"func L() *Logger","start_line":48,"end_line":53,"code":"func L() *Logger {\n\t_globalMu.RLock()\n\tl := _globalL\n\t_globalMu.RUnlock()\n\treturn l\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*RWMutex).RLock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).RUnlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"S","signature":"func S() *SugaredLogger","start_line":57,"end_line":62,"code":"func S() *SugaredLogger {\n\t_globalMu.RLock()\n\ts := _globalS\n\t_globalMu.RUnlock()\n\treturn s\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*RWMutex).RLock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).RUnlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"ReplaceGlobals","signature":"func ReplaceGlobals(logger *Logger) func()","start_line":66,"end_line":73,"code":"func ReplaceGlobals(logger *Logger) func() {\n\t_globalMu.Lock()\n\tprev := _globalL\n\t_globalL = logger\n\t_globalS = logger.Sugar()\n\t_globalMu.Unlock()\n\treturn func() { ReplaceGlobals(prev) }\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*Logger).Sugar","path":"logger.go"},{"symbol":"(*RWMutex).Lock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).Unlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[{"symbol":"ReplaceGlobals$1","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"NewStdLog","signature":"func NewStdLog(l *Logger) *log.Logger","start_line":78,"end_line":82,"code":"func NewStdLog(l *Logger) *log.Logger {\n\tlogger := l.WithOptions(AddCallerSkip(_stdLogDefaultDepth + _loggerWriterDepth))\n\tf := logger.Info\n\treturn log.New(\u0026loggerWriter{f}, \"\" /* prefix */, 0 /* flags */)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"AddCallerSkip","path":"options.go"},{"symbol":"New","path":"../../../../usr/local/go/src/log/log.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"NewStdLogAt","signature":"func NewStdLogAt(l *Logger, level zapcore.Level) (*log.Logger, error)","start_line":86,"end_line":93,"code":"func NewStdLogAt(l *Logger, level zapcore.Level) (*log.Logger, error) {\n\tlogger := l.WithOptions(AddCallerSkip(_stdLogDefaultDepth + _loggerWriterDepth))\n\tlogFunc, err := levelToFunc(logger, level)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn log.New(\u0026loggerWriter{logFunc}, \"\" /* prefix */, 0 /* flags */), nil\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"AddCallerSkip","path":"options.go"},{"symbol":"New","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"levelToFunc","path":"global.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"RedirectStdLog","signature":"func RedirectStdLog(l *Logger) func()","start_line":102,"end_line":110,"code":"func RedirectStdLog(l *Logger) func() {\n\tf, err := redirectStdLogAt(l, InfoLevel)\n\tif err != nil {\n\t\t// Can't get here, since passing InfoLevel to redirectStdLogAt always\n\t\t// works.\n\t\tpanic(fmt.Sprintf(_programmerErrorTemplate, err))\n\t}\n\treturn f\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"redirectStdLogAt","path":"global.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"RedirectStdLogAt","signature":"func RedirectStdLogAt(l *Logger, level zapcore.Level) (func(), error)","start_line":119,"end_line":121,"code":"func RedirectStdLogAt(l *Logger, level zapcore.Level) (func(), error) {\n\treturn redirectStdLogAt(l, level)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"redirectStdLogAt","path":"global.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"redirectStdLogAt","signature":"func redirectStdLogAt(l *Logger, level zapcore.Level) (func(), error)","start_line":123,"end_line":139,"code":"func redirectStdLogAt(l *Logger, level zapcore.Level) (func(), error) {\n\tflags := log.Flags()\n\tprefix := log.Prefix()\n\tlog.SetFlags(0)\n\tlog.SetPrefix(\"\")\n\tlogger := l.WithOptions(AddCallerSkip(_stdLogDefaultDepth + _loggerWriterDepth))\n\tlogFunc, err := levelToFunc(logger, level)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tlog.SetOutput(\u0026loggerWriter{logFunc})\n\treturn func() {\n\t\tlog.SetFlags(flags)\n\t\tlog.SetPrefix(prefix)\n\t\tlog.SetOutput(os.Stderr)\n\t}, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.51},"call_graph":{"callees":[{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"AddCallerSkip","path":"options.go"},{"symbol":"Flags","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Prefix","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"SetFlags","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"SetOutput","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"SetPrefix","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"levelToFunc","path":"global.go"}],"callers":[{"symbol":"RedirectStdLog","path":"global.go"},{"symbol":"RedirectStdLogAt","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"levelToFunc","signature":"func levelToFunc(logger *Logger, lvl zapcore.Level) (func(string, ...Field), error)","start_line":141,"end_line":159,"code":"func levelToFunc(logger *Logger, lvl zapcore.Level) (func(string, ...Field), error) {\n\tswitch lvl {\n\tcase DebugLevel:\n\t\treturn logger.Debug, nil\n\tcase InfoLevel:\n\t\treturn logger.Info, nil\n\tcase WarnLevel:\n\t\treturn logger.Warn, nil\n\tcase ErrorLevel:\n\t\treturn logger.Error, nil\n\tcase DPanicLevel:\n\t\treturn logger.DPanic, nil\n\tcase PanicLevel:\n\t\treturn logger.Panic, nil\n\tcase FatalLevel:\n\t\treturn logger.Fatal, nil\n\t}\n\treturn nil, fmt.Errorf(\"unrecognized level: %q\", lvl)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.51},"call_graph":{"callees":[{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"}],"callers":[{"symbol":"NewStdLogAt","path":"global.go"},{"symbol":"redirectStdLogAt","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"global.go","symbol":"(*loggerWriter).Write","signature":"func (l *loggerWriter) Write(p []byte) (int, error)","start_line":165,"end_line":169,"code":"func (l *loggerWriter) Write(p []byte) (int, error) {\n\tp = bytes.TrimSpace(p)\n\tl.logFunc(string(p))\n\treturn len(p), nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.8},"call_graph":{"callees":[{"symbol":"(*Logger).DPanic","path":"logger.go"},{"symbol":"(*Logger).Debug","path":"logger.go"},{"symbol":"(*Logger).Error","path":"logger.go"},{"symbol":"(*Logger).Fatal","path":"logger.go"},{"symbol":"(*Logger).Info","path":"logger.go"},{"symbol":"(*Logger).Panic","path":"logger.go"},{"symbol":"(*Logger).Warn","path":"logger.go"},{"symbol":"TrimSpace","path":"../../../../usr/local/go/src/bytes/bytes.go"}],"callers":[{"symbol":"(*Discarder).Write","path":"internal/ztest/writer.go"},{"symbol":"(*Encoder).Encode","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"(*Writer).Flush","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*Writer).Write","path":"../../../../usr/local/go/src/compress/gzip/gzip.go"},{"symbol":"(*dumper).Write","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"(*ioCore).Write","path":"zapcore/core.go"},{"symbol":"(*teeReader).Read","path":"../../../../usr/local/go/src/io/io.go"},{"symbol":"(bufioFlushWriter).Write","path":"../../../../usr/local/go/src/net/http/transfer.go"},{"symbol":"(stringWriter).WriteString","path":"../../../../usr/local/go/src/strings/replace.go"},{"symbol":"Encode","path":"../../../../usr/local/go/src/encoding/pem/pem.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"http_handler.go","symbol":"(AtomicLevel).ServeHTTP","signature":"func (lvl AtomicLevel) ServeHTTP(w http.ResponseWriter, r *http.Request)","start_line":71,"end_line":76,"code":"func (lvl AtomicLevel) ServeHTTP(w http.ResponseWriter, r *http.Request) {\n\tif err := lvl.serveHTTP(w, r); err != nil {\n\t\tw.WriteHeader(http.StatusInternalServerError)\n\t\t_, _ = fmt.Fprintf(w, \"internal error: %v\", err)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*http2responseWriter).WriteHeader","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*populateResponse).WriteHeader","path":"../../../../usr/local/go/src/net/http/filetransport.go"},{"symbol":"(*response).WriteHeader","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"(*timeoutWriter).WriteHeader","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"(AtomicLevel).serveHTTP","path":"http_handler.go"},{"symbol":"Fprintf","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"(*AtomicLevel).ServeHTTP","path":"http_handler.go"},{"symbol":"(*ServeMux).ServeHTTP","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"(*http2serverConn).runHandler","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(HandlerFunc).ServeHTTP","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"(serverHandler).ServeHTTP","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"AllowQuerySemicolons$1","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"Handler$1","path":"../../../../usr/local/go/src/net/http/csrf.go"},{"symbol":"MaxBytesHandler$1","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"ServeHTTP$1","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"StripPrefix$1","path":"../../../../usr/local/go/src/net/http/server.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"http_handler.go","symbol":"(AtomicLevel).serveHTTP","signature":"func (lvl AtomicLevel) serveHTTP(w http.ResponseWriter, r *http.Request) error","start_line":78,"end_line":107,"code":"func (lvl AtomicLevel) serveHTTP(w http.ResponseWriter, r *http.Request) error {\n\ttype errorResponse struct {\n\t\tError string `json:\"error\"`\n\t}\n\ttype payload struct {\n\t\tLevel zapcore.Level `json:\"level\"`\n\t}\n\n\tenc := json.NewEncoder(w)\n\n\tswitch r.Method {\n\tcase http.MethodGet:\n\t\treturn enc.Encode(payload{Level: lvl.Level()})\n\n\tcase http.MethodPut:\n\t\trequestedLvl, err := decodePutRequest(r.Header.Get(\"Content-Type\"), r)\n\t\tif err != nil {\n\t\t\tw.WriteHeader(http.StatusBadRequest)\n\t\t\treturn enc.Encode(errorResponse{Error: err.Error()})\n\t\t}\n\t\tlvl.SetLevel(requestedLvl)\n\t\treturn enc.Encode(payload{Level: lvl.Level()})\n\n\tdefault:\n\t\tw.WriteHeader(http.StatusMethodNotAllowed)\n\t\treturn enc.Encode(errorResponse{\n\t\t\tError: \"Only GET and PUT are supported.\",\n\t\t})\n\t}\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*Encoder).Encode","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"(*http2responseWriter).WriteHeader","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*populateResponse).WriteHeader","path":"../../../../usr/local/go/src/net/http/filetransport.go"},{"symbol":"(*response).WriteHeader","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"(*timeoutWriter).WriteHeader","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"(AtomicLevel).Level","path":"level.go"},{"symbol":"(AtomicLevel).SetLevel","path":"level.go"},{"symbol":"(Header).Get","path":"../../../../usr/local/go/src/net/http/header.go"},{"symbol":"NewEncoder","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"decodePutRequest","path":"http_handler.go"}],"callers":[{"symbol":"(*AtomicLevel).serveHTTP","path":"http_handler.go"},{"symbol":"(AtomicLevel).ServeHTTP","path":"http_handler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"http_handler.go","symbol":"decodePutRequest","signature":"func decodePutRequest(contentType string, r *http.Request) (zapcore.Level, error)","start_line":110,"end_line":115,"code":"func decodePutRequest(contentType string, r *http.Request) (zapcore.Level, error) {\n\tif contentType == \"application/x-www-form-urlencoded\" {\n\t\treturn decodePutURL(r)\n\t}\n\treturn decodePutJSON(r.Body)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"decodePutJSON","path":"http_handler.go"},{"symbol":"decodePutURL","path":"http_handler.go"}],"callers":[{"symbol":"(AtomicLevel).serveHTTP","path":"http_handler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"http_handler.go","symbol":"decodePutURL","signature":"func decodePutURL(r *http.Request) (zapcore.Level, error)","start_line":117,"end_line":127,"code":"func decodePutURL(r *http.Request) (zapcore.Level, error) {\n\tlvl := r.FormValue(\"level\")\n\tif lvl == \"\" {\n\t\treturn 0, errors.New(\"must specify logging level\")\n\t}\n\tvar l zapcore.Level\n\tif err := l.UnmarshalText([]byte(lvl)); err != nil {\n\t\treturn 0, err\n\t}\n\treturn l, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*Level).UnmarshalText","path":"zapcore/level.go"},{"symbol":"(*Request).FormValue","path":"../../../../usr/local/go/src/net/http/request.go"},{"symbol":"New","path":"../../../../usr/local/go/src/errors/errors.go"}],"callers":[{"symbol":"decodePutRequest","path":"http_handler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"http_handler.go","symbol":"decodePutJSON","signature":"func decodePutJSON(body io.Reader) (zapcore.Level, error)","start_line":129,"end_line":140,"code":"func decodePutJSON(body io.Reader) (zapcore.Level, error) {\n\tvar pld struct {\n\t\tLevel *zapcore.Level `json:\"level\"`\n\t}\n\tif err := json.NewDecoder(body).Decode(\u0026pld); err != nil {\n\t\treturn 0, fmt.Errorf(\"malformed request body: %v\", err)\n\t}\n\tif pld.Level == nil {\n\t\treturn 0, errors.New(\"must specify logging level\")\n\t}\n\treturn *pld.Level, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*Decoder).Decode","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"},{"symbol":"New","path":"../../../../usr/local/go/src/errors/errors.go"},{"symbol":"NewDecoder","path":"../../../../usr/local/go/src/encoding/json/stream.go"}],"callers":[{"symbol":"decodePutRequest","path":"http_handler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/color/color.go","symbol":"(Color).Add","signature":"func (c Color) Add(s string) string","start_line":42,"end_line":44,"code":"func (c Color) Add(s string) string {\n\treturn fmt.Sprintf(\"\\x1b[%dm%s\\x1b[0m\", uint8(c), s)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.63},"call_graph":{"callees":[{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"(*Color).Add","path":"internal/color/color.go"},{"symbol":"CapitalColorLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"LowercaseColorLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"init#1","path":"zapcore/level_strings.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/exit/exit.go","symbol":"With","signature":"func With(code int)","start_line":31,"end_line":33,"code":"func With(code int) {\n\t_exit(code)\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.79},"call_graph":{"callees":[{"symbol":"(*StubbedExit).exit","path":"internal/exit/exit.go"},{"symbol":"CloseOnExec","path":"../../../../usr/local/go/src/syscall/exec_unix.go"},{"symbol":"Exit","path":"../../../../usr/local/go/src/syscall/syscall.go"},{"symbol":"Run","path":"../../../../usr/local/go/src/internal/runtime/exithook/hooks.go"},{"symbol":"flushmcache","path":"../../../../usr/local/go/src/runtime/mstats.go"},{"symbol":"http2checkWriteHeaderCode","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"init$1","path":"../../../../usr/local/go/src/internal/poll/fd.go"},{"symbol":"os_beforeExit","path":"../../../../usr/local/go/src/runtime/proc.go"},{"symbol":"runtime_beforeExit","path":"../../../../usr/local/go/src/os/proc.go"},{"symbol":"syscall_Exit","path":"../../../../usr/local/go/src/runtime/runtime.go"}],"callers":[{"symbol":"(*FD).Writev","path":"../../../../usr/local/go/src/internal/poll/writev.go"},{"symbol":"(*http2serverConn).serve","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(CheckWriteAction).OnWrite","path":"zapcore/entry.go"},{"symbol":"With","path":"internal/exit/exit.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/exit/exit.go","symbol":"Stub","signature":"func Stub() *StubbedExit","start_line":43,"end_line":47,"code":"func Stub() *StubbedExit {\n\ts := \u0026StubbedExit{prev: _exit}\n\t_exit = s.exit\n\treturn s\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"WithStub","path":"internal/exit/exit.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/exit/exit.go","symbol":"WithStub","signature":"func WithStub(f func()) *StubbedExit","start_line":51,"end_line":56,"code":"func WithStub(f func()) *StubbedExit {\n\ts := Stub()\n\tdefer s.Unstub()\n\tf()\n\treturn s\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":[{"symbol":"(*StubbedExit).Unstub","path":"internal/exit/exit.go"},{"symbol":"Stub","path":"internal/exit/exit.go"},{"symbol":"dumpgs","path":"../../../../usr/local/go/src/runtime/heapdump.go"},{"symbol":"initP224","path":"../../../../usr/local/go/src/crypto/elliptic/nistec.go"},{"symbol":"libc_exchangedata_trampoline","path":"../../../../usr/local/go/src/syscall/zsyscall_darwin_arm64.go"},{"symbol":"libc_fchownat_trampoline","path":"../../../../usr/local/go/src/internal/syscall/unix/at_darwin.go"},{"symbol":"libc_getgid_trampoline","path":"../../../../usr/local/go/src/syscall/zsyscall_darwin_arm64.go"},{"symbol":"libc_lseek_trampoline","path":"../../../../usr/local/go/src/syscall/zsyscall_darwin_arm64.go"},{"symbol":"stkobjinit","path":"../../../../usr/local/go/src/runtime/stkframe.go"},{"symbol":"unlockOSThread","path":"../../../../usr/local/go/src/runtime/proc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/exit/exit.go","symbol":"(*StubbedExit).Unstub","signature":"func (se *StubbedExit) Unstub()","start_line":59,"end_line":61,"code":"func (se *StubbedExit) Unstub() {\n\t_exit = se.prev\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"WithStub","path":"internal/exit/exit.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/exit/exit.go","symbol":"(*StubbedExit).exit","signature":"func (se *StubbedExit) exit(code int)","start_line":63,"end_line":66,"code":"func (se *StubbedExit) exit(code int) {\n\tse.Exited = true\n\tse.Code = code\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.4},"call_graph":{"callees":[],"callers":[{"symbol":"(*FD).Writev","path":"../../../../usr/local/go/src/internal/poll/writev.go"},{"symbol":"(*http2serverConn).serve","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"With","path":"internal/exit/exit.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/pool/pool.go","symbol":"New","signature":"func New[T any](fn func() T) *Pool[T]","start_line":40,"end_line":48,"code":"func New[T any](fn func() T) *Pool[T] {\n\treturn \u0026Pool[T]{\n\t\tpool: sync.Pool{\n\t\t\tNew: func() any {\n\t\t\t\treturn fn()\n\t\t\t},\n\t\t},\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[],"callers":[{"symbol":"New[*go.uber.org/zap.errArrayElem]","path":"internal/pool/pool.go"},{"symbol":"New[*go.uber.org/zap/buffer.Buffer]","path":"internal/pool/pool.go"},{"symbol":"New[*go.uber.org/zap/internal/stacktrace.Stack]","path":"internal/pool/pool.go"},{"symbol":"New[*go.uber.org/zap/zapcore.CheckedEntry]","path":"internal/pool/pool.go"},{"symbol":"New[*go.uber.org/zap/zapcore.errArrayElem]","path":"internal/pool/pool.go"},{"symbol":"New[*go.uber.org/zap/zapcore.jsonEncoder]","path":"internal/pool/pool.go"},{"symbol":"New[*go.uber.org/zap/zapcore.sliceArrayEncoder]","path":"internal/pool/pool.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/pool/pool.go","symbol":"(*Pool[T]).Get","signature":"func (p *Pool[T]) Get() T","start_line":51,"end_line":53,"code":"func (p *Pool[T]) Get() T {\n\treturn p.pool.Get().(T)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.67},"call_graph":{"callees":[{"symbol":"(*Pool).Get","path":"../../../../usr/local/go/src/sync/pool.go"}],"callers":[{"symbol":"(*Pool).Get[*go.uber.org/zap.errArrayElem]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Get[*go.uber.org/zap/buffer.Buffer]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Get[*go.uber.org/zap/internal/stacktrace.Stack]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Get[*go.uber.org/zap/zapcore.CheckedEntry]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Get[*go.uber.org/zap/zapcore.errArrayElem]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Get[*go.uber.org/zap/zapcore.jsonEncoder]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Get[*go.uber.org/zap/zapcore.sliceArrayEncoder]","path":"internal/pool/pool.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/pool/pool.go","symbol":"(*Pool[T]).Put","signature":"func (p *Pool[T]) Put(x T)","start_line":56,"end_line":58,"code":"func (p *Pool[T]) Put(x T) {\n\tp.pool.Put(x)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.63},"call_graph":{"callees":[{"symbol":"(*Pool).Put","path":"../../../../usr/local/go/src/sync/pool.go"}],"callers":[{"symbol":"(*Pool).Put[*go.uber.org/zap.errArrayElem]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Put[*go.uber.org/zap/buffer.Buffer]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Put[*go.uber.org/zap/internal/stacktrace.Stack]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Put[*go.uber.org/zap/zapcore.CheckedEntry]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Put[*go.uber.org/zap/zapcore.errArrayElem]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Put[*go.uber.org/zap/zapcore.jsonEncoder]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Put[*go.uber.org/zap/zapcore.sliceArrayEncoder]","path":"internal/pool/pool.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"main","signature":"func main()","start_line":51,"end_line":56,"code":"func main() {\n\tflag.Parse()\n\tif err := do(); err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"Fatal","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Parse","path":"../../../../usr/local/go/src/flag/flag.go"},{"symbol":"do","path":"internal/readme/readme.go"}],"callers":[{"symbol":"(*MockClock).Add","path":"internal/ztest/clock.go"},{"symbol":"(*http2Server).serveConn","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*sysDialer).dialParallel","path":"../../../../usr/local/go/src/net/dial.go"},{"symbol":"(*timeoutHandler).ServeHTTP","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"Add","path":"../../../../usr/local/go/src/internal/runtime/exithook/hooks.go"},{"symbol":"CloseIdleConnections$1","path":"../../../../usr/local/go/src/net/http/transport.go"},{"symbol":"SignPKCS1v15","path":"../../../../usr/local/go/src/crypto/internal/fips140/rsa/pkcs1v15.go"},{"symbol":"VerifyCtx","path":"../../../../usr/local/go/src/crypto/internal/fips140/ed25519/ed25519.go"},{"symbol":"signCtx","path":"../../../../usr/local/go/src/crypto/internal/fips140/ed25519/ed25519.go"},{"symbol":"verifyPSS","path":"../../../../usr/local/go/src/crypto/internal/fips140/rsa/pkcs1v22.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"do","signature":"func do() error","start_line":58,"end_line":72,"code":"func do() error {\n\ttmplData, err := getTmplData()\n\tif err != nil {\n\t\treturn err\n\t}\n\tdata, err := io.ReadAll(os.Stdin)\n\tif err != nil {\n\t\treturn err\n\t}\n\tt, err := template.New(\"tmpl\").Parse(string(data))\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn t.Execute(os.Stdout, tmplData)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*Template).Execute","path":"../../../../usr/local/go/src/text/template/exec.go"},{"symbol":"(*Template).Parse","path":"../../../../usr/local/go/src/text/template/template.go"},{"symbol":"New","path":"../../../../usr/local/go/src/text/template/template.go"},{"symbol":"ReadAll","path":"../../../../usr/local/go/src/io/io.go"},{"symbol":"getTmplData","path":"internal/readme/readme.go"}],"callers":[{"symbol":"(*bodyEOFSignal).Close","path":"../../../../usr/local/go/src/net/http/transport.go"},{"symbol":"(*http2ClientConn).roundTrip","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(Invoke).Invoke","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"},{"symbol":"CAST","path":"../../../../usr/local/go/src/crypto/internal/fips140/cast.go"},{"symbol":"PCT","path":"../../../../usr/local/go/src/crypto/internal/fips140/cast.go"},{"symbol":"Start$2","path":"../../../../usr/local/go/src/os/exec/exec.go"},{"symbol":"afterResolvingSymlink","path":"../../../../usr/local/go/src/os/root_unix.go"},{"symbol":"ignoringEINTR","path":"../../../../usr/local/go/src/os/file_posix.go"},{"symbol":"main","path":"internal/readme/readme.go"},{"symbol":"roundTrip$2","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"getTmplData","signature":"func getTmplData() (*tmplData, error)","start_line":74,"end_line":92,"code":"func getTmplData() (*tmplData, error) {\n\ttmplData := \u0026tmplData{}\n\trows, err := getBenchmarkRows(\"BenchmarkAddingFields\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\ttmplData.BenchmarkAddingFields = rows\n\trows, err = getBenchmarkRows(\"BenchmarkAccumulatedContext\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\ttmplData.BenchmarkAccumulatedContext = rows\n\trows, err = getBenchmarkRows(\"BenchmarkWithoutFields\")\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\ttmplData.BenchmarkWithoutFields = rows\n\treturn tmplData, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"getBenchmarkRows","path":"internal/readme/readme.go"}],"callers":[{"symbol":"do","path":"internal/readme/readme.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"getBenchmarkRows","signature":"func getBenchmarkRows(benchmarkName string) (string, error)","start_line":94,"end_line":128,"code":"func getBenchmarkRows(benchmarkName string) (string, error) {\n\tbenchmarkOutput, err := getBenchmarkOutput(benchmarkName)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\t// get the Zap time (unsugared) as baseline to compare with other loggers\n\tbaseline, err := getBenchmarkRow(benchmarkOutput, benchmarkName, \"Zap\", nil)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\n\tvar benchmarkRows []*benchmarkRow\n\tfor libraryName := range libraryNameToMarkdownName {\n\t\tbenchmarkRow, err := getBenchmarkRow(\n\t\t\tbenchmarkOutput, benchmarkName, libraryName, baseline,\n\t\t)\n\t\tif err != nil {\n\t\t\treturn \"\", err\n\t\t}\n\t\tif benchmarkRow == nil {\n\t\t\tcontinue\n\t\t}\n\t\tbenchmarkRows = append(benchmarkRows, benchmarkRow)\n\t}\n\tsort.Sort(benchmarkRowsByTime(benchmarkRows))\n\trows := []string{\n\t\t\"| Package | Time | Time % to zap | Objects Allocated |\",\n\t\t\"| :------ | :--: | :-----------: | :---------------: |\",\n\t}\n\tfor _, benchmarkRow := range benchmarkRows {\n\t\trows = append(rows, benchmarkRow.String())\n\t}\n\treturn strings.Join(rows, \"\\n\"), nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.51},"call_graph":{"callees":[{"symbol":"(*benchmarkRow).String","path":"internal/readme/readme.go"},{"symbol":"Join","path":"../../../../usr/local/go/src/strings/strings.go"},{"symbol":"Sort","path":"../../../../usr/local/go/src/sort/sort.go"},{"symbol":"getBenchmarkOutput","path":"internal/readme/readme.go"},{"symbol":"getBenchmarkRow","path":"internal/readme/readme.go"}],"callers":[{"symbol":"getTmplData","path":"internal/readme/readme.go"},{"symbol":"loadLocation","path":"../../../../usr/local/go/src/time/zoneinfo_read.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"getBenchmarkRow","signature":"func getBenchmarkRow(\n\tinput []string, benchmarkName string, libraryName string, baseline *benchmarkRow,\n) (*benchmarkRow, error)","start_line":130,"end_line":170,"code":"func getBenchmarkRow(\n\tinput []string, benchmarkName string, libraryName string, baseline *benchmarkRow,\n) (*benchmarkRow, error) {\n\tline, err := findUniqueSubstring(input, fmt.Sprintf(\"%s/%s-\", benchmarkName, libraryName))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tif line == \"\" {\n\t\treturn nil, nil\n\t}\n\tsplit := strings.Split(line, \"\\t\")\n\tif len(split) \u003c 5 {\n\t\treturn nil, fmt.Errorf(\"unknown benchmark line: %s\", line)\n\t}\n\tduration, err := time.ParseDuration(strings.ReplaceAll(strings.TrimSuffix(strings.TrimSpace(split[2]), \"/op\"), \" \", \"\"))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tallocatedBytes, err := strconv.Atoi(strings.TrimSuffix(strings.TrimSpace(split[3]), \" B/op\"))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tallocatedObjects, err := strconv.Atoi(strings.TrimSuffix(strings.TrimSpace(split[4]), \" allocs/op\"))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tr := \u0026benchmarkRow{\n\t\tName:             libraryNameToMarkdownName[libraryName],\n\t\tTime:             duration,\n\t\tAllocatedBytes:   allocatedBytes,\n\t\tAllocatedObjects: allocatedObjects,\n\t}\n\n\tif baseline != nil {\n\t\tr.ZapTime = baseline.Time\n\t\tr.ZapAllocatedBytes = baseline.AllocatedBytes\n\t\tr.ZapAllocatedObjects = baseline.AllocatedObjects\n\t}\n\n\treturn r, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.51},"call_graph":{"callees":[{"symbol":"Atoi","path":"../../../../usr/local/go/src/strconv/atoi.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"},{"symbol":"ParseDuration","path":"../../../../usr/local/go/src/time/format.go"},{"symbol":"ReplaceAll","path":"../../../../usr/local/go/src/strings/strings.go"},{"symbol":"Split","path":"../../../../usr/local/go/src/strings/strings.go"},{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"TrimSpace","path":"../../../../usr/local/go/src/strings/strings.go"},{"symbol":"TrimSuffix","path":"../../../../usr/local/go/src/strings/strings.go"},{"symbol":"findUniqueSubstring","path":"internal/readme/readme.go"}],"callers":[{"symbol":"getBenchmarkRows","path":"internal/readme/readme.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"findUniqueSubstring","signature":"func findUniqueSubstring(input []string, substring string) (string, error)","start_line":172,"end_line":183,"code":"func findUniqueSubstring(input []string, substring string) (string, error) {\n\tvar output string\n\tfor _, line := range input {\n\t\tif strings.Contains(line, substring) {\n\t\t\tif output != \"\" {\n\t\t\t\treturn \"\", fmt.Errorf(\"input has duplicate substring %s\", substring)\n\t\t\t}\n\t\t\toutput = line\n\t\t}\n\t}\n\treturn output, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"Contains","path":"../../../../usr/local/go/src/strings/strings.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"}],"callers":[{"symbol":"getBenchmarkRow","path":"internal/readme/readme.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"getBenchmarkOutput","signature":"func getBenchmarkOutput(benchmarkName string) ([]string, error)","start_line":185,"end_line":193,"code":"func getBenchmarkOutput(benchmarkName string) ([]string, error) {\n\tcmd := exec.Command(\"go\", \"test\", fmt.Sprintf(\"-bench=%s\", benchmarkName), \"-benchmem\")\n\tcmd.Dir = \"benchmarks\"\n\toutput, err := cmd.CombinedOutput()\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"error running 'go test -bench=%q': %v\\n%s\", benchmarkName, err, string(output))\n\t}\n\treturn strings.Split(string(output), \"\\n\"), nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*Cmd).CombinedOutput","path":"../../../../usr/local/go/src/os/exec/exec.go"},{"symbol":"Command","path":"../../../../usr/local/go/src/os/exec/exec.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"},{"symbol":"Split","path":"../../../../usr/local/go/src/strings/strings.go"},{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"getBenchmarkRows","path":"internal/readme/readme.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"(*benchmarkRow).String","signature":"func (b *benchmarkRow) String() string","start_line":213,"end_line":227,"code":"func (b *benchmarkRow) String() string {\n\tpct := func(val, baseline int64) string {\n\t\treturn fmt.Sprintf(\n\t\t\t\"%+0.f%%\",\n\t\t\t((float64(val)/float64(baseline))*100)-100,\n\t\t)\n\t}\n\tt := b.Time.Nanoseconds()\n\ttp := pct(t, b.ZapTime.Nanoseconds())\n\n\treturn fmt.Sprintf(\n\t\t\"| %s | %d ns/op | %s | %d allocs/op\", b.Name,\n\t\tt, tp, b.AllocatedObjects,\n\t)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.78},"call_graph":{"callees":[{"symbol":"(Duration).Nanoseconds","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"String$1","path":"internal/readme/readme.go"}],"callers":[{"symbol":"(*pp).handleMethods","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"(http2FrameWriteRequest).String","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"contextName","path":"../../../../usr/local/go/src/context/context.go"},{"symbol":"encodeStringer","path":"zapcore/field.go"},{"symbol":"getBenchmarkRows","path":"internal/readme/readme.go"},{"symbol":"preprintpanics","path":"../../../../usr/local/go/src/runtime/panic.go"},{"symbol":"stringify","path":"../../../../usr/local/go/src/context/context.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/readme/readme.go","symbol":"(benchmarkRowsByTime).Less","signature":"func (b benchmarkRowsByTime) Less(i, j int) bool","start_line":233,"end_line":243,"code":"func (b benchmarkRowsByTime) Less(i, j int) bool {\n\tleft, right := b[i], b[j]\n\tleftZap, rightZap := strings.Contains(left.Name, \"zap\"), strings.Contains(right.Name, \"zap\")\n\n\t// If neither benchmark is for zap or both are, sort by time.\n\tif leftZap == rightZap {\n\t\treturn left.Time.Nanoseconds() \u003c right.Time.Nanoseconds()\n\t}\n\t// Sort zap benchmark first.\n\treturn leftZap\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(Duration).Nanoseconds","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"Contains","path":"../../../../usr/local/go/src/strings/strings.go"}],"callers":[{"symbol":"(*benchmarkRowsByTime).Less","path":"internal/readme/readme.go"},{"symbol":"(reverse).Less","path":"../../../../usr/local/go/src/sort/sort.go"},{"symbol":"IsSorted","path":"../../../../usr/local/go/src/sort/sort.go"},{"symbol":"insertionSort","path":"../../../../usr/local/go/src/sort/zsortinterface.go"},{"symbol":"order2","path":"../../../../usr/local/go/src/sort/zsortinterface.go"},{"symbol":"partialInsertionSort","path":"../../../../usr/local/go/src/sort/zsortinterface.go"},{"symbol":"partition","path":"../../../../usr/local/go/src/sort/zsortinterface.go"},{"symbol":"pdqsort","path":"../../../../usr/local/go/src/sort/zsortinterface.go"},{"symbol":"siftDown","path":"../../../../usr/local/go/src/sort/zsortinterface.go"},{"symbol":"symMerge","path":"../../../../usr/local/go/src/sort/zsortinterface.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/stacktrace/stack.go","symbol":"Capture","signature":"func Capture(skip int, depth Depth) *Stack","start_line":71,"end_line":109,"code":"func Capture(skip int, depth Depth) *Stack {\n\tstack := _stackPool.Get()\n\n\tswitch depth {\n\tcase First:\n\t\tstack.pcs = stack.storage[:1]\n\tcase Full:\n\t\tstack.pcs = stack.storage\n\t}\n\n\t// Unlike other \"skip\"-based APIs, skip=0 identifies runtime.Callers\n\t// itself. +2 to skip captureStacktrace and runtime.Callers.\n\tnumFrames := runtime.Callers(\n\t\tskip+2,\n\t\tstack.pcs,\n\t)\n\n\t// runtime.Callers truncates the recorded stacktrace if there is no\n\t// room in the provided slice. For the full stack trace, keep expanding\n\t// storage until there are fewer frames than there is room.\n\tif depth == Full {\n\t\tpcs := stack.pcs\n\t\tfor numFrames == len(pcs) {\n\t\t\tpcs = make([]uintptr, len(pcs)*2)\n\t\t\tnumFrames = runtime.Callers(skip+2, pcs)\n\t\t}\n\n\t\t// Discard old storage instead of returning it to the pool.\n\t\t// This will adjust the pool size over time if stack traces are\n\t\t// consistently very deep.\n\t\tstack.storage = pcs\n\t\tstack.pcs = pcs[:numFrames]\n\t} else {\n\t\tstack.pcs = stack.pcs[:numFrames]\n\t}\n\n\tstack.frames = runtime.CallersFrames(stack.pcs)\n\treturn stack\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*Pool).Get[*go.uber.org/zap/internal/stacktrace.Stack]","path":"internal/pool/pool.go"},{"symbol":"Callers","path":"../../../../usr/local/go/src/runtime/extern.go"},{"symbol":"CallersFrames","path":"../../../../usr/local/go/src/runtime/symtab.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"Take","path":"internal/stacktrace/stack.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/stacktrace/stack.go","symbol":"(*Stack).Free","signature":"func (st *Stack) Free()","start_line":113,"end_line":117,"code":"func (st *Stack) Free() {\n\tst.frames = nil\n\tst.pcs = nil\n\t_stackPool.Put(st)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.74},"call_graph":{"callees":[{"symbol":"(*Pool).Put[*go.uber.org/zap/internal/stacktrace.Stack]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"Take","path":"internal/stacktrace/stack.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/stacktrace/stack.go","symbol":"(*Stack).Count","signature":"func (st *Stack) Count() int","start_line":121,"end_line":123,"code":"func (st *Stack) Count() int {\n\treturn len(st.pcs)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).check","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/stacktrace/stack.go","symbol":"(*Stack).Next","signature":"func (st *Stack) Next() (_ runtime.Frame, more bool)","start_line":127,"end_line":129,"code":"func (st *Stack) Next() (_ runtime.Frame, more bool) {\n\treturn st.frames.Next()\n}\n","selection":{"visibility":"exported","reason":"other","score":0.62},"call_graph":{"callees":[{"symbol":"(*Frames).Next","path":"../../../../usr/local/go/src/runtime/symtab.go"}],"callers":[{"symbol":"(*Formatter).FormatStack","path":"internal/stacktrace/stack.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/stacktrace/stack.go","symbol":"Take","signature":"func Take(skip int) string","start_line":135,"end_line":145,"code":"func Take(skip int) string {\n\tstack := Capture(skip+1, Full)\n\tdefer stack.Free()\n\n\tbuffer := bufferpool.Get()\n\tdefer buffer.Free()\n\n\tstackfmt := NewFormatter(buffer)\n\tstackfmt.FormatStack(stack)\n\treturn buffer.String()\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*Buffer).Free","path":"buffer/buffer.go"},{"symbol":"(*Buffer).String","path":"buffer/buffer.go"},{"symbol":"(*Formatter).FormatStack","path":"internal/stacktrace/stack.go"},{"symbol":"(*Stack).Free","path":"internal/stacktrace/stack.go"},{"symbol":"(Pool).Get","path":"buffer/pool.go"},{"symbol":"Capture","path":"internal/stacktrace/stack.go"},{"symbol":"NewFormatter","path":"internal/stacktrace/stack.go"},{"symbol":"NewPool$1","path":"buffer/pool.go"}],"callers":[{"symbol":"StackSkip","path":"field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/stacktrace/stack.go","symbol":"NewFormatter","signature":"func NewFormatter(b *buffer.Buffer) Formatter","start_line":154,"end_line":156,"code":"func NewFormatter(b *buffer.Buffer) Formatter {\n\treturn Formatter{b: b}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.76},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"Take","path":"internal/stacktrace/stack.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/stacktrace/stack.go","symbol":"(*Formatter).FormatStack","signature":"func (sf *Formatter) FormatStack(stack *Stack)","start_line":160,"end_line":167,"code":"func (sf *Formatter) FormatStack(stack *Stack) {\n\t// Note: On the last iteration, frames.Next() returns false, with a valid\n\t// frame, but we ignore this frame. The last frame is a runtime frame which\n\t// adds noise, since it's only either runtime.main or runtime.goexit.\n\tfor frame, more := stack.Next(); more; frame, more = stack.Next() {\n\t\tsf.FormatFrame(frame)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*Formatter).FormatFrame","path":"internal/stacktrace/stack.go"},{"symbol":"(*Stack).Next","path":"internal/stacktrace/stack.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"Take","path":"internal/stacktrace/stack.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/stacktrace/stack.go","symbol":"(*Formatter).FormatFrame","signature":"func (sf *Formatter) FormatFrame(frame runtime.Frame)","start_line":170,"end_line":181,"code":"func (sf *Formatter) FormatFrame(frame runtime.Frame) {\n\tif sf.nonEmpty {\n\t\tsf.b.AppendByte('\\n')\n\t}\n\tsf.nonEmpty = true\n\tsf.b.AppendString(frame.Function)\n\tsf.b.AppendByte('\\n')\n\tsf.b.AppendByte('\\t')\n\tsf.b.AppendString(frame.File)\n\tsf.b.AppendByte(':')\n\tsf.b.AppendInt(int64(frame.Line))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendInt","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendString","path":"buffer/buffer.go"}],"callers":[{"symbol":"(*Formatter).FormatStack","path":"internal/stacktrace/stack.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/clock.go","symbol":"NewMockClock","signature":"func NewMockClock() *MockClock","start_line":47,"end_line":51,"code":"func NewMockClock() *MockClock {\n\treturn \u0026MockClock{\n\t\tnow: time.Now(),\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"Now","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/clock.go","symbol":"(*MockClock).Now","signature":"func (c *MockClock) Now() time.Time","start_line":54,"end_line":58,"code":"func (c *MockClock) Now() time.Time {\n\tc.mu.RLock()\n\tdefer c.mu.RUnlock()\n\treturn c.now\n}\n","selection":{"visibility":"exported","reason":"other","score":0.72},"call_graph":{"callees":[{"symbol":"(*RWMutex).RLock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).RUnlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*MockClock).NewTicker","path":"internal/ztest/clock.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/clock.go","symbol":"(*MockClock).NewTicker","signature":"func (c *MockClock) NewTicker(d time.Duration) *time.Ticker","start_line":68,"end_line":89,"code":"func (c *MockClock) NewTicker(d time.Duration) *time.Ticker {\n\tch := make(chan time.Time, 1)\n\n\tvar tick func(time.Time)\n\ttick = func(now time.Time) {\n\t\tnext := now.Add(d)\n\t\tc.runAt(next, func() {\n\t\t\tdefer tick(next)\n\n\t\t\tselect {\n\t\t\tcase ch \u003c- next:\n\t\t\t\t// ok\n\t\t\tdefault:\n\t\t\t\t// The receiver is slow.\n\t\t\t\t// Drop the tick and continue.\n\t\t\t}\n\t\t})\n\t}\n\ttick(c.Now())\n\n\treturn \u0026time.Ticker{C: ch}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.86},"call_graph":{"callees":[{"symbol":"(*MockClock).Now","path":"internal/ztest/clock.go"},{"symbol":"NewTicker$1","path":"internal/ztest/clock.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).initialize","path":"zapcore/buffered_write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/clock.go","symbol":"(*MockClock).runAt","signature":"func (c *MockClock) runAt(t time.Time, fn func())","start_line":93,"end_line":97,"code":"func (c *MockClock) runAt(t time.Time, fn func()) {\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\tc.waiters = append(c.waiters, waiter{until: t, fn: fn})\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*RWMutex).Lock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).Unlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[{"symbol":"NewTicker$1","path":"internal/ztest/clock.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/clock.go","symbol":"(*MockClock).Add","signature":"func (c *MockClock) Add(d time.Duration)","start_line":113,"end_line":153,"code":"func (c *MockClock) Add(d time.Duration) {\n\tif d \u003c 0 {\n\t\tpanic(\"cannot add negative duration\")\n\t}\n\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\n\tsort.Slice(c.waiters, func(i, j int) bool {\n\t\treturn c.waiters[i].until.Before(c.waiters[j].until)\n\t})\n\n\tnewTime := c.now.Add(d)\n\t// newTime won't be recorded until the end of this method.\n\t// This ensures that any waiters that are resolved\n\t// are resolved at the time they were expecting.\n\n\tfor len(c.waiters) \u003e 0 {\n\t\tw := c.waiters[0]\n\t\tif w.until.After(newTime) {\n\t\t\tbreak\n\t\t}\n\t\tc.waiters[0] = waiter{} // avoid memory leak\n\t\tc.waiters = c.waiters[1:]\n\n\t\t// The waiter is within range.\n\t\t// Travel to the time of the waiter and resolve it.\n\t\tc.now = w.until\n\n\t\t// The waiter may schedule more work\n\t\t// so we must release the lock.\n\t\tc.mu.Unlock()\n\t\tw.fn()\n\t\t// Sleeping here is necessary to let the side effects of waiters\n\t\t// take effect before we continue.\n\t\ttime.Sleep(1 * time.Millisecond)\n\t\tc.mu.Lock()\n\t}\n\n\tc.now = newTime\n}\n","selection":{"visibility":"exported","reason":"other","score":0.73},"call_graph":{"callees":[{"symbol":"(*RWMutex).Lock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).Unlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(Time).Add","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"(Time).After","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"Sleep","path":"../../../../usr/local/go/src/time/sleep.go"},{"symbol":"Slice","path":"../../../../usr/local/go/src/sort/slice.go"},{"symbol":"_LostSIGPROFDuringAtomic64","path":"../../../../usr/local/go/src/runtime/proc.go"},{"symbol":"generatorTable$1","path":"../../../../usr/local/go/src/crypto/internal/fips140/nistec/p224.go"},{"symbol":"init#1","path":"../../../../usr/local/go/src/crypto/internal/fips140/hkdf/cast.go"},{"symbol":"traceAdvance$2","path":"../../../../usr/local/go/src/runtime/trace.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/timeout.go","symbol":"Timeout","signature":"func Timeout(base time.Duration) time.Duration","start_line":33,"end_line":35,"code":"func Timeout(base time.Duration) time.Duration {\n\treturn time.Duration(float64(base) * _timeoutScale)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[],"callers":[{"symbol":"Sleep","path":"internal/ztest/timeout.go"},{"symbol":"Timeout","path":"zaptest/timeout.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/timeout.go","symbol":"Sleep","signature":"func Sleep(base time.Duration)","start_line":38,"end_line":40,"code":"func Sleep(base time.Duration) {\n\ttime.Sleep(Timeout(base))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"Sleep","path":"../../../../usr/local/go/src/time/sleep.go"},{"symbol":"Timeout","path":"internal/ztest/timeout.go"}],"callers":[{"symbol":"Sleep","path":"zaptest/timeout.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/timeout.go","symbol":"Initialize","signature":"func Initialize(factor string) func()","start_line":44,"end_line":52,"code":"func Initialize(factor string) func() {\n\tfv, err := strconv.ParseFloat(factor, 64)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\toriginal := _timeoutScale\n\t_timeoutScale = fv\n\treturn func() { _timeoutScale = original }\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"ParseFloat","path":"../../../../usr/local/go/src/strconv/atof.go"}],"callers":[{"symbol":"(*godebugInc).IncNonDefault","path":"../../../../usr/local/go/src/runtime/runtime.go"},{"symbol":"init#1","path":"internal/ztest/timeout.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/timeout.go","symbol":"init","signature":"func init()","start_line":54,"end_line":59,"code":"func init() {\n\tif v := os.Getenv(\"TEST_TIMEOUT_SCALE\"); v != \"\" {\n\t\tInitialize(v)\n\t\tlog.Printf(\"Scaling timeouts by %vx.\\n\", _timeoutScale)\n\t}\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*HashTrieMap).initSlow[K V]","path":"../../../../usr/local/go/src/internal/sync/hashtriemap.go"},{"symbol":"(*Uint32).Load","path":"../../../../usr/local/go/src/sync/atomic/type.go"}],"callers":[{"symbol":"(*HashTrieMap).init[K V]","path":"../../../../usr/local/go/src/internal/sync/hashtriemap.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/writer.go","symbol":"(*Syncer).SetError","signature":"func (s *Syncer) SetError(err error)","start_line":37,"end_line":39,"code":"func (s *Syncer) SetError(err error) {\n\ts.err = err\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"(*Buffer).SetError","path":"internal/ztest/writer.go"},{"symbol":"(*Discarder).SetError","path":"internal/ztest/writer.go"},{"symbol":"(*FailWriter).SetError","path":"internal/ztest/writer.go"},{"symbol":"(*ShortWriter).SetError","path":"internal/ztest/writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/writer.go","symbol":"(*Syncer).Sync","signature":"func (s *Syncer) Sync() error","start_line":43,"end_line":46,"code":"func (s *Syncer) Sync() error {\n\ts.called = true\n\treturn s.err\n}\n","selection":{"visibility":"exported","reason":"other","score":0.66},"call_graph":{"callees":[],"callers":[{"symbol":"(*Buffer).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Discarder).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*FailWriter).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*ShortWriter).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/writer.go","symbol":"(*Syncer).Called","signature":"func (s *Syncer) Called() bool","start_line":49,"end_line":51,"code":"func (s *Syncer) Called() bool {\n\treturn s.called\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[],"callers":[{"symbol":"(*Buffer).Called","path":"internal/ztest/writer.go"},{"symbol":"(*Discarder).Called","path":"internal/ztest/writer.go"},{"symbol":"(*FailWriter).Called","path":"internal/ztest/writer.go"},{"symbol":"(*ShortWriter).Called","path":"internal/ztest/writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/writer.go","symbol":"(*Discarder).Write","signature":"func (d *Discarder) Write(b []byte) (int, error)","start_line":57,"end_line":59,"code":"func (d *Discarder) Write(b []byte) (int, error) {\n\treturn io.Discard.Write(b)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"(*Conn).writeHandshakeRecord","path":"../../../../usr/local/go/src/crypto/tls/conn.go"},{"symbol":"(*ShortWriter).Write","path":"internal/ztest/writer.go"},{"symbol":"(*Writer).writeBytes","path":"../../../../usr/local/go/src/compress/gzip/gzip.go"},{"symbol":"(*Writer).writeString","path":"../../../../usr/local/go/src/compress/gzip/gzip.go"},{"symbol":"(*normWriter).Close","path":"../../../../usr/local/go/src/vendor/golang.org/x/text/unicode/norm/readwriter.go"},{"symbol":"(*part).Write","path":"../../../../usr/local/go/src/mime/multipart/writer.go"},{"symbol":"Dump","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"Encode","path":"../../../../usr/local/go/src/encoding/pem/pem.go"},{"symbol":"Fprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"writePrefixLine","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/writer.go","symbol":"(FailWriter).Write","signature":"func (w FailWriter) Write(b []byte) (int, error)","start_line":65,"end_line":67,"code":"func (w FailWriter) Write(b []byte) (int, error) {\n\treturn len(b), errors.New(\"failed\")\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"New","path":"../../../../usr/local/go/src/errors/errors.go"}],"callers":[{"symbol":"(*Discarder).Write","path":"internal/ztest/writer.go"},{"symbol":"(*FailWriter).Write","path":"internal/ztest/writer.go"},{"symbol":"(*http2Framer).endWrite","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*ioCore).Write","path":"zapcore/core.go"},{"symbol":"(*multiWriter).Write","path":"../../../../usr/local/go/src/io/multi.go"},{"symbol":"(*normWriter).Write","path":"../../../../usr/local/go/src/vendor/golang.org/x/text/unicode/norm/readwriter.go"},{"symbol":"(*teeReader).Read","path":"../../../../usr/local/go/src/io/io.go"},{"symbol":"(multiWriteSyncer).Write","path":"zapcore/write_syncer.go"},{"symbol":"Fprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"copyBuffer","path":"../../../../usr/local/go/src/io/io.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/writer.go","symbol":"(ShortWriter).Write","signature":"func (w ShortWriter) Write(b []byte) (int, error)","start_line":74,"end_line":76,"code":"func (w ShortWriter) Write(b []byte) (int, error) {\n\treturn len(b) - 1, nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"New","path":"../../../../usr/local/go/src/errors/errors.go"}],"callers":[{"symbol":"(*Buffers).WriteTo","path":"../../../../usr/local/go/src/net/net.go"},{"symbol":"(*Encoder).WriteField","path":"../../../../usr/local/go/src/vendor/golang.org/x/net/http2/hpack/encode.go"},{"symbol":"(*FailWriter).Write","path":"internal/ztest/writer.go"},{"symbol":"(*Reader).WriteTo","path":"../../../../usr/local/go/src/bytes/reader.go"},{"symbol":"(*chunkedWriter).Write","path":"../../../../usr/local/go/src/net/http/internal/chunked.go"},{"symbol":"(*lineBreaker).Close","path":"../../../../usr/local/go/src/encoding/pem/pem.go"},{"symbol":"(*lineBreaker).Write","path":"../../../../usr/local/go/src/encoding/pem/pem.go"},{"symbol":"(*part).Write","path":"../../../../usr/local/go/src/mime/multipart/writer.go"},{"symbol":"JSEscape","path":"../../../../usr/local/go/src/text/template/funcs.go"},{"symbol":"printFileLine","path":"../../../../usr/local/go/src/internal/bisect/bisect.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/writer.go","symbol":"(*Buffer).Lines","signature":"func (b *Buffer) Lines() []string","start_line":87,"end_line":90,"code":"func (b *Buffer) Lines() []string {\n\toutput := strings.Split(b.String(), \"\\n\")\n\treturn output[:len(output)-1]\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*Buffer).String","path":"../../../../usr/local/go/src/bytes/buffer.go"},{"symbol":"Split","path":"../../../../usr/local/go/src/strings/strings.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"internal/ztest/writer.go","symbol":"(*Buffer).Stripped","signature":"func (b *Buffer) Stripped() string","start_line":94,"end_line":96,"code":"func (b *Buffer) Stripped() string {\n\treturn strings.TrimRight(b.String(), \"\\n\")\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*Buffer).String","path":"../../../../usr/local/go/src/bytes/buffer.go"},{"symbol":"TrimRight","path":"../../../../usr/local/go/src/strings/strings.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"NewAtomicLevel","signature":"func NewAtomicLevel() AtomicLevel","start_line":79,"end_line":83,"code":"func NewAtomicLevel() AtomicLevel {\n\tlvl := AtomicLevel{l: new(atomic.Int32)}\n\tlvl.l.Store(int32(InfoLevel))\n\treturn lvl\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.86},"call_graph":{"callees":[{"symbol":"(*Int32).Store","path":"../../../../usr/local/go/src/sync/atomic/type.go"}],"callers":[{"symbol":"NewAtomicLevelAt","path":"level.go"},{"symbol":"ParseAtomicLevel","path":"level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"NewAtomicLevelAt","signature":"func NewAtomicLevelAt(l zapcore.Level) AtomicLevel","start_line":87,"end_line":91,"code":"func NewAtomicLevelAt(l zapcore.Level) AtomicLevel {\n\ta := NewAtomicLevel()\n\ta.SetLevel(l)\n\treturn a\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.86},"call_graph":{"callees":[{"symbol":"(AtomicLevel).SetLevel","path":"level.go"},{"symbol":"NewAtomicLevel","path":"level.go"}],"callers":[{"symbol":"NewDevelopmentConfig","path":"config.go"},{"symbol":"NewProductionConfig","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"ParseAtomicLevel","signature":"func ParseAtomicLevel(text string) (AtomicLevel, error)","start_line":99,"end_line":108,"code":"func ParseAtomicLevel(text string) (AtomicLevel, error) {\n\ta := NewAtomicLevel()\n\tl, err := zapcore.ParseLevel(text)\n\tif err != nil {\n\t\treturn a, err\n\t}\n\n\ta.SetLevel(l)\n\treturn a, nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(AtomicLevel).SetLevel","path":"level.go"},{"symbol":"NewAtomicLevel","path":"level.go"},{"symbol":"ParseLevel","path":"zapcore/level.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"(AtomicLevel).Enabled","signature":"func (lvl AtomicLevel) Enabled(l zapcore.Level) bool","start_line":112,"end_line":114,"code":"func (lvl AtomicLevel) Enabled(l zapcore.Level) bool {\n\treturn lvl.Level().Enabled(l)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.68},"call_graph":{"callees":[{"symbol":"(AtomicLevel).Level","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"}],"callers":[{"symbol":"(*AtomicLevel).Enabled","path":"level.go"},{"symbol":"(*Logger).Errorln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Infoln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Warningln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"LevelOf","path":"zapcore/level.go"},{"symbol":"NewIncreaseLevelCore","path":"zapcore/increase_level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"(AtomicLevel).Level","signature":"func (lvl AtomicLevel) Level() zapcore.Level","start_line":117,"end_line":119,"code":"func (lvl AtomicLevel) Level() zapcore.Level {\n\treturn zapcore.Level(int8(lvl.l.Load()))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.63},"call_graph":{"callees":[{"symbol":"(*Int32).Load","path":"../../../../usr/local/go/src/sync/atomic/type.go"}],"callers":[{"symbol":"(*AtomicLevel).Level","path":"level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(AtomicLevel).MarshalText","path":"level.go"},{"symbol":"(AtomicLevel).String","path":"level.go"},{"symbol":"(AtomicLevel).serveHTTP","path":"http_handler.go"},{"symbol":"LevelOf","path":"zapcore/level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"(AtomicLevel).SetLevel","signature":"func (lvl AtomicLevel) SetLevel(l zapcore.Level)","start_line":122,"end_line":124,"code":"func (lvl AtomicLevel) SetLevel(l zapcore.Level) {\n\tlvl.l.Store(int32(l))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.62},"call_graph":{"callees":[{"symbol":"(*Int32).Store","path":"../../../../usr/local/go/src/sync/atomic/type.go"}],"callers":[{"symbol":"(*AtomicLevel).SetLevel","path":"level.go"},{"symbol":"(*AtomicLevel).UnmarshalText","path":"level.go"},{"symbol":"(AtomicLevel).serveHTTP","path":"http_handler.go"},{"symbol":"NewAtomicLevelAt","path":"level.go"},{"symbol":"ParseAtomicLevel","path":"level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"(AtomicLevel).String","signature":"func (lvl AtomicLevel) String() string","start_line":127,"end_line":129,"code":"func (lvl AtomicLevel) String() string {\n\treturn lvl.Level().String()\n}\n","selection":{"visibility":"exported","reason":"other","score":0.68},"call_graph":{"callees":[{"symbol":"(AtomicLevel).Level","path":"level.go"},{"symbol":"(Level).String","path":"zapcore/level.go"}],"callers":[{"symbol":"(*AtomicLevel).String","path":"level.go"},{"symbol":"(*pp).handleMethods","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"(http2FrameWriteRequest).String","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"contextName","path":"../../../../usr/local/go/src/context/context.go"},{"symbol":"encodeStringer","path":"zapcore/field.go"},{"symbol":"preprintpanics","path":"../../../../usr/local/go/src/runtime/panic.go"},{"symbol":"stringify","path":"../../../../usr/local/go/src/context/context.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"(*AtomicLevel).UnmarshalText","signature":"func (lvl *AtomicLevel) UnmarshalText(text []byte) error","start_line":134,"end_line":146,"code":"func (lvl *AtomicLevel) UnmarshalText(text []byte) error {\n\tif lvl.l == nil {\n\t\tlvl.l = \u0026atomic.Int32{}\n\t}\n\n\tvar l zapcore.Level\n\tif err := l.UnmarshalText(text); err != nil {\n\t\treturn err\n\t}\n\n\tlvl.SetLevel(l)\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.72},"call_graph":{"callees":[{"symbol":"(*Level).UnmarshalText","path":"zapcore/level.go"},{"symbol":"(AtomicLevel).SetLevel","path":"level.go"}],"callers":[{"symbol":"(*decodeState).literalStore","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(textValue).Set","path":"../../../../usr/local/go/src/flag/flag.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"level.go","symbol":"(AtomicLevel).MarshalText","signature":"func (lvl AtomicLevel) MarshalText() (text []byte, err error)","start_line":151,"end_line":153,"code":"func (lvl AtomicLevel) MarshalText() (text []byte, err error) {\n\treturn lvl.Level().MarshalText()\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(AtomicLevel).Level","path":"level.go"},{"symbol":"(Level).MarshalText","path":"zapcore/level.go"}],"callers":[{"symbol":"(*AtomicLevel).MarshalText","path":"level.go"},{"symbol":"(textValue).String","path":"../../../../usr/local/go/src/flag/flag.go"},{"symbol":"addrTextMarshalerEncoder","path":"../../../../usr/local/go/src/encoding/json/encode.go"},{"symbol":"resolveKeyName","path":"../../../../usr/local/go/src/encoding/json/encode.go"},{"symbol":"textMarshalerEncoder","path":"../../../../usr/local/go/src/encoding/json/encode.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"New","signature":"func New(core zapcore.Core, options ...Option) *Logger","start_line":69,"end_line":80,"code":"func New(core zapcore.Core, options ...Option) *Logger {\n\tif core == nil {\n\t\treturn NewNop()\n\t}\n\tlog := \u0026Logger{\n\t\tcore:        core,\n\t\terrorOutput: zapcore.Lock(os.Stderr),\n\t\taddStack:    zapcore.FatalLevel + 1,\n\t\tclock:       zapcore.DefaultClock,\n\t}\n\treturn log.WithOptions(options...)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"Lock","path":"zapcore/write_syncer.go"},{"symbol":"NewNop","path":"logger.go"}],"callers":[{"symbol":"(Config).Build","path":"config.go"},{"symbol":"NewExample","path":"logger.go"},{"symbol":"NewLogger","path":"zaptest/logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"NewNop","signature":"func NewNop() *Logger","start_line":87,"end_line":94,"code":"func NewNop() *Logger {\n\treturn \u0026Logger{\n\t\tcore:        zapcore.NewNopCore(),\n\t\terrorOutput: zapcore.AddSync(io.Discard),\n\t\taddStack:    zapcore.FatalLevel + 1,\n\t\tclock:       zapcore.DefaultClock,\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.86},"call_graph":{"callees":[{"symbol":"AddSync","path":"zapcore/write_syncer.go"},{"symbol":"NewNopCore","path":"zapcore/core.go"}],"callers":[{"symbol":"New","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"NewProduction","signature":"func NewProduction(options ...Option) (*Logger, error)","start_line":100,"end_line":102,"code":"func NewProduction(options ...Option) (*Logger, error) {\n\treturn NewProductionConfig().Build(options...)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.75},"call_graph":{"callees":[{"symbol":"(Config).Build","path":"config.go"},{"symbol":"NewProductionConfig","path":"config.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"NewDevelopment","signature":"func NewDevelopment(options ...Option) (*Logger, error)","start_line":108,"end_line":110,"code":"func NewDevelopment(options ...Option) (*Logger, error) {\n\treturn NewDevelopmentConfig().Build(options...)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.75},"call_graph":{"callees":[{"symbol":"(Config).Build","path":"config.go"},{"symbol":"NewDevelopmentConfig","path":"config.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"Must","signature":"func Must(logger *Logger, err error) *Logger","start_line":117,"end_line":123,"code":"func Must(logger *Logger, err error) *Logger {\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\treturn logger\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"NewExample","signature":"func NewExample(options ...Option) *Logger","start_line":129,"end_line":140,"code":"func NewExample(options ...Option) *Logger {\n\tencoderCfg := zapcore.EncoderConfig{\n\t\tMessageKey:     \"msg\",\n\t\tLevelKey:       \"level\",\n\t\tNameKey:        \"logger\",\n\t\tEncodeLevel:    zapcore.LowercaseLevelEncoder,\n\t\tEncodeTime:     zapcore.ISO8601TimeEncoder,\n\t\tEncodeDuration: zapcore.StringDurationEncoder,\n\t}\n\tcore := zapcore.NewCore(zapcore.NewJSONEncoder(encoderCfg), os.Stdout, DebugLevel)\n\treturn New(core).WithOptions(options...)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"New","path":"logger.go"},{"symbol":"NewCore","path":"zapcore/core.go"},{"symbol":"NewJSONEncoder","path":"zapcore/json_encoder.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Sugar","signature":"func (log *Logger) Sugar() *SugaredLogger","start_line":146,"end_line":150,"code":"func (log *Logger) Sugar() *SugaredLogger {\n\tcore := log.clone()\n\tcore.callerSkip += 2\n\treturn \u0026SugaredLogger{core}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.86},"call_graph":{"callees":[{"symbol":"(*Logger).clone","path":"logger.go"}],"callers":[{"symbol":"NewLogger","path":"zapgrpc/zapgrpc.go"},{"symbol":"ReplaceGlobals","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Named","signature":"func (log *Logger) Named(s string) *Logger","start_line":154,"end_line":165,"code":"func (log *Logger) Named(s string) *Logger {\n\tif s == \"\" {\n\t\treturn log\n\t}\n\tl := log.clone()\n\tif log.name == \"\" {\n\t\tl.name = s\n\t} else {\n\t\tl.name = strings.Join([]string{l.name, s}, \".\")\n\t}\n\treturn l\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":[{"symbol":"(*Logger).clone","path":"logger.go"},{"symbol":"Join","path":"../../../../usr/local/go/src/strings/strings.go"}],"callers":[{"symbol":"(*SugaredLogger).Named","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).WithOptions","signature":"func (log *Logger) WithOptions(opts ...Option) *Logger","start_line":169,"end_line":175,"code":"func (log *Logger) WithOptions(opts ...Option) *Logger {\n\tc := log.clone()\n\tfor _, opt := range opts {\n\t\topt.apply(c)\n\t}\n\treturn c\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.88},"call_graph":{"callees":[{"symbol":"(*Logger).clone","path":"logger.go"},{"symbol":"(optionFunc).apply","path":"options.go"}],"callers":[{"symbol":"(*Logger).WithLazy","path":"logger.go"},{"symbol":"(Config).Build","path":"config.go"},{"symbol":"New","path":"logger.go"},{"symbol":"NewExample","path":"logger.go"},{"symbol":"NewStdLog","path":"global.go"},{"symbol":"NewStdLogAt","path":"global.go"},{"symbol":"redirectStdLogAt","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).With","signature":"func (log *Logger) With(fields ...Field) *Logger","start_line":180,"end_line":187,"code":"func (log *Logger) With(fields ...Field) *Logger {\n\tif len(fields) == 0 {\n\t\treturn log\n\t}\n\tl := log.clone()\n\tl.core = l.core.With(fields)\n\treturn l\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.89},"call_graph":{"callees":[{"symbol":"(*Logger).clone","path":"logger.go"},{"symbol":"(*contextObserver).With","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*ioCore).With","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"(nopCore).With","path":"zapcore/core.go"}],"callers":[{"symbol":"(*SugaredLogger).With","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).WithLazy","signature":"func (log *Logger) WithLazy(fields ...Field) *Logger","start_line":202,"end_line":209,"code":"func (log *Logger) WithLazy(fields ...Field) *Logger {\n\tif len(fields) == 0 {\n\t\treturn log\n\t}\n\treturn log.WithOptions(WrapCore(func(core zapcore.Core) zapcore.Core {\n\t\treturn zapcore.NewLazyWith(core, fields)\n\t}))\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":[{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"WrapCore","path":"options.go"}],"callers":[{"symbol":"(*SugaredLogger).WithLazy","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Level","signature":"func (log *Logger) Level() zapcore.Level","start_line":214,"end_line":216,"code":"func (log *Logger) Level() zapcore.Level {\n\treturn zapcore.LevelOf(log.core)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.63},"call_graph":{"callees":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Check","signature":"func (log *Logger) Check(lvl zapcore.Level, msg string) *zapcore.CheckedEntry","start_line":221,"end_line":223,"code":"func (log *Logger) Check(lvl zapcore.Level, msg string) *zapcore.CheckedEntry {\n\treturn log.check(lvl, msg)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.64},"call_graph":{"callees":[{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"},{"symbol":"(*SugaredLogger).logln","path":"sugar.go"},{"symbol":"(*Writer).log","path":"zapio/writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Log","signature":"func (log *Logger) Log(lvl zapcore.Level, msg string, fields ...Field)","start_line":229,"end_line":233,"code":"func (log *Logger) Log(lvl zapcore.Level, msg string, fields ...Field) {\n\tif ce := log.check(lvl, msg); ce != nil {\n\t\tce.Write(fields...)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Debug","signature":"func (log *Logger) Debug(msg string, fields ...Field)","start_line":237,"end_line":241,"code":"func (log *Logger) Debug(msg string, fields ...Field) {\n\tif ce := log.check(DebugLevel, msg); ce != nil {\n\t\tce.Write(fields...)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[{"symbol":"(*loggerWriter).Write","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Info","signature":"func (log *Logger) Info(msg string, fields ...Field)","start_line":245,"end_line":249,"code":"func (log *Logger) Info(msg string, fields ...Field) {\n\tif ce := log.check(InfoLevel, msg); ce != nil {\n\t\tce.Write(fields...)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[{"symbol":"(*loggerWriter).Write","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Warn","signature":"func (log *Logger) Warn(msg string, fields ...Field)","start_line":253,"end_line":257,"code":"func (log *Logger) Warn(msg string, fields ...Field) {\n\tif ce := log.check(WarnLevel, msg); ce != nil {\n\t\tce.Write(fields...)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[{"symbol":"(*loggerWriter).Write","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Error","signature":"func (log *Logger) Error(msg string, fields ...Field)","start_line":261,"end_line":265,"code":"func (log *Logger) Error(msg string, fields ...Field) {\n\tif ce := log.check(ErrorLevel, msg); ce != nil {\n\t\tce.Write(fields...)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.74},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[{"symbol":"(*SugaredLogger).sweetenFields","path":"sugar.go"},{"symbol":"(*loggerWriter).Write","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).DPanic","signature":"func (log *Logger) DPanic(msg string, fields ...Field)","start_line":273,"end_line":277,"code":"func (log *Logger) DPanic(msg string, fields ...Field) {\n\tif ce := log.check(DPanicLevel, msg); ce != nil {\n\t\tce.Write(fields...)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[{"symbol":"(*loggerWriter).Write","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Panic","signature":"func (log *Logger) Panic(msg string, fields ...Field)","start_line":283,"end_line":287,"code":"func (log *Logger) Panic(msg string, fields ...Field) {\n\tif ce := log.check(PanicLevel, msg); ce != nil {\n\t\tce.Write(fields...)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[{"symbol":"(*loggerWriter).Write","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Fatal","signature":"func (log *Logger) Fatal(msg string, fields ...Field)","start_line":294,"end_line":298,"code":"func (log *Logger) Fatal(msg string, fields ...Field) {\n\tif ce := log.check(FatalLevel, msg); ce != nil {\n\t\tce.Write(fields...)\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"callers":[{"symbol":"(*loggerWriter).Write","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Sync","signature":"func (log *Logger) Sync() error","start_line":302,"end_line":304,"code":"func (log *Logger) Sync() error {\n\treturn log.core.Sync()\n}\n","selection":{"visibility":"exported","reason":"other","score":0.66},"call_graph":{"callees":[{"symbol":"(*contextObserver).Sync","path":"zaptest/observer/observer.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Sync","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Sync","path":"zapcore/tee.go"},{"symbol":"(nopCore).Sync","path":"zapcore/core.go"}],"callers":[{"symbol":"(*SugaredLogger).Sync","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Core","signature":"func (log *Logger) Core() zapcore.Core","start_line":307,"end_line":309,"code":"func (log *Logger) Core() zapcore.Core {\n\treturn log.core\n}\n","selection":{"visibility":"exported","reason":"other","score":0.62},"call_graph":{"callees":[],"callers":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"},{"symbol":"(*SugaredLogger).logln","path":"sugar.go"},{"symbol":"(*Writer).Write","path":"zapio/writer.go"},{"symbol":"NewLogger","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).Name","signature":"func (log *Logger) Name() string","start_line":313,"end_line":315,"code":"func (log *Logger) Name() string {\n\treturn log.name\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).clone","signature":"func (log *Logger) clone() *Logger","start_line":317,"end_line":320,"code":"func (log *Logger) clone() *Logger {\n\tclone := *log\n\treturn \u0026clone\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.44},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).Named","path":"logger.go"},{"symbol":"(*Logger).Sugar","path":"logger.go"},{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"(*SugaredLogger).Desugar","path":"sugar.go"},{"symbol":"(*SugaredLogger).WithOptions","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"(*Logger).check","signature":"func (log *Logger) check(lvl zapcore.Level, msg string) *zapcore.CheckedEntry","start_line":322,"end_line":422,"code":"func (log *Logger) check(lvl zapcore.Level, msg string) *zapcore.CheckedEntry {\n\t// Logger.check must always be called directly by a method in the\n\t// Logger interface (e.g., Check, Info, Fatal).\n\t// This skips Logger.check and the Info/Fatal/Check/etc. method that\n\t// called it.\n\tconst callerSkipOffset = 2\n\n\t// Check the level first to reduce the cost of disabled log calls.\n\t// Since Panic and higher may exit, we skip the optimization for those levels.\n\tif lvl \u003c zapcore.DPanicLevel \u0026\u0026 !log.core.Enabled(lvl) {\n\t\treturn nil\n\t}\n\n\t// Create basic checked entry thru the core; this will be non-nil if the\n\t// log message will actually be written somewhere.\n\tent := zapcore.Entry{\n\t\tLoggerName: log.name,\n\t\tTime:       log.clock.Now(),\n\t\tLevel:      lvl,\n\t\tMessage:    msg,\n\t}\n\tce := log.core.Check(ent, nil)\n\twillWrite := ce != nil\n\n\t// Set up any required terminal behavior.\n\tswitch ent.Level {\n\tcase zapcore.PanicLevel:\n\t\tce = ce.After(ent, terminalHookOverride(zapcore.WriteThenPanic, log.onPanic))\n\tcase zapcore.FatalLevel:\n\t\tce = ce.After(ent, terminalHookOverride(zapcore.WriteThenFatal, log.onFatal))\n\tcase zapcore.DPanicLevel:\n\t\tif log.development {\n\t\t\tce = ce.After(ent, terminalHookOverride(zapcore.WriteThenPanic, log.onPanic))\n\t\t}\n\t}\n\n\t// Only do further annotation if we're going to write this message; checked\n\t// entries that exist only for terminal behavior don't benefit from\n\t// annotation.\n\tif !willWrite {\n\t\treturn ce\n\t}\n\n\t// Thread the error output through to the CheckedEntry.\n\tce.ErrorOutput = log.errorOutput\n\n\taddStack := log.addStack.Enabled(ce.Level)\n\tif !log.addCaller \u0026\u0026 !addStack {\n\t\treturn ce\n\t}\n\n\t// Adding the caller or stack trace requires capturing the callers of\n\t// this function. We'll share information between these two.\n\tstackDepth := stacktrace.First\n\tif addStack {\n\t\tstackDepth = stacktrace.Full\n\t}\n\tstack := stacktrace.Capture(log.callerSkip+callerSkipOffset, stackDepth)\n\tdefer stack.Free()\n\n\tif stack.Count() == 0 {\n\t\tif log.addCaller {\n\t\t\t_, _ = fmt.Fprintf(\n\t\t\t\tlog.errorOutput,\n\t\t\t\t\"%v Logger.check error: failed to get caller\\n\",\n\t\t\t\tent.Time.UTC(),\n\t\t\t)\n\t\t\t_ = log.errorOutput.Sync()\n\t\t}\n\t\treturn ce\n\t}\n\n\tframe, more := stack.Next()\n\n\tif log.addCaller {\n\t\tce.Caller = zapcore.EntryCaller{\n\t\t\tDefined:  frame.PC != 0,\n\t\t\tPC:       frame.PC,\n\t\t\tFile:     frame.File,\n\t\t\tLine:     frame.Line,\n\t\t\tFunction: frame.Function,\n\t\t}\n\t}\n\n\tif addStack {\n\t\tbuffer := bufferpool.Get()\n\t\tdefer buffer.Free()\n\n\t\tstackfmt := stacktrace.NewFormatter(buffer)\n\n\t\t// We've already extracted the first frame, so format that\n\t\t// separately and defer to stackfmt for the rest.\n\t\tstackfmt.FormatFrame(frame)\n\t\tif more {\n\t\t\tstackfmt.FormatStack(stack)\n\t\t}\n\t\tce.Stack = buffer.String()\n\t}\n\n\treturn ce\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.44},"call_graph":{"callees":[{"symbol":"(*Buffer).Free","path":"buffer/buffer.go"},{"symbol":"(*CheckedEntry).After","path":"zapcore/entry.go"},{"symbol":"(*Stack).Count","path":"internal/stacktrace/stack.go"},{"symbol":"(*Stack).Free","path":"internal/stacktrace/stack.go"},{"symbol":"(*Stack).Next","path":"internal/stacktrace/stack.go"},{"symbol":"(Time).UTC","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"Capture","path":"internal/stacktrace/stack.go"},{"symbol":"Fprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"NewFormatter","path":"internal/stacktrace/stack.go"},{"symbol":"terminalHookOverride","path":"logger.go"}],"callers":[{"symbol":"(*Logger).Check","path":"logger.go"},{"symbol":"(*Logger).DPanic","path":"logger.go"},{"symbol":"(*Logger).Debug","path":"logger.go"},{"symbol":"(*Logger).Error","path":"logger.go"},{"symbol":"(*Logger).Fatal","path":"logger.go"},{"symbol":"(*Logger).Info","path":"logger.go"},{"symbol":"(*Logger).Log","path":"logger.go"},{"symbol":"(*Logger).Panic","path":"logger.go"},{"symbol":"(*Logger).Warn","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"logger.go","symbol":"terminalHookOverride","signature":"func terminalHookOverride(defaultHook, override zapcore.CheckWriteHook) zapcore.CheckWriteHook","start_line":424,"end_line":439,"code":"func terminalHookOverride(defaultHook, override zapcore.CheckWriteHook) zapcore.CheckWriteHook {\n\t// A nil or WriteThenNoop hook will lead to continued execution after\n\t// a Panic or Fatal log entry, which is unexpected. For example,\n\t//\n\t//   f, err := os.Open(..)\n\t//   if err != nil {\n\t//     log.Fatal(\"cannot open\", zap.Error(err))\n\t//   }\n\t//   fmt.Println(f.Name())\n\t//\n\t// The f.Name() will panic if we continue execution after the log.Fatal.\n\tif override == nil || override == zapcore.WriteThenNoop {\n\t\treturn defaultHook\n\t}\n\treturn override\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.51},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).check","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"(optionFunc).apply","signature":"func (f optionFunc) apply(log *Logger)","start_line":37,"end_line":39,"code":"func (f optionFunc) apply(log *Logger) {\n\tf(log)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.42},"call_graph":{"callees":[{"symbol":"AddCallerSkip$1","path":"options.go"},{"symbol":"Development$1","path":"options.go"},{"symbol":"Fields$1","path":"options.go"},{"symbol":"Hooks$1","path":"options.go"},{"symbol":"IncreaseLevel$1","path":"options.go"},{"symbol":"WithCaller$1","path":"options.go"},{"symbol":"WithClock$1","path":"options.go"},{"symbol":"WithFatalHook$1","path":"options.go"},{"symbol":"WithPanicHook$1","path":"options.go"},{"symbol":"WrapCore$1","path":"options.go"}],"callers":[{"symbol":"(*Logger).WithOptions","path":"logger.go"},{"symbol":"(*SugaredLogger).WithOptions","path":"sugar.go"},{"symbol":"(*optionFunc).apply","path":"options.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"WrapCore","signature":"func WrapCore(f func(zapcore.Core) zapcore.Core) Option","start_line":42,"end_line":46,"code":"func WrapCore(f func(zapcore.Core) zapcore.Core) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.core = f(log.core)\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).WithLazy","path":"logger.go"},{"symbol":"(Config).buildOptions","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"Hooks","signature":"func Hooks(hooks ...func(zapcore.Entry) error) Option","start_line":55,"end_line":59,"code":"func Hooks(hooks ...func(zapcore.Entry) error) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.core = zapcore.RegisterHooks(log.core, hooks...)\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"Fields","signature":"func Fields(fs ...Field) Option","start_line":62,"end_line":66,"code":"func Fields(fs ...Field) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.core = log.core.With(fs)\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"(Config).buildOptions","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"ErrorOutput","signature":"func ErrorOutput(w zapcore.WriteSyncer) Option","start_line":75,"end_line":79,"code":"func ErrorOutput(w zapcore.WriteSyncer) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.errorOutput = w\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[],"callers":[{"symbol":"(Config).buildOptions","path":"config.go"},{"symbol":"NewLogger","path":"zaptest/logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"Development","signature":"func Development() Option","start_line":83,"end_line":87,"code":"func Development() Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.development = true\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"(Config).buildOptions","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"AddCaller","signature":"func AddCaller() Option","start_line":91,"end_line":93,"code":"func AddCaller() Option {\n\treturn WithCaller(true)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"WithCaller","path":"options.go"}],"callers":[{"symbol":"(Config).buildOptions","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"WithCaller","signature":"func WithCaller(enabled bool) Option","start_line":98,"end_line":102,"code":"func WithCaller(enabled bool) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.addCaller = enabled\n\t})\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":[],"callers":[{"symbol":"AddCaller","path":"options.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"AddCallerSkip","signature":"func AddCallerSkip(skip int) Option","start_line":108,"end_line":112,"code":"func AddCallerSkip(skip int) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.callerSkip += skip\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[],"callers":[{"symbol":"NewStdLog","path":"global.go"},{"symbol":"NewStdLogAt","path":"global.go"},{"symbol":"redirectStdLogAt","path":"global.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"AddStacktrace","signature":"func AddStacktrace(lvl zapcore.LevelEnabler) Option","start_line":116,"end_line":120,"code":"func AddStacktrace(lvl zapcore.LevelEnabler) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.addStack = lvl\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"(Config).buildOptions","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"IncreaseLevel","signature":"func IncreaseLevel(lvl zapcore.LevelEnabler) Option","start_line":124,"end_line":137,"code":"func IncreaseLevel(lvl zapcore.LevelEnabler) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tcore, err := zapcore.NewIncreaseLevelCore(log.core, lvl)\n\t\tif err != nil {\n\t\t\t_, _ = fmt.Fprintf(\n\t\t\t\tlog.errorOutput,\n\t\t\t\t\"failed to IncreaseLevel: %v\\n\",\n\t\t\t\terr,\n\t\t\t)\n\t\t} else {\n\t\t\tlog.core = core\n\t\t}\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"WithPanicHook","signature":"func WithPanicHook(hook zapcore.CheckWriteHook) Option","start_line":148,"end_line":152,"code":"func WithPanicHook(hook zapcore.CheckWriteHook) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.onPanic = hook\n\t})\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"OnFatal","signature":"func OnFatal(action zapcore.CheckWriteAction) Option","start_line":157,"end_line":159,"code":"func OnFatal(action zapcore.CheckWriteAction) Option {\n\treturn WithFatalHook(action)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"WithFatalHook","path":"options.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"WithFatalHook","signature":"func WithFatalHook(hook zapcore.CheckWriteHook) Option","start_line":174,"end_line":178,"code":"func WithFatalHook(hook zapcore.CheckWriteHook) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.onFatal = hook\n\t})\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":[],"callers":[{"symbol":"OnFatal","path":"options.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"options.go","symbol":"WithClock","signature":"func WithClock(clock zapcore.Clock) Option","start_line":182,"end_line":186,"code":"func WithClock(clock zapcore.Clock) Option {\n\treturn optionFunc(func(log *Logger) {\n\t\tlog.clock = clock\n\t})\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sink.go","symbol":"(*errSinkNotFound).Error","signature":"func (e *errSinkNotFound) Error() string","start_line":50,"end_line":52,"code":"func (e *errSinkNotFound) Error() string {\n\treturn fmt.Sprintf(\"no sink found for scheme %q\", e.scheme)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.64},"call_graph":{"callees":[{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"(*NumError).Error","path":"../../../../usr/local/go/src/strconv/atoi.go"},{"symbol":"(*PathError).Error","path":"../../../../usr/local/go/src/io/fs/fs.go"},{"symbol":"(*clientHandshakeStateTLS13).readServerCertificate","path":"../../../../usr/local/go/src/crypto/tls/handshake_client_tls13.go"},{"symbol":"(AtomicLevel).serveHTTP","path":"http_handler.go"},{"symbol":"MarshalPKCS8PrivateKey","path":"../../../../usr/local/go/src/crypto/x509/pkcs8.go"},{"symbol":"MustNewName","path":"../../../../usr/local/go/src/vendor/golang.org/x/net/dns/dnsmessage/message.go"},{"symbol":"ParsePKCS8PrivateKey","path":"../../../../usr/local/go/src/crypto/x509/pkcs8.go"},{"symbol":"parseNameConstraintsExtension$1","path":"../../../../usr/local/go/src/crypto/x509/parser.go"},{"symbol":"preprintpanics","path":"../../../../usr/local/go/src/runtime/panic.go"},{"symbol":"serveContent","path":"../../../../usr/local/go/src/net/http/fs.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sink.go","symbol":"newSinkRegistry","signature":"func newSinkRegistry() *sinkRegistry","start_line":64,"end_line":72,"code":"func newSinkRegistry() *sinkRegistry {\n\tsr := \u0026sinkRegistry{\n\t\tfactories: make(map[string]func(*url.URL) (Sink, error)),\n\t\topenFile:  os.OpenFile,\n\t}\n\t// Infallible operation: the registry is empty, so we can't have a conflict.\n\t_ = sr.RegisterSink(schemeFile, sr.newFileSinkFromURL)\n\treturn sr\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*sinkRegistry).RegisterSink","path":"sink.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sink.go","symbol":"(*sinkRegistry).RegisterSink","signature":"func (sr *sinkRegistry) RegisterSink(scheme string, factory func(*url.URL) (Sink, error)) error","start_line":75,"end_line":91,"code":"func (sr *sinkRegistry) RegisterSink(scheme string, factory func(*url.URL) (Sink, error)) error {\n\tsr.mu.Lock()\n\tdefer sr.mu.Unlock()\n\n\tif scheme == \"\" {\n\t\treturn errors.New(\"can't register a sink factory for empty string\")\n\t}\n\tnormalized, err := normalizeScheme(scheme)\n\tif err != nil {\n\t\treturn fmt.Errorf(\"%q is not a valid scheme: %v\", scheme, err)\n\t}\n\tif _, ok := sr.factories[normalized]; ok {\n\t\treturn fmt.Errorf(\"sink factory already registered for scheme %q\", normalized)\n\t}\n\tsr.factories[normalized] = factory\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*sinkRegistry).RegisterSink","path":"sink.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sink.go","symbol":"(*sinkRegistry).newSink","signature":"func (sr *sinkRegistry) newSink(rawURL string) (Sink, error)","start_line":93,"end_line":117,"code":"func (sr *sinkRegistry) newSink(rawURL string) (Sink, error) {\n\t// URL parsing doesn't work well for Windows paths such as `c:\\log.txt`, as scheme is set to\n\t// the drive, and path is unset unless `c:/log.txt` is used.\n\t// To avoid Windows-specific URL handling, we instead check IsAbs to open as a file.\n\t// filepath.IsAbs is OS-specific, so IsAbs('c:/log.txt') is false outside of Windows.\n\tif filepath.IsAbs(rawURL) {\n\t\treturn sr.newFileSinkFromPath(rawURL)\n\t}\n\n\tu, err := url.Parse(rawURL)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"can't parse %q as a URL: %v\", rawURL, err)\n\t}\n\tif u.Scheme == \"\" {\n\t\tu.Scheme = schemeFile\n\t}\n\n\tsr.mu.Lock()\n\tfactory, ok := sr.factories[u.Scheme]\n\tsr.mu.Unlock()\n\tif !ok {\n\t\treturn nil, \u0026errSinkNotFound{u.Scheme}\n\t}\n\treturn factory(u)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*Mutex).Lock","path":"../../../../usr/local/go/src/sync/mutex.go"},{"symbol":"(*Mutex).Unlock","path":"../../../../usr/local/go/src/sync/mutex.go"},{"symbol":"(*sinkRegistry).newFileSinkFromPath","path":"sink.go"},{"symbol":"(*sinkRegistry).newFileSinkFromURL","path":"sink.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"},{"symbol":"IsAbs","path":"../../../../usr/local/go/src/path/filepath/path.go"},{"symbol":"Parse","path":"../../../../usr/local/go/src/net/url/url.go"}],"callers":[{"symbol":"open","path":"writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sink.go","symbol":"RegisterSink","signature":"func RegisterSink(scheme string, factory func(*url.URL) (Sink, error)) error","start_line":126,"end_line":128,"code":"func RegisterSink(scheme string, factory func(*url.URL) (Sink, error)) error {\n\treturn _sinkRegistry.RegisterSink(scheme, factory)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*sinkRegistry).RegisterSink","path":"sink.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sink.go","symbol":"(*sinkRegistry).newFileSinkFromURL","signature":"func (sr *sinkRegistry) newFileSinkFromURL(u *url.URL) (Sink, error)","start_line":130,"end_line":149,"code":"func (sr *sinkRegistry) newFileSinkFromURL(u *url.URL) (Sink, error) {\n\tif u.User != nil {\n\t\treturn nil, fmt.Errorf(\"user and password not allowed with file URLs: got %v\", u)\n\t}\n\tif u.Fragment != \"\" {\n\t\treturn nil, fmt.Errorf(\"fragments not allowed with file URLs: got %v\", u)\n\t}\n\tif u.RawQuery != \"\" {\n\t\treturn nil, fmt.Errorf(\"query parameters not allowed with file URLs: got %v\", u)\n\t}\n\t// Error messages are better if we check hostname and port separately.\n\tif u.Port() != \"\" {\n\t\treturn nil, fmt.Errorf(\"ports not allowed with file URLs: got %v\", u)\n\t}\n\tif hn := u.Hostname(); hn != \"\" \u0026\u0026 hn != \"localhost\" {\n\t\treturn nil, fmt.Errorf(\"file URLs must leave host empty or use localhost: got %v\", u)\n\t}\n\n\treturn sr.newFileSinkFromPath(u.Path)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*URL).Hostname","path":"../../../../usr/local/go/src/net/url/url.go"},{"symbol":"(*URL).Port","path":"../../../../usr/local/go/src/net/url/url.go"},{"symbol":"(*sinkRegistry).newFileSinkFromPath","path":"sink.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"}],"callers":[{"symbol":"(*sinkRegistry).newSink","path":"sink.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sink.go","symbol":"(*sinkRegistry).newFileSinkFromPath","signature":"func (sr *sinkRegistry) newFileSinkFromPath(path string) (Sink, error)","start_line":151,"end_line":159,"code":"func (sr *sinkRegistry) newFileSinkFromPath(path string) (Sink, error) {\n\tswitch path {\n\tcase \"stdout\":\n\t\treturn nopCloserSink{os.Stdout}, nil\n\tcase \"stderr\":\n\t\treturn nopCloserSink{os.Stderr}, nil\n\t}\n\treturn sr.openFile(path, os.O_WRONLY|os.O_APPEND|os.O_CREATE, 0o666)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.51},"call_graph":{"callees":[{"symbol":"OpenFile","path":"../../../../usr/local/go/src/os/file.go"},{"symbol":"openFileNolog","path":"../../../../usr/local/go/src/os/file_unix.go"}],"callers":[{"symbol":"(*sinkRegistry).newFileSinkFromURL","path":"sink.go"},{"symbol":"(*sinkRegistry).newSink","path":"sink.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sink.go","symbol":"normalizeScheme","signature":"func normalizeScheme(s string) (string, error)","start_line":161,"end_line":180,"code":"func normalizeScheme(s string) (string, error) {\n\t// https://tools.ietf.org/html/rfc3986#section-3.1\n\ts = strings.ToLower(s)\n\tif first := s[0]; 'a' \u003e first || 'z' \u003c first {\n\t\treturn \"\", errors.New(\"must start with a letter\")\n\t}\n\tfor i := 1; i \u003c len(s); i++ { // iterate over bytes, not runes\n\t\tc := s[i]\n\t\tswitch {\n\t\tcase 'a' \u003c= c \u0026\u0026 c \u003c= 'z':\n\t\t\tcontinue\n\t\tcase '0' \u003c= c \u0026\u0026 c \u003c= '9':\n\t\t\tcontinue\n\t\tcase c == '.' || c == '+' || c == '-':\n\t\t\tcontinue\n\t\t}\n\t\treturn \"\", fmt.Errorf(\"may not contain %q\", c)\n\t}\n\treturn s, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"},{"symbol":"New","path":"../../../../usr/local/go/src/errors/errors.go"},{"symbol":"ToLower","path":"../../../../usr/local/go/src/strings/strings.go"}],"callers":[{"symbol":"(*sinkRegistry).RegisterSink","path":"sink.go"},{"symbol":"loadLocation","path":"../../../../usr/local/go/src/time/zoneinfo_read.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Desugar","signature":"func (s *SugaredLogger) Desugar() *Logger","start_line":63,"end_line":67,"code":"func (s *SugaredLogger) Desugar() *Logger {\n\tbase := s.base.clone()\n\tbase.callerSkip -= 2\n\treturn base\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":[{"symbol":"(*Logger).clone","path":"logger.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Named","signature":"func (s *SugaredLogger) Named(name string) *SugaredLogger","start_line":70,"end_line":72,"code":"func (s *SugaredLogger) Named(name string) *SugaredLogger {\n\treturn \u0026SugaredLogger{base: s.base.Named(name)}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.75},"call_graph":{"callees":[{"symbol":"(*Logger).Named","path":"logger.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).WithOptions","signature":"func (s *SugaredLogger) WithOptions(opts ...Option) *SugaredLogger","start_line":76,"end_line":82,"code":"func (s *SugaredLogger) WithOptions(opts ...Option) *SugaredLogger {\n\tbase := s.base.clone()\n\tfor _, opt := range opts {\n\t\topt.apply(base)\n\t}\n\treturn \u0026SugaredLogger{base: base}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.88},"call_graph":{"callees":[{"symbol":"(*Logger).clone","path":"logger.go"},{"symbol":"(optionFunc).apply","path":"options.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).With","signature":"func (s *SugaredLogger) With(args ...interface{}) *SugaredLogger","start_line":114,"end_line":116,"code":"func (s *SugaredLogger) With(args ...interface{}) *SugaredLogger {\n\treturn \u0026SugaredLogger{base: s.base.With(s.sweetenFields(args)...)}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.79},"call_graph":{"callees":[{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*SugaredLogger).sweetenFields","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).WithLazy","signature":"func (s *SugaredLogger) WithLazy(args ...interface{}) *SugaredLogger","start_line":129,"end_line":131,"code":"func (s *SugaredLogger) WithLazy(args ...interface{}) *SugaredLogger {\n\treturn \u0026SugaredLogger{base: s.base.WithLazy(s.sweetenFields(args)...)}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.75},"call_graph":{"callees":[{"symbol":"(*Logger).WithLazy","path":"logger.go"},{"symbol":"(*SugaredLogger).sweetenFields","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Level","signature":"func (s *SugaredLogger) Level() zapcore.Level","start_line":136,"end_line":138,"code":"func (s *SugaredLogger) Level() zapcore.Level {\n\treturn zapcore.LevelOf(s.base.core)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.63},"call_graph":{"callees":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Log","signature":"func (s *SugaredLogger) Log(lvl zapcore.Level, args ...interface{})","start_line":142,"end_line":144,"code":"func (s *SugaredLogger) Log(lvl zapcore.Level, args ...interface{}) {\n\ts.log(lvl, \"\", args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Debug","signature":"func (s *SugaredLogger) Debug(args ...interface{})","start_line":148,"end_line":150,"code":"func (s *SugaredLogger) Debug(args ...interface{}) {\n\ts.log(DebugLevel, \"\", args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*printer).Print","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Info","signature":"func (s *SugaredLogger) Info(args ...interface{})","start_line":154,"end_line":156,"code":"func (s *SugaredLogger) Info(args ...interface{}) {\n\ts.log(InfoLevel, \"\", args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*Logger).Info","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Infoln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*printer).Print","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Warn","signature":"func (s *SugaredLogger) Warn(args ...interface{})","start_line":160,"end_line":162,"code":"func (s *SugaredLogger) Warn(args ...interface{}) {\n\ts.log(WarnLevel, \"\", args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*Logger).Warning","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Warningln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*printer).Print","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Error","signature":"func (s *SugaredLogger) Error(args ...interface{})","start_line":166,"end_line":168,"code":"func (s *SugaredLogger) Error(args ...interface{}) {\n\ts.log(ErrorLevel, \"\", args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.64},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*Logger).Error","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Errorln","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).DPanic","signature":"func (s *SugaredLogger) DPanic(args ...interface{})","start_line":173,"end_line":175,"code":"func (s *SugaredLogger) DPanic(args ...interface{}) {\n\ts.log(DPanicLevel, \"\", args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Panic","signature":"func (s *SugaredLogger) Panic(args ...interface{})","start_line":179,"end_line":181,"code":"func (s *SugaredLogger) Panic(args ...interface{}) {\n\ts.log(PanicLevel, \"\", args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Fatal","signature":"func (s *SugaredLogger) Fatal(args ...interface{})","start_line":185,"end_line":187,"code":"func (s *SugaredLogger) Fatal(args ...interface{}) {\n\ts.log(FatalLevel, \"\", args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*printer).Print","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Logf","signature":"func (s *SugaredLogger) Logf(lvl zapcore.Level, template string, args ...interface{})","start_line":191,"end_line":193,"code":"func (s *SugaredLogger) Logf(lvl zapcore.Level, template string, args ...interface{}) {\n\ts.log(lvl, template, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Debugf","signature":"func (s *SugaredLogger) Debugf(template string, args ...interface{})","start_line":197,"end_line":199,"code":"func (s *SugaredLogger) Debugf(template string, args ...interface{}) {\n\ts.log(DebugLevel, template, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*http2Framer).ReadFrame","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*http2Framer).logWrite","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*printer).Printf","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*transportRequest).logf","path":"../../../../usr/local/go/src/net/http/transport.go"},{"symbol":"readMetaFrame$1","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Infof","signature":"func (s *SugaredLogger) Infof(template string, args ...interface{})","start_line":203,"end_line":205,"code":"func (s *SugaredLogger) Infof(template string, args ...interface{}) {\n\ts.log(InfoLevel, template, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*Logger).Infof","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*http2Framer).ReadFrame","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*http2Framer).logWrite","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*printer).Printf","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*transportRequest).logf","path":"../../../../usr/local/go/src/net/http/transport.go"},{"symbol":"readMetaFrame$1","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Warnf","signature":"func (s *SugaredLogger) Warnf(template string, args ...interface{})","start_line":209,"end_line":211,"code":"func (s *SugaredLogger) Warnf(template string, args ...interface{}) {\n\ts.log(WarnLevel, template, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*Logger).Warningf","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*http2Framer).ReadFrame","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*http2Framer).logWrite","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*printer).Printf","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*transportRequest).logf","path":"../../../../usr/local/go/src/net/http/transport.go"},{"symbol":"readMetaFrame$1","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Errorf","signature":"func (s *SugaredLogger) Errorf(template string, args ...interface{})","start_line":215,"end_line":217,"code":"func (s *SugaredLogger) Errorf(template string, args ...interface{}) {\n\ts.log(ErrorLevel, template, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.69},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*Logger).Errorf","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).DPanicf","signature":"func (s *SugaredLogger) DPanicf(template string, args ...interface{})","start_line":222,"end_line":224,"code":"func (s *SugaredLogger) DPanicf(template string, args ...interface{}) {\n\ts.log(DPanicLevel, template, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Panicf","signature":"func (s *SugaredLogger) Panicf(template string, args ...interface{})","start_line":228,"end_line":230,"code":"func (s *SugaredLogger) Panicf(template string, args ...interface{}) {\n\ts.log(PanicLevel, template, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Fatalf","signature":"func (s *SugaredLogger) Fatalf(template string, args ...interface{})","start_line":234,"end_line":236,"code":"func (s *SugaredLogger) Fatalf(template string, args ...interface{}) {\n\ts.log(FatalLevel, template, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[{"symbol":"(*http2Framer).ReadFrame","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*http2Framer).logWrite","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*printer).Printf","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*transportRequest).logf","path":"../../../../usr/local/go/src/net/http/transport.go"},{"symbol":"readMetaFrame$1","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Logw","signature":"func (s *SugaredLogger) Logw(lvl zapcore.Level, msg string, keysAndValues ...interface{})","start_line":240,"end_line":242,"code":"func (s *SugaredLogger) Logw(lvl zapcore.Level, msg string, keysAndValues ...interface{}) {\n\ts.log(lvl, msg, nil, keysAndValues)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Debugw","signature":"func (s *SugaredLogger) Debugw(msg string, keysAndValues ...interface{})","start_line":250,"end_line":252,"code":"func (s *SugaredLogger) Debugw(msg string, keysAndValues ...interface{}) {\n\ts.log(DebugLevel, msg, nil, keysAndValues)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Infow","signature":"func (s *SugaredLogger) Infow(msg string, keysAndValues ...interface{})","start_line":256,"end_line":258,"code":"func (s *SugaredLogger) Infow(msg string, keysAndValues ...interface{}) {\n\ts.log(InfoLevel, msg, nil, keysAndValues)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Warnw","signature":"func (s *SugaredLogger) Warnw(msg string, keysAndValues ...interface{})","start_line":262,"end_line":264,"code":"func (s *SugaredLogger) Warnw(msg string, keysAndValues ...interface{}) {\n\ts.log(WarnLevel, msg, nil, keysAndValues)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Errorw","signature":"func (s *SugaredLogger) Errorw(msg string, keysAndValues ...interface{})","start_line":268,"end_line":270,"code":"func (s *SugaredLogger) Errorw(msg string, keysAndValues ...interface{}) {\n\ts.log(ErrorLevel, msg, nil, keysAndValues)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).DPanicw","signature":"func (s *SugaredLogger) DPanicw(msg string, keysAndValues ...interface{})","start_line":275,"end_line":277,"code":"func (s *SugaredLogger) DPanicw(msg string, keysAndValues ...interface{}) {\n\ts.log(DPanicLevel, msg, nil, keysAndValues)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Panicw","signature":"func (s *SugaredLogger) Panicw(msg string, keysAndValues ...interface{})","start_line":281,"end_line":283,"code":"func (s *SugaredLogger) Panicw(msg string, keysAndValues ...interface{}) {\n\ts.log(PanicLevel, msg, nil, keysAndValues)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Fatalw","signature":"func (s *SugaredLogger) Fatalw(msg string, keysAndValues ...interface{})","start_line":287,"end_line":289,"code":"func (s *SugaredLogger) Fatalw(msg string, keysAndValues ...interface{}) {\n\ts.log(FatalLevel, msg, nil, keysAndValues)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Logln","signature":"func (s *SugaredLogger) Logln(lvl zapcore.Level, args ...interface{})","start_line":293,"end_line":295,"code":"func (s *SugaredLogger) Logln(lvl zapcore.Level, args ...interface{}) {\n\ts.logln(lvl, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Debugln","signature":"func (s *SugaredLogger) Debugln(args ...interface{})","start_line":299,"end_line":301,"code":"func (s *SugaredLogger) Debugln(args ...interface{}) {\n\ts.logln(DebugLevel, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Infoln","signature":"func (s *SugaredLogger) Infoln(args ...interface{})","start_line":305,"end_line":307,"code":"func (s *SugaredLogger) Infoln(args ...interface{}) {\n\ts.logln(InfoLevel, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Warnln","signature":"func (s *SugaredLogger) Warnln(args ...interface{})","start_line":311,"end_line":313,"code":"func (s *SugaredLogger) Warnln(args ...interface{}) {\n\ts.logln(WarnLevel, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Errorln","signature":"func (s *SugaredLogger) Errorln(args ...interface{})","start_line":317,"end_line":319,"code":"func (s *SugaredLogger) Errorln(args ...interface{}) {\n\ts.logln(ErrorLevel, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).DPanicln","signature":"func (s *SugaredLogger) DPanicln(args ...interface{})","start_line":324,"end_line":326,"code":"func (s *SugaredLogger) DPanicln(args ...interface{}) {\n\ts.logln(DPanicLevel, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Panicln","signature":"func (s *SugaredLogger) Panicln(args ...interface{})","start_line":330,"end_line":332,"code":"func (s *SugaredLogger) Panicln(args ...interface{}) {\n\ts.logln(PanicLevel, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Fatalln","signature":"func (s *SugaredLogger) Fatalln(args ...interface{})","start_line":336,"end_line":338,"code":"func (s *SugaredLogger) Fatalln(args ...interface{}) {\n\ts.logln(FatalLevel, args, nil)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).Sync","signature":"func (s *SugaredLogger) Sync() error","start_line":341,"end_line":343,"code":"func (s *SugaredLogger) Sync() error {\n\treturn s.base.Sync()\n}\n","selection":{"visibility":"exported","reason":"other","score":0.66},"call_graph":{"callees":[{"symbol":"(*Logger).Sync","path":"logger.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).log","signature":"func (s *SugaredLogger) log(lvl zapcore.Level, template string, fmtArgs []interface{}, context []interface{})","start_line":346,"end_line":357,"code":"func (s *SugaredLogger) log(lvl zapcore.Level, template string, fmtArgs []interface{}, context []interface{}) {\n\t// If logging at this level is completely disabled, skip the overhead of\n\t// string formatting.\n\tif lvl \u003c DPanicLevel \u0026\u0026 !s.base.Core().Enabled(lvl) {\n\t\treturn\n\t}\n\n\tmsg := getMessage(template, fmtArgs)\n\tif ce := s.base.Check(lvl, msg); ce != nil {\n\t\tce.Write(s.sweetenFields(context)...)\n\t}\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).Check","path":"logger.go"},{"symbol":"(*Logger).Core","path":"logger.go"},{"symbol":"(*SugaredLogger).sweetenFields","path":"sugar.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"},{"symbol":"getMessage","path":"sugar.go"}],"callers":[{"symbol":"(*SugaredLogger).DPanic","path":"sugar.go"},{"symbol":"(*SugaredLogger).DPanicf","path":"sugar.go"},{"symbol":"(*SugaredLogger).DPanicw","path":"sugar.go"},{"symbol":"(*SugaredLogger).Debug","path":"sugar.go"},{"symbol":"(*SugaredLogger).Debugf","path":"sugar.go"},{"symbol":"(*SugaredLogger).Debugw","path":"sugar.go"},{"symbol":"(*SugaredLogger).Error","path":"sugar.go"},{"symbol":"(*SugaredLogger).Errorf","path":"sugar.go"},{"symbol":"(*SugaredLogger).Errorw","path":"sugar.go"},{"symbol":"(*SugaredLogger).Fatal","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).logln","signature":"func (s *SugaredLogger) logln(lvl zapcore.Level, fmtArgs []interface{}, context []interface{})","start_line":360,"end_line":369,"code":"func (s *SugaredLogger) logln(lvl zapcore.Level, fmtArgs []interface{}, context []interface{}) {\n\tif lvl \u003c DPanicLevel \u0026\u0026 !s.base.Core().Enabled(lvl) {\n\t\treturn\n\t}\n\n\tmsg := getMessageln(fmtArgs)\n\tif ce := s.base.Check(lvl, msg); ce != nil {\n\t\tce.Write(s.sweetenFields(context)...)\n\t}\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.53},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).Check","path":"logger.go"},{"symbol":"(*Logger).Core","path":"logger.go"},{"symbol":"(*SugaredLogger).sweetenFields","path":"sugar.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"},{"symbol":"getMessageln","path":"sugar.go"}],"callers":[{"symbol":"(*SugaredLogger).DPanicln","path":"sugar.go"},{"symbol":"(*SugaredLogger).Debugln","path":"sugar.go"},{"symbol":"(*SugaredLogger).Errorln","path":"sugar.go"},{"symbol":"(*SugaredLogger).Fatalln","path":"sugar.go"},{"symbol":"(*SugaredLogger).Infoln","path":"sugar.go"},{"symbol":"(*SugaredLogger).Logln","path":"sugar.go"},{"symbol":"(*SugaredLogger).Panicln","path":"sugar.go"},{"symbol":"(*SugaredLogger).Warnln","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"getMessage","signature":"func getMessage(template string, fmtArgs []interface{}) string","start_line":372,"end_line":387,"code":"func getMessage(template string, fmtArgs []interface{}) string {\n\tif len(fmtArgs) == 0 {\n\t\treturn template\n\t}\n\n\tif template != \"\" {\n\t\treturn fmt.Sprintf(template, fmtArgs...)\n\t}\n\n\tif len(fmtArgs) == 1 {\n\t\tif str, ok := fmtArgs[0].(string); ok {\n\t\t\treturn str\n\t\t}\n\t}\n\treturn fmt.Sprint(fmtArgs...)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"Sprint","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"(*SugaredLogger).log","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"getMessageln","signature":"func getMessageln(fmtArgs []interface{}) string","start_line":390,"end_line":393,"code":"func getMessageln(fmtArgs []interface{}) string {\n\tmsg := fmt.Sprintln(fmtArgs...)\n\treturn msg[:len(msg)-1]\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.4},"call_graph":{"callees":[{"symbol":"Sprintln","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(*SugaredLogger).sweetenFields","signature":"func (s *SugaredLogger) sweetenFields(args []interface{}) []Field","start_line":395,"end_line":454,"code":"func (s *SugaredLogger) sweetenFields(args []interface{}) []Field {\n\tif len(args) == 0 {\n\t\treturn nil\n\t}\n\n\tvar (\n\t\t// Allocate enough space for the worst case; if users pass only structured\n\t\t// fields, we shouldn't penalize them with extra allocations.\n\t\tfields    = make([]Field, 0, len(args))\n\t\tinvalid   invalidPairs\n\t\tseenError bool\n\t)\n\n\tfor i := 0; i \u003c len(args); {\n\t\t// This is a strongly-typed field. Consume it and move on.\n\t\tif f, ok := args[i].(Field); ok {\n\t\t\tfields = append(fields, f)\n\t\t\ti++\n\t\t\tcontinue\n\t\t}\n\n\t\t// If it is an error, consume it and move on.\n\t\tif err, ok := args[i].(error); ok {\n\t\t\tif !seenError {\n\t\t\t\tseenError = true\n\t\t\t\tfields = append(fields, Error(err))\n\t\t\t} else {\n\t\t\t\ts.base.Error(_multipleErrMsg, Error(err))\n\t\t\t}\n\t\t\ti++\n\t\t\tcontinue\n\t\t}\n\n\t\t// Make sure this element isn't a dangling key.\n\t\tif i == len(args)-1 {\n\t\t\ts.base.Error(_oddNumberErrMsg, Any(\"ignored\", args[i]))\n\t\t\tbreak\n\t\t}\n\n\t\t// Consume this value and the next, treating them as a key-value pair. If the\n\t\t// key isn't a string, add this pair to the slice of invalid pairs.\n\t\tkey, val := args[i], args[i+1]\n\t\tif keyStr, ok := key.(string); !ok {\n\t\t\t// Subsequent errors are likely, so allocate once up front.\n\t\t\tif cap(invalid) == 0 {\n\t\t\t\tinvalid = make(invalidPairs, 0, len(args)/2)\n\t\t\t}\n\t\t\tinvalid = append(invalid, invalidPair{i, key, val})\n\t\t} else {\n\t\t\tfields = append(fields, Any(keyStr, val))\n\t\t}\n\t\ti += 2\n\t}\n\n\t// If we encountered any invalid key-value pairs, log an error.\n\tif len(invalid) \u003e 0 {\n\t\ts.base.Error(_nonStringKeyErrMsg, Array(\"invalid\", invalid))\n\t}\n\treturn fields\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.52},"call_graph":{"callees":[{"symbol":"(*Logger).Error","path":"logger.go"},{"symbol":"Any","path":"field.go"},{"symbol":"Array","path":"array.go"},{"symbol":"Error","path":"error.go"}],"callers":[{"symbol":"(*SugaredLogger).With","path":"sugar.go"},{"symbol":"(*SugaredLogger).WithLazy","path":"sugar.go"},{"symbol":"(*SugaredLogger).log","path":"sugar.go"},{"symbol":"(*SugaredLogger).logln","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(invalidPair).MarshalLogObject","signature":"func (p invalidPair) MarshalLogObject(enc zapcore.ObjectEncoder) error","start_line":461,"end_line":466,"code":"func (p invalidPair) MarshalLogObject(enc zapcore.ObjectEncoder) error {\n\tenc.AddInt64(\"position\", int64(p.position))\n\tAny(\"key\", p.key).AddTo(enc)\n\tAny(\"value\", p.value).AddTo(enc)\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.72},"call_graph":{"callees":[{"symbol":"(*MapObjectEncoder).AddInt64","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AddInt64","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"Any","path":"field.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddObject","path":"zapcore/memory_encoder.go"},{"symbol":"(*invalidPair).MarshalLogObject","path":"sugar.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"sugar.go","symbol":"(invalidPairs).MarshalLogArray","signature":"func (ps invalidPairs) MarshalLogArray(enc zapcore.ArrayEncoder) error","start_line":470,"end_line":476,"code":"func (ps invalidPairs) MarshalLogArray(enc zapcore.ArrayEncoder) error {\n\tvar err error\n\tfor i := range ps {\n\t\terr = multierr.Append(err, enc.AppendObject(ps[i]))\n\t}\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*invalidPairs).MarshalLogArray","path":"sugar.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"time.go","symbol":"timeToMillis","signature":"func timeToMillis(t time.Time) int64","start_line":25,"end_line":27,"code":"func timeToMillis(t time.Time) int64 {\n\treturn t.UnixNano() / int64(time.Millisecond)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.4},"call_graph":{"callees":[{"symbol":"(Time).UnixNano","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"writer.go","symbol":"Open","signature":"func Open(paths ...string) (zapcore.WriteSyncer, func(), error)","start_line":50,"end_line":58,"code":"func Open(paths ...string) (zapcore.WriteSyncer, func(), error) {\n\twriters, closeAll, err := open(paths)\n\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\n\twriter := CombineWriteSyncers(writers...)\n\treturn writer, closeAll, nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"CombineWriteSyncers","path":"writer.go"},{"symbol":"open","path":"writer.go"}],"callers":[{"symbol":"(Config).openSinks","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"writer.go","symbol":"open","signature":"func open(paths []string) ([]zapcore.WriteSyncer, func(), error)","start_line":60,"end_line":85,"code":"func open(paths []string) ([]zapcore.WriteSyncer, func(), error) {\n\twriters := make([]zapcore.WriteSyncer, 0, len(paths))\n\tclosers := make([]io.Closer, 0, len(paths))\n\tcloseAll := func() {\n\t\tfor _, c := range closers {\n\t\t\t_ = c.Close()\n\t\t}\n\t}\n\n\tvar openErr error\n\tfor _, path := range paths {\n\t\tsink, err := _sinkRegistry.newSink(path)\n\t\tif err != nil {\n\t\t\topenErr = multierr.Append(openErr, fmt.Errorf(\"open sink %q: %w\", path, err))\n\t\t\tcontinue\n\t\t}\n\t\twriters = append(writers, sink)\n\t\tclosers = append(closers, sink)\n\t}\n\tif openErr != nil {\n\t\tcloseAll()\n\t\treturn nil, nil, openErr\n\t}\n\n\treturn writers, closeAll, nil\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*sinkRegistry).newSink","path":"sink.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"},{"symbol":"open$1","path":"writer.go"}],"callers":[{"symbol":"Open","path":"writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"writer.go","symbol":"CombineWriteSyncers","signature":"func CombineWriteSyncers(writers ...zapcore.WriteSyncer) zapcore.WriteSyncer","start_line":93,"end_line":98,"code":"func CombineWriteSyncers(writers ...zapcore.WriteSyncer) zapcore.WriteSyncer {\n\tif len(writers) == 0 {\n\t\treturn zapcore.AddSync(io.Discard)\n\t}\n\treturn zapcore.Lock(zapcore.NewMultiWriteSyncer(writers...))\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"AddSync","path":"zapcore/write_syncer.go"},{"symbol":"Lock","path":"zapcore/write_syncer.go"},{"symbol":"NewMultiWriteSyncer","path":"zapcore/write_syncer.go"}],"callers":[{"symbol":"Open","path":"writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/buffered_write_syncer.go","symbol":"(*BufferedWriteSyncer).initialize","signature":"func (s *BufferedWriteSyncer) initialize()","start_line":112,"end_line":133,"code":"func (s *BufferedWriteSyncer) initialize() {\n\tsize := s.Size\n\tif size == 0 {\n\t\tsize = _defaultBufferSize\n\t}\n\n\tflushInterval := s.FlushInterval\n\tif flushInterval == 0 {\n\t\tflushInterval = _defaultFlushInterval\n\t}\n\n\tif s.Clock == nil {\n\t\ts.Clock = DefaultClock\n\t}\n\n\ts.ticker = s.Clock.NewTicker(flushInterval)\n\ts.writer = bufio.NewWriterSize(s.WS, size)\n\ts.stop = make(chan struct{})\n\ts.done = make(chan struct{})\n\ts.initialized = true\n\tgo s.flushLoop()\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).flushLoop","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*MockClock).NewTicker","path":"internal/ztest/clock.go"},{"symbol":"(systemClock).NewTicker","path":"zapcore/clock.go"},{"symbol":"NewWriterSize","path":"../../../../usr/local/go/src/bufio/bufio.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).Write","path":"zapcore/buffered_write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/buffered_write_syncer.go","symbol":"(*BufferedWriteSyncer).Write","signature":"func (s *BufferedWriteSyncer) Write(bs []byte) (int, error)","start_line":137,"end_line":155,"code":"func (s *BufferedWriteSyncer) Write(bs []byte) (int, error) {\n\ts.mu.Lock()\n\tdefer s.mu.Unlock()\n\n\tif !s.initialized {\n\t\ts.initialize()\n\t}\n\n\t// To avoid partial writes from being flushed, we manually flush the existing buffer if:\n\t// * The current write doesn't fit into the buffer fully, and\n\t// * The buffer is not empty (since bufio will not split large writes when the buffer is empty)\n\tif len(bs) \u003e s.writer.Available() \u0026\u0026 s.writer.Buffered() \u003e 0 {\n\t\tif err := s.writer.Flush(); err != nil {\n\t\t\treturn 0, err\n\t\t}\n\t}\n\n\treturn s.writer.Write(bs)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.8},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).initialize","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*Mutex).Lock","path":"../../../../usr/local/go/src/sync/mutex.go"},{"symbol":"(*Mutex).Unlock","path":"../../../../usr/local/go/src/sync/mutex.go"},{"symbol":"(*Writer).Available","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*Writer).Buffered","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*Writer).Flush","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*Writer).Write","path":"../../../../usr/local/go/src/bufio/bufio.go"}],"callers":[{"symbol":"(*Buffer).WriteTo","path":"../../../../usr/local/go/src/bytes/buffer.go"},{"symbol":"(*Conn).unmarshalHandshakeMessage","path":"../../../../usr/local/go/src/crypto/tls/conn.go"},{"symbol":"(*Reader).writeBuf","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*Writer).Write","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*dumper).Write","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"(stringWriter).WriteString","path":"../../../../usr/local/go/src/strings/replace.go"},{"symbol":"HTMLEscape","path":"../../../../usr/local/go/src/text/template/funcs.go"},{"symbol":"PrintMarker","path":"../../../../usr/local/go/src/internal/bisect/bisect.go"},{"symbol":"WriteString","path":"../../../../usr/local/go/src/io/io.go"},{"symbol":"printStack","path":"../../../../usr/local/go/src/internal/bisect/bisect.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/buffered_write_syncer.go","symbol":"(*BufferedWriteSyncer).Sync","signature":"func (s *BufferedWriteSyncer) Sync() error","start_line":158,"end_line":168,"code":"func (s *BufferedWriteSyncer) Sync() error {\n\ts.mu.Lock()\n\tdefer s.mu.Unlock()\n\n\tvar err error\n\tif s.initialized {\n\t\terr = s.writer.Flush()\n\t}\n\n\treturn multierr.Append(err, s.WS.Sync())\n}\n","selection":{"visibility":"exported","reason":"core","score":0.76},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*File).Sync","path":"../../../../usr/local/go/src/os/file_posix.go"},{"symbol":"(*Mutex).Lock","path":"../../../../usr/local/go/src/sync/mutex.go"},{"symbol":"(*Mutex).Unlock","path":"../../../../usr/local/go/src/sync/mutex.go"},{"symbol":"(*Writer).Flush","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(TestingWriter).Sync","path":"zaptest/logger.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(writerWrapper).Sync","path":"zapcore/write_syncer.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).Stop","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*BufferedWriteSyncer).flushLoop","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/buffered_write_syncer.go","symbol":"(*BufferedWriteSyncer).flushLoop","signature":"func (s *BufferedWriteSyncer) flushLoop()","start_line":172,"end_line":186,"code":"func (s *BufferedWriteSyncer) flushLoop() {\n\tdefer close(s.done)\n\n\tfor {\n\t\tselect {\n\t\tcase \u003c-s.ticker.C:\n\t\t\t// we just simply ignore error here\n\t\t\t// because the underlying bufio writer stores any errors\n\t\t\t// and we return any error from Sync() as part of the close\n\t\t\t_ = s.Sync()\n\t\tcase \u003c-s.stop:\n\t\t\treturn\n\t\t}\n\t}\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).initialize","path":"zapcore/buffered_write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/buffered_write_syncer.go","symbol":"(*BufferedWriteSyncer).Stop","signature":"func (s *BufferedWriteSyncer) Stop() (err error)","start_line":190,"end_line":220,"code":"func (s *BufferedWriteSyncer) Stop() (err error) {\n\t// Critical section.\n\tstopped := func() bool {\n\t\ts.mu.Lock()\n\t\tdefer s.mu.Unlock()\n\n\t\tif !s.initialized {\n\t\t\treturn false\n\t\t}\n\n\t\tif s.stopped {\n\t\t\treturn false\n\t\t}\n\t\ts.stopped = true\n\n\t\ts.ticker.Stop()\n\t\tclose(s.stop) // tell flushLoop to stop\n\t\treturn true\n\t}()\n\n\t// Not initialized, or already stopped, no need for any cleanup.\n\tif !stopped {\n\t\treturn\n\t}\n\n\t// Wait for flushLoop to end outside of the lock, as it may need the lock to complete.\n\t// See https://github.com/uber-go/zap/issues/1428 for details.\n\t\u003c-s.done\n\n\treturn s.Sync()\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"Stop$1","path":"zapcore/buffered_write_syncer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/clock.go","symbol":"(systemClock).Now","signature":"func (systemClock) Now() time.Time","start_line":42,"end_line":44,"code":"func (systemClock) Now() time.Time {\n\treturn time.Now()\n}\n","selection":{"visibility":"exported","reason":"core","score":0.62},"call_graph":{"callees":[{"symbol":"Now","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*systemClock).Now","path":"zapcore/clock.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/clock.go","symbol":"(systemClock).NewTicker","signature":"func (systemClock) NewTicker(duration time.Duration) *time.Ticker","start_line":46,"end_line":48,"code":"func (systemClock) NewTicker(duration time.Duration) *time.Ticker {\n\treturn time.NewTicker(duration)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.76},"call_graph":{"callees":[{"symbol":"NewTicker","path":"../../../../usr/local/go/src/time/tick.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).initialize","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*systemClock).NewTicker","path":"zapcore/clock.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/console_encoder.go","symbol":"getSliceEncoder","signature":"func getSliceEncoder() *sliceArrayEncoder","start_line":37,"end_line":39,"code":"func getSliceEncoder() *sliceArrayEncoder {\n\treturn _sliceEncoderPool.Get()\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.45},"call_graph":{"callees":[{"symbol":"(*Pool).Get[*go.uber.org/zap/zapcore.sliceArrayEncoder]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/console_encoder.go","symbol":"putSliceEncoder","signature":"func putSliceEncoder(e *sliceArrayEncoder)","start_line":41,"end_line":44,"code":"func putSliceEncoder(e *sliceArrayEncoder) {\n\te.elems = e.elems[:0]\n\t_sliceEncoderPool.Put(e)\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.45},"call_graph":{"callees":[{"symbol":"(*Pool).Put[*go.uber.org/zap/zapcore.sliceArrayEncoder]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/console_encoder.go","symbol":"NewConsoleEncoder","signature":"func NewConsoleEncoder(cfg EncoderConfig) Encoder","start_line":58,"end_line":64,"code":"func NewConsoleEncoder(cfg EncoderConfig) Encoder {\n\tif cfg.ConsoleSeparator == \"\" {\n\t\t// Use a default delimiter of '\\t' for backwards compatibility\n\t\tcfg.ConsoleSeparator = \"\\t\"\n\t}\n\treturn consoleEncoder{newJSONEncoder(cfg, true)}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.91},"call_graph":{"callees":[{"symbol":"newJSONEncoder","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"NewLogger","path":"zaptest/logger.go"},{"symbol":"init$1","path":"encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/console_encoder.go","symbol":"(consoleEncoder).Clone","signature":"func (c consoleEncoder) Clone() Encoder","start_line":66,"end_line":68,"code":"func (c consoleEncoder) Clone() Encoder {\n\treturn consoleEncoder{c.jsonEncoder.Clone().(*jsonEncoder)}\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.66},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).Clone","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).Clone","path":"zapcore/console_encoder.go"},{"symbol":"(*ioCore).clone","path":"zapcore/core.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/console_encoder.go","symbol":"(consoleEncoder).EncodeEntry","signature":"func (c consoleEncoder) EncodeEntry(ent Entry, fields []Field) (*buffer.Buffer, error)","start_line":70,"end_line":130,"code":"func (c consoleEncoder) EncodeEntry(ent Entry, fields []Field) (*buffer.Buffer, error) {\n\tline := bufferpool.Get()\n\n\t// We don't want the entry's metadata to be quoted and escaped (if it's\n\t// encoded as strings), which means that we can't use the JSON encoder. The\n\t// simplest option is to use the memory encoder and fmt.Fprint.\n\t//\n\t// If this ever becomes a performance bottleneck, we can implement\n\t// ArrayEncoder for our plain-text format.\n\tarr := getSliceEncoder()\n\tif c.TimeKey != \"\" \u0026\u0026 c.EncodeTime != nil \u0026\u0026 !ent.Time.IsZero() {\n\t\tc.EncodeTime(ent.Time, arr)\n\t}\n\tif c.LevelKey != \"\" \u0026\u0026 c.EncodeLevel != nil {\n\t\tc.EncodeLevel(ent.Level, arr)\n\t}\n\tif ent.LoggerName != \"\" \u0026\u0026 c.NameKey != \"\" {\n\t\tnameEncoder := c.EncodeName\n\n\t\tif nameEncoder == nil {\n\t\t\t// Fall back to FullNameEncoder for backward compatibility.\n\t\t\tnameEncoder = FullNameEncoder\n\t\t}\n\n\t\tnameEncoder(ent.LoggerName, arr)\n\t}\n\tif ent.Caller.Defined {\n\t\tif c.CallerKey != \"\" \u0026\u0026 c.EncodeCaller != nil {\n\t\t\tc.EncodeCaller(ent.Caller, arr)\n\t\t}\n\t\tif c.FunctionKey != \"\" {\n\t\t\tarr.AppendString(ent.Caller.Function)\n\t\t}\n\t}\n\tfor i := range arr.elems {\n\t\tif i \u003e 0 {\n\t\t\tline.AppendString(c.ConsoleSeparator)\n\t\t}\n\t\t_, _ = fmt.Fprint(line, arr.elems[i])\n\t}\n\tputSliceEncoder(arr)\n\n\t// Add the message itself.\n\tif c.MessageKey != \"\" {\n\t\tc.addSeparatorIfNecessary(line)\n\t\tline.AppendString(ent.Message)\n\t}\n\n\t// Add any structured context.\n\tc.writeContext(line, fields)\n\n\t// If there's no stacktrace key, honor that; this allows users to force\n\t// single-line output.\n\tif ent.Stack != \"\" \u0026\u0026 c.StacktraceKey != \"\" {\n\t\tline.AppendByte('\\n')\n\t\tline.AppendString(ent.Stack)\n\t}\n\n\tline.AppendString(c.LineEnding)\n\treturn line, nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendString","path":"buffer/buffer.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(Time).IsZero","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"(consoleEncoder).addSeparatorIfNecessary","path":"zapcore/console_encoder.go"},{"symbol":"(consoleEncoder).writeContext","path":"zapcore/console_encoder.go"},{"symbol":"Fprint","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"NewPool$1","path":"buffer/pool.go"},{"symbol":"getSliceEncoder","path":"zapcore/console_encoder.go"},{"symbol":"putSliceEncoder","path":"zapcore/console_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"},{"symbol":"(*ioCore).Write","path":"zapcore/core.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/console_encoder.go","symbol":"(consoleEncoder).writeContext","signature":"func (c consoleEncoder) writeContext(line *buffer.Buffer, extra []Field)","start_line":132,"end_line":151,"code":"func (c consoleEncoder) writeContext(line *buffer.Buffer, extra []Field) {\n\tcontext := c.jsonEncoder.Clone().(*jsonEncoder)\n\tdefer func() {\n\t\t// putJSONEncoder assumes the buffer is still used, but we write out the buffer so\n\t\t// we can free it.\n\t\tcontext.buf.Free()\n\t\tputJSONEncoder(context)\n\t}()\n\n\taddFields(context, extra)\n\tcontext.closeOpenNamespaces()\n\tif context.buf.Len() == 0 {\n\t\treturn\n\t}\n\n\tc.addSeparatorIfNecessary(line)\n\tline.AppendByte('{')\n\tline.Write(context.buf.Bytes())\n\tline.AppendByte('}')\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.55},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Bytes","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Len","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Write","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).Clone","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).closeOpenNamespaces","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).addSeparatorIfNecessary","path":"zapcore/console_encoder.go"},{"symbol":"addFields","path":"zapcore/field.go"},{"symbol":"writeContext$1","path":"zapcore/console_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).writeContext","path":"zapcore/console_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/console_encoder.go","symbol":"(consoleEncoder).addSeparatorIfNecessary","signature":"func (c consoleEncoder) addSeparatorIfNecessary(line *buffer.Buffer)","start_line":153,"end_line":157,"code":"func (c consoleEncoder) addSeparatorIfNecessary(line *buffer.Buffer) {\n\tif line.Len() \u003e 0 {\n\t\tline.AppendString(c.ConsoleSeparator)\n\t}\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendString","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Len","path":"buffer/buffer.go"}],"callers":[{"symbol":"(*consoleEncoder).addSeparatorIfNecessary","path":"zapcore/console_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"},{"symbol":"(consoleEncoder).writeContext","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/core.go","symbol":"NewCore","signature":"func NewCore(enc Encoder, ws WriteSyncer, enab LevelEnabler) Core","start_line":58,"end_line":64,"code":"func NewCore(enc Encoder, ws WriteSyncer, enab LevelEnabler) Core {\n\treturn \u0026ioCore{\n\t\tLevelEnabler: enab,\n\t\tenc:          enc,\n\t\tout:          ws,\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.91},"call_graph":{"callees":[],"callers":[{"symbol":"(Config).Build","path":"config.go"},{"symbol":"NewExample","path":"logger.go"},{"symbol":"NewLogger","path":"zaptest/logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/core.go","symbol":"(*ioCore).Level","signature":"func (c *ioCore) Level() Level","start_line":77,"end_line":79,"code":"func (c *ioCore) Level() Level {\n\treturn LevelOf(c.LevelEnabler)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.68},"call_graph":{"callees":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"callers":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/core.go","symbol":"(*ioCore).With","signature":"func (c *ioCore) With(fields []Field) Core","start_line":81,"end_line":85,"code":"func (c *ioCore) With(fields []Field) Core {\n\tclone := c.clone()\n\taddFields(clone.enc, fields)\n\treturn clone\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.94},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*nopCore).With","path":"zapcore/core.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"Fields$1","path":"options.go"},{"symbol":"initOnce$1","path":"zapcore/lazy_with.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/core.go","symbol":"(*ioCore).Check","signature":"func (c *ioCore) Check(ent Entry, ce *CheckedEntry) *CheckedEntry","start_line":87,"end_line":92,"code":"func (c *ioCore) Check(ent Entry, ce *CheckedEntry) *CheckedEntry {\n\tif c.Enabled(ent.Level) {\n\t\treturn ce.AddCore(ent, c)\n\t}\n\treturn ce\n}\n","selection":{"visibility":"exported","reason":"core","score":0.79},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).AddCore","path":"zapcore/entry.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/core.go","symbol":"(*ioCore).Write","signature":"func (c *ioCore) Write(ent Entry, fields []Field) error","start_line":94,"end_line":110,"code":"func (c *ioCore) Write(ent Entry, fields []Field) error {\n\tbuf, err := c.enc.EncodeEntry(ent, fields)\n\tif err != nil {\n\t\treturn err\n\t}\n\t_, err = c.out.Write(buf.Bytes())\n\tbuf.Free()\n\tif err != nil {\n\t\treturn err\n\t}\n\tif ent.Level \u003e ErrorLevel {\n\t\t// Since we may be crashing the program, sync the output.\n\t\t// Ignore Sync errors, pending a clean solution to issue #370.\n\t\t_ = c.Sync()\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"core","score":0.85},"call_graph":{"callees":[],"callers":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*levelFilterCore).Write","path":"zapcore/increase_level.go"},{"symbol":"(*nopCore).Write","path":"zapcore/core.go"},{"symbol":"(multiCore).Write","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/core.go","symbol":"(*ioCore).Sync","signature":"func (c *ioCore) Sync() error","start_line":112,"end_line":114,"code":"func (c *ioCore) Sync() error {\n\treturn c.out.Sync()\n}\n","selection":{"visibility":"exported","reason":"core","score":0.71},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*File).Sync","path":"../../../../usr/local/go/src/os/file_posix.go"},{"symbol":"(*Syncer).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*Writer).Sync","path":"zapio/writer.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(TestingWriter).Sync","path":"zaptest/logger.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(writerWrapper).Sync","path":"zapcore/write_syncer.go"}],"callers":[{"symbol":"(*Logger).Sync","path":"logger.go"},{"symbol":"(*ioCore).Write","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Sync","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Sync","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/core.go","symbol":"(*ioCore).clone","signature":"func (c *ioCore) clone() *ioCore","start_line":116,"end_line":122,"code":"func (c *ioCore) clone() *ioCore {\n\treturn \u0026ioCore{\n\t\tLevelEnabler: c.LevelEnabler,\n\t\tenc:          c.enc.Clone(),\n\t\tout:          c.out,\n\t}\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.59},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).Clone","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).Clone","path":"zapcore/console_encoder.go"}],"callers":[{"symbol":"(*ioCore).With","path":"zapcore/core.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"LowercaseLevelEncoder","signature":"func LowercaseLevelEncoder(l Level, enc PrimitiveArrayEncoder)","start_line":47,"end_line":49,"code":"func LowercaseLevelEncoder(l Level, enc PrimitiveArrayEncoder) {\n\tenc.AppendString(l.String())\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(Level).String","path":"zapcore/level.go"}],"callers":[{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"LowercaseColorLevelEncoder","signature":"func LowercaseColorLevelEncoder(l Level, enc PrimitiveArrayEncoder)","start_line":53,"end_line":59,"code":"func LowercaseColorLevelEncoder(l Level, enc PrimitiveArrayEncoder) {\n\ts, ok := _levelToLowercaseColorString[l]\n\tif !ok {\n\t\ts = _unknownLevelColor.Add(l.String())\n\t}\n\tenc.AppendString(s)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(Color).Add","path":"internal/color/color.go"},{"symbol":"(Level).String","path":"zapcore/level.go"}],"callers":[{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"CapitalLevelEncoder","signature":"func CapitalLevelEncoder(l Level, enc PrimitiveArrayEncoder)","start_line":63,"end_line":65,"code":"func CapitalLevelEncoder(l Level, enc PrimitiveArrayEncoder) {\n\tenc.AppendString(l.CapitalString())\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(Level).CapitalString","path":"zapcore/level.go"}],"callers":[{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"CapitalColorLevelEncoder","signature":"func CapitalColorLevelEncoder(l Level, enc PrimitiveArrayEncoder)","start_line":69,"end_line":75,"code":"func CapitalColorLevelEncoder(l Level, enc PrimitiveArrayEncoder) {\n\ts, ok := _levelToCapitalColorString[l]\n\tif !ok {\n\t\ts = _unknownLevelColor.Add(l.CapitalString())\n\t}\n\tenc.AppendString(s)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(Color).Add","path":"internal/color/color.go"},{"symbol":"(Level).CapitalString","path":"zapcore/level.go"}],"callers":[{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"(*LevelEncoder).UnmarshalText","signature":"func (e *LevelEncoder) UnmarshalText(text []byte) error","start_line":81,"end_line":93,"code":"func (e *LevelEncoder) UnmarshalText(text []byte) error {\n\tswitch string(text) {\n\tcase \"capital\":\n\t\t*e = CapitalLevelEncoder\n\tcase \"capitalColor\":\n\t\t*e = CapitalColorLevelEncoder\n\tcase \"color\":\n\t\t*e = LowercaseColorLevelEncoder\n\tdefault:\n\t\t*e = LowercaseLevelEncoder\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.77},"call_graph":{"callees":[],"callers":[{"symbol":"(*decodeState).literalStore","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(textValue).Set","path":"../../../../usr/local/go/src/flag/flag.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"EpochTimeEncoder","signature":"func EpochTimeEncoder(t time.Time, enc PrimitiveArrayEncoder)","start_line":103,"end_line":107,"code":"func EpochTimeEncoder(t time.Time, enc PrimitiveArrayEncoder) {\n\tnanos := t.UnixNano()\n\tsec := float64(nanos) / float64(time.Second)\n\tenc.AppendFloat64(sec)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendFloat64","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendFloat64","path":"zapcore/memory_encoder.go"},{"symbol":"(Time).UnixNano","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"EpochMillisTimeEncoder","signature":"func EpochMillisTimeEncoder(t time.Time, enc PrimitiveArrayEncoder)","start_line":111,"end_line":115,"code":"func EpochMillisTimeEncoder(t time.Time, enc PrimitiveArrayEncoder) {\n\tnanos := t.UnixNano()\n\tmillis := float64(nanos) / float64(time.Millisecond)\n\tenc.AppendFloat64(millis)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendFloat64","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendFloat64","path":"zapcore/memory_encoder.go"},{"symbol":"(Time).UnixNano","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"EpochNanosTimeEncoder","signature":"func EpochNanosTimeEncoder(t time.Time, enc PrimitiveArrayEncoder)","start_line":119,"end_line":121,"code":"func EpochNanosTimeEncoder(t time.Time, enc PrimitiveArrayEncoder) {\n\tenc.AppendInt64(t.UnixNano())\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendInt64","path":"zapcore/memory_encoder.go"},{"symbol":"(Time).UnixNano","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"encodeTimeLayout","signature":"func encodeTimeLayout(t time.Time, layout string, enc PrimitiveArrayEncoder)","start_line":123,"end_line":134,"code":"func encodeTimeLayout(t time.Time, layout string, enc PrimitiveArrayEncoder) {\n\ttype appendTimeEncoder interface {\n\t\tAppendTimeLayout(time.Time, string)\n\t}\n\n\tif enc, ok := enc.(appendTimeEncoder); ok {\n\t\tenc.AppendTimeLayout(t, layout)\n\t\treturn\n\t}\n\n\tenc.AppendString(t.Format(layout))\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.57},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendTimeLayout","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(Time).Format","path":"../../../../usr/local/go/src/time/format.go"}],"callers":[{"symbol":"ISO8601TimeEncoder","path":"zapcore/encoder.go"},{"symbol":"RFC3339NanoTimeEncoder","path":"zapcore/encoder.go"},{"symbol":"RFC3339TimeEncoder","path":"zapcore/encoder.go"},{"symbol":"TimeEncoderOfLayout$1","path":"zapcore/encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"ISO8601TimeEncoder","signature":"func ISO8601TimeEncoder(t time.Time, enc PrimitiveArrayEncoder)","start_line":141,"end_line":143,"code":"func ISO8601TimeEncoder(t time.Time, enc PrimitiveArrayEncoder) {\n\tencodeTimeLayout(t, \"2006-01-02T15:04:05.000Z0700\", enc)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"encodeTimeLayout","path":"zapcore/encoder.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"RFC3339TimeEncoder","signature":"func RFC3339TimeEncoder(t time.Time, enc PrimitiveArrayEncoder)","start_line":149,"end_line":151,"code":"func RFC3339TimeEncoder(t time.Time, enc PrimitiveArrayEncoder) {\n\tencodeTimeLayout(t, time.RFC3339, enc)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"encodeTimeLayout","path":"zapcore/encoder.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"RFC3339NanoTimeEncoder","signature":"func RFC3339NanoTimeEncoder(t time.Time, enc PrimitiveArrayEncoder)","start_line":158,"end_line":160,"code":"func RFC3339NanoTimeEncoder(t time.Time, enc PrimitiveArrayEncoder) {\n\tencodeTimeLayout(t, time.RFC3339Nano, enc)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"encodeTimeLayout","path":"zapcore/encoder.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"TimeEncoderOfLayout","signature":"func TimeEncoderOfLayout(layout string) TimeEncoder","start_line":164,"end_line":168,"code":"func TimeEncoderOfLayout(layout string) TimeEncoder {\n\treturn func(t time.Time, enc PrimitiveArrayEncoder) {\n\t\tencodeTimeLayout(t, layout, enc)\n\t}\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[],"callers":[{"symbol":"(*TimeEncoder).UnmarshalYAML","path":"zapcore/encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"(*TimeEncoder).UnmarshalText","signature":"func (e *TimeEncoder) UnmarshalText(text []byte) error","start_line":177,"end_line":193,"code":"func (e *TimeEncoder) UnmarshalText(text []byte) error {\n\tswitch string(text) {\n\tcase \"rfc3339nano\", \"RFC3339Nano\":\n\t\t*e = RFC3339NanoTimeEncoder\n\tcase \"rfc3339\", \"RFC3339\":\n\t\t*e = RFC3339TimeEncoder\n\tcase \"iso8601\", \"ISO8601\":\n\t\t*e = ISO8601TimeEncoder\n\tcase \"millis\":\n\t\t*e = EpochMillisTimeEncoder\n\tcase \"nanos\":\n\t\t*e = EpochNanosTimeEncoder\n\tdefault:\n\t\t*e = EpochTimeEncoder\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.77},"call_graph":{"callees":[],"callers":[{"symbol":"(*decodeState).literalStore","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(textValue).Set","path":"../../../../usr/local/go/src/flag/flag.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"(*TimeEncoder).UnmarshalYAML","signature":"func (e *TimeEncoder) UnmarshalYAML(unmarshal func(interface{}) error) error","start_line":204,"end_line":218,"code":"func (e *TimeEncoder) UnmarshalYAML(unmarshal func(interface{}) error) error {\n\tvar o struct {\n\t\tLayout string `json:\"layout\" yaml:\"layout\"`\n\t}\n\tif err := unmarshal(\u0026o); err == nil {\n\t\t*e = TimeEncoderOfLayout(o.Layout)\n\t\treturn nil\n\t}\n\n\tvar s string\n\tif err := unmarshal(\u0026s); err != nil {\n\t\treturn err\n\t}\n\treturn e.UnmarshalText([]byte(s))\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*TimeEncoder).UnmarshalText","path":"zapcore/encoder.go"},{"symbol":"TimeEncoderOfLayout","path":"zapcore/encoder.go"},{"symbol":"UnmarshalJSON$1","path":"zapcore/encoder.go"}],"callers":[{"symbol":"(*TimeEncoder).UnmarshalJSON","path":"zapcore/encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"(*TimeEncoder).UnmarshalJSON","signature":"func (e *TimeEncoder) UnmarshalJSON(data []byte) error","start_line":221,"end_line":225,"code":"func (e *TimeEncoder) UnmarshalJSON(data []byte) error {\n\treturn e.UnmarshalYAML(func(v interface{}) error {\n\t\treturn json.Unmarshal(data, v)\n\t})\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*TimeEncoder).UnmarshalYAML","path":"zapcore/encoder.go"}],"callers":[{"symbol":"(*decodeState).array","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(*decodeState).literalStore","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(*decodeState).object","path":"../../../../usr/local/go/src/encoding/json/decode.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"SecondsDurationEncoder","signature":"func SecondsDurationEncoder(d time.Duration, enc PrimitiveArrayEncoder)","start_line":234,"end_line":236,"code":"func SecondsDurationEncoder(d time.Duration, enc PrimitiveArrayEncoder) {\n\tenc.AppendFloat64(float64(d) / float64(time.Second))\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendFloat64","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendFloat64","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"NanosDurationEncoder","signature":"func NanosDurationEncoder(d time.Duration, enc PrimitiveArrayEncoder)","start_line":240,"end_line":242,"code":"func NanosDurationEncoder(d time.Duration, enc PrimitiveArrayEncoder) {\n\tenc.AppendInt64(int64(d))\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendInt64","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"MillisDurationEncoder","signature":"func MillisDurationEncoder(d time.Duration, enc PrimitiveArrayEncoder)","start_line":246,"end_line":248,"code":"func MillisDurationEncoder(d time.Duration, enc PrimitiveArrayEncoder) {\n\tenc.AppendInt64(d.Nanoseconds() / 1e6)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendInt64","path":"zapcore/memory_encoder.go"},{"symbol":"(Duration).Nanoseconds","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"StringDurationEncoder","signature":"func StringDurationEncoder(d time.Duration, enc PrimitiveArrayEncoder)","start_line":252,"end_line":254,"code":"func StringDurationEncoder(d time.Duration, enc PrimitiveArrayEncoder) {\n\tenc.AppendString(d.String())\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(Duration).String","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"(*DurationEncoder).UnmarshalText","signature":"func (e *DurationEncoder) UnmarshalText(text []byte) error","start_line":259,"end_line":271,"code":"func (e *DurationEncoder) UnmarshalText(text []byte) error {\n\tswitch string(text) {\n\tcase \"string\":\n\t\t*e = StringDurationEncoder\n\tcase \"nanos\":\n\t\t*e = NanosDurationEncoder\n\tcase \"ms\":\n\t\t*e = MillisDurationEncoder\n\tdefault:\n\t\t*e = SecondsDurationEncoder\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.77},"call_graph":{"callees":[],"callers":[{"symbol":"(*decodeState).literalStore","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(textValue).Set","path":"../../../../usr/local/go/src/flag/flag.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"FullCallerEncoder","signature":"func FullCallerEncoder(caller EntryCaller, enc PrimitiveArrayEncoder)","start_line":281,"end_line":284,"code":"func FullCallerEncoder(caller EntryCaller, enc PrimitiveArrayEncoder) {\n\t// TODO: consider using a byte-oriented API to save an allocation.\n\tenc.AppendString(caller.String())\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(EntryCaller).String","path":"zapcore/entry.go"}],"callers":[{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"ShortCallerEncoder","signature":"func ShortCallerEncoder(caller EntryCaller, enc PrimitiveArrayEncoder)","start_line":288,"end_line":291,"code":"func ShortCallerEncoder(caller EntryCaller, enc PrimitiveArrayEncoder) {\n\t// TODO: consider using a byte-oriented API to save an allocation.\n\tenc.AppendString(caller.TrimmedPath())\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"},{"symbol":"(EntryCaller).TrimmedPath","path":"zapcore/entry.go"}],"callers":[{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"(*CallerEncoder).UnmarshalText","signature":"func (e *CallerEncoder) UnmarshalText(text []byte) error","start_line":295,"end_line":303,"code":"func (e *CallerEncoder) UnmarshalText(text []byte) error {\n\tswitch string(text) {\n\tcase \"full\":\n\t\t*e = FullCallerEncoder\n\tdefault:\n\t\t*e = ShortCallerEncoder\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.77},"call_graph":{"callees":[],"callers":[{"symbol":"(*decodeState).literalStore","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(textValue).Set","path":"../../../../usr/local/go/src/flag/flag.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"FullNameEncoder","signature":"func FullNameEncoder(loggerName string, enc PrimitiveArrayEncoder)","start_line":313,"end_line":315,"code":"func FullNameEncoder(loggerName string, enc PrimitiveArrayEncoder) {\n\tenc.AppendString(loggerName)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendString","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).EncodeEntry","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/encoder.go","symbol":"(*NameEncoder).UnmarshalText","signature":"func (e *NameEncoder) UnmarshalText(text []byte) error","start_line":319,"end_line":327,"code":"func (e *NameEncoder) UnmarshalText(text []byte) error {\n\tswitch string(text) {\n\tcase \"full\":\n\t\t*e = FullNameEncoder\n\tdefault:\n\t\t*e = FullNameEncoder\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.77},"call_graph":{"callees":[],"callers":[{"symbol":"(*decodeState).literalStore","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(textValue).Set","path":"../../../../usr/local/go/src/flag/flag.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"getCheckedEntry","signature":"func getCheckedEntry() *CheckedEntry","start_line":42,"end_line":46,"code":"func getCheckedEntry() *CheckedEntry {\n\tce := _cePool.Get()\n\tce.reset()\n\treturn ce\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.51},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).reset","path":"zapcore/entry.go"},{"symbol":"(*Pool).Get[*go.uber.org/zap/zapcore.CheckedEntry]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(*CheckedEntry).AddCore","path":"zapcore/entry.go"},{"symbol":"(*CheckedEntry).After","path":"zapcore/entry.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"putCheckedEntry","signature":"func putCheckedEntry(ce *CheckedEntry)","start_line":48,"end_line":53,"code":"func putCheckedEntry(ce *CheckedEntry) {\n\tif ce == nil {\n\t\treturn\n\t}\n\t_cePool.Put(ce)\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[{"symbol":"(*Pool).Put[*go.uber.org/zap/zapcore.CheckedEntry]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"NewEntryCaller","signature":"func NewEntryCaller(pc uintptr, file string, line int, ok bool) EntryCaller","start_line":57,"end_line":67,"code":"func NewEntryCaller(pc uintptr, file string, line int, ok bool) EntryCaller {\n\tif !ok {\n\t\treturn EntryCaller{}\n\t}\n\treturn EntryCaller{\n\t\tPC:      pc,\n\t\tFile:    file,\n\t\tLine:    line,\n\t\tDefined: true,\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(EntryCaller).String","signature":"func (ec EntryCaller) String() string","start_line":79,"end_line":81,"code":"func (ec EntryCaller) String() string {\n\treturn ec.FullPath()\n}\n","selection":{"visibility":"exported","reason":"core","score":0.68},"call_graph":{"callees":[{"symbol":"(EntryCaller).FullPath","path":"zapcore/entry.go"}],"callers":[{"symbol":"(*EntryCaller).String","path":"zapcore/entry.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(*pp).handleMethods","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"(http2FrameWriteRequest).String","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"FullCallerEncoder","path":"zapcore/encoder.go"},{"symbol":"contextName","path":"../../../../usr/local/go/src/context/context.go"},{"symbol":"encodeStringer","path":"zapcore/field.go"},{"symbol":"preprintpanics","path":"../../../../usr/local/go/src/runtime/panic.go"},{"symbol":"stringify","path":"../../../../usr/local/go/src/context/context.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(EntryCaller).FullPath","signature":"func (ec EntryCaller) FullPath() string","start_line":85,"end_line":96,"code":"func (ec EntryCaller) FullPath() string {\n\tif !ec.Defined {\n\t\treturn \"undefined\"\n\t}\n\tbuf := bufferpool.Get()\n\tbuf.AppendString(ec.File)\n\tbuf.AppendByte(':')\n\tbuf.AppendInt(int64(ec.Line))\n\tcaller := buf.String()\n\tbuf.Free()\n\treturn caller\n}\n","selection":{"visibility":"exported","reason":"core","score":0.71},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendInt","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendString","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Free","path":"buffer/buffer.go"},{"symbol":"(*Buffer).String","path":"buffer/buffer.go"},{"symbol":"(Pool).Get","path":"buffer/pool.go"},{"symbol":"NewPool$1","path":"buffer/pool.go"}],"callers":[{"symbol":"(*EntryCaller).FullPath","path":"zapcore/entry.go"},{"symbol":"(EntryCaller).String","path":"zapcore/entry.go"},{"symbol":"(EntryCaller).TrimmedPath","path":"zapcore/entry.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(EntryCaller).TrimmedPath","signature":"func (ec EntryCaller) TrimmedPath() string","start_line":100,"end_line":134,"code":"func (ec EntryCaller) TrimmedPath() string {\n\tif !ec.Defined {\n\t\treturn \"undefined\"\n\t}\n\t// nb. To make sure we trim the path correctly on Windows too, we\n\t// counter-intuitively need to use '/' and *not* os.PathSeparator here,\n\t// because the path given originates from Go stdlib, specifically\n\t// runtime.Caller() which (as of Mar/17) returns forward slashes even on\n\t// Windows.\n\t//\n\t// See https://github.com/golang/go/issues/3335\n\t// and https://github.com/golang/go/issues/18151\n\t//\n\t// for discussion on the issue on Go side.\n\t//\n\t// Find the last separator.\n\t//\n\tidx := strings.LastIndexByte(ec.File, '/')\n\tif idx == -1 {\n\t\treturn ec.FullPath()\n\t}\n\t// Find the penultimate separator.\n\tidx = strings.LastIndexByte(ec.File[:idx], '/')\n\tif idx == -1 {\n\t\treturn ec.FullPath()\n\t}\n\tbuf := bufferpool.Get()\n\t// Keep everything after the penultimate separator.\n\tbuf.AppendString(ec.File[idx+1:])\n\tbuf.AppendByte(':')\n\tbuf.AppendInt(int64(ec.Line))\n\tcaller := buf.String()\n\tbuf.Free()\n\treturn caller\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendInt","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendString","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Free","path":"buffer/buffer.go"},{"symbol":"(*Buffer).String","path":"buffer/buffer.go"},{"symbol":"(EntryCaller).FullPath","path":"zapcore/entry.go"},{"symbol":"(Pool).Get","path":"buffer/pool.go"},{"symbol":"LastIndexByte","path":"../../../../usr/local/go/src/strings/strings.go"},{"symbol":"NewPool$1","path":"buffer/pool.go"}],"callers":[{"symbol":"(*EntryCaller).TrimmedPath","path":"zapcore/entry.go"},{"symbol":"ShortCallerEncoder","path":"zapcore/encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(CheckWriteAction).OnWrite","signature":"func (a CheckWriteAction) OnWrite(ce *CheckedEntry, _ []Field)","start_line":191,"end_line":200,"code":"func (a CheckWriteAction) OnWrite(ce *CheckedEntry, _ []Field) {\n\tswitch a {\n\tcase WriteThenGoexit:\n\t\truntime.Goexit()\n\tcase WriteThenPanic:\n\t\tpanic(ce.Message)\n\tcase WriteThenFatal:\n\t\texit.With(1)\n\t}\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[{"symbol":"Goexit","path":"../../../../usr/local/go/src/runtime/panic.go"},{"symbol":"With","path":"internal/exit/exit.go"}],"callers":[{"symbol":"(*CheckWriteAction).OnWrite","path":"zapcore/entry.go"},{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(*CheckedEntry).reset","signature":"func (ce *CheckedEntry) reset()","start_line":218,"end_line":228,"code":"func (ce *CheckedEntry) reset() {\n\tce.Entry = Entry{}\n\tce.ErrorOutput = nil\n\tce.dirty = false\n\tce.after = nil\n\tfor i := range ce.cores {\n\t\t// don't keep references to cores\n\t\tce.cores[i] = nil\n\t}\n\tce.cores = ce.cores[:0]\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[],"callers":[{"symbol":"getCheckedEntry","path":"zapcore/entry.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(*CheckedEntry).Write","signature":"func (ce *CheckedEntry) Write(fields ...Field)","start_line":233,"end_line":275,"code":"func (ce *CheckedEntry) Write(fields ...Field) {\n\tif ce == nil {\n\t\treturn\n\t}\n\n\tif ce.dirty {\n\t\tif ce.ErrorOutput != nil {\n\t\t\t// Make a best effort to detect unsafe re-use of this CheckedEntry.\n\t\t\t// If the entry is dirty, log an internal error; because the\n\t\t\t// CheckedEntry is being used after it was returned to the pool,\n\t\t\t// the message may be an amalgamation from multiple call sites.\n\t\t\t_, _ = fmt.Fprintf(\n\t\t\t\tce.ErrorOutput,\n\t\t\t\t\"%v Unsafe CheckedEntry re-use near Entry %+v.\\n\",\n\t\t\t\tce.Time,\n\t\t\t\tce.Entry,\n\t\t\t)\n\t\t\t_ = ce.ErrorOutput.Sync() // ignore error\n\t\t}\n\t\treturn\n\t}\n\tce.dirty = true\n\n\tvar err error\n\tfor i := range ce.cores {\n\t\terr = multierr.Append(err, ce.cores[i].Write(ce.Entry, fields))\n\t}\n\tif err != nil \u0026\u0026 ce.ErrorOutput != nil {\n\t\t_, _ = fmt.Fprintf(\n\t\t\tce.ErrorOutput,\n\t\t\t\"%v write error: %v\\n\",\n\t\t\tce.Time,\n\t\t\terr,\n\t\t)\n\t\t_ = ce.ErrorOutput.Sync() // ignore error\n\t}\n\n\thook := ce.after\n\tif hook != nil {\n\t\thook.OnWrite(ce, fields)\n\t}\n\tputCheckedEntry(ce)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.8},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*Syncer).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*hooked).Write","path":"zapcore/hook.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(TestingWriter).Sync","path":"zaptest/logger.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(writerWrapper).Sync","path":"zapcore/write_syncer.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"},{"symbol":"Fprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"putCheckedEntry","path":"zapcore/entry.go"}],"callers":[{"symbol":"(*Logger).DPanic","path":"logger.go"},{"symbol":"(*Logger).Debug","path":"logger.go"},{"symbol":"(*Logger).Error","path":"logger.go"},{"symbol":"(*Logger).Fatal","path":"logger.go"},{"symbol":"(*Logger).Info","path":"logger.go"},{"symbol":"(*Logger).Log","path":"logger.go"},{"symbol":"(*Logger).Panic","path":"logger.go"},{"symbol":"(*Logger).Warn","path":"logger.go"},{"symbol":"(*SugaredLogger).log","path":"sugar.go"},{"symbol":"(*Writer).log","path":"zapio/writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(*CheckedEntry).AddCore","signature":"func (ce *CheckedEntry) AddCore(ent Entry, core Core) *CheckedEntry","start_line":280,"end_line":287,"code":"func (ce *CheckedEntry) AddCore(ent Entry, core Core) *CheckedEntry {\n\tif ce == nil {\n\t\tce = getCheckedEntry()\n\t\tce.Entry = ent\n\t}\n\tce.cores = append(ce.cores, core)\n\treturn ce\n}\n","selection":{"visibility":"exported","reason":"core","score":0.71},"call_graph":{"callees":[{"symbol":"getCheckedEntry","path":"zapcore/entry.go"}],"callers":[{"symbol":"(*contextObserver).Check","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(*CheckedEntry).Should","signature":"func (ce *CheckedEntry) Should(ent Entry, should CheckWriteAction) *CheckedEntry","start_line":294,"end_line":296,"code":"func (ce *CheckedEntry) Should(ent Entry, should CheckWriteAction) *CheckedEntry {\n\treturn ce.After(ent, should)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.6},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).After","path":"zapcore/entry.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/entry.go","symbol":"(*CheckedEntry).After","signature":"func (ce *CheckedEntry) After(ent Entry, hook CheckWriteHook) *CheckedEntry","start_line":301,"end_line":308,"code":"func (ce *CheckedEntry) After(ent Entry, hook CheckWriteHook) *CheckedEntry {\n\tif ce == nil {\n\t\tce = getCheckedEntry()\n\t\tce.Entry = ent\n\t}\n\tce.after = hook\n\treturn ce\n}\n","selection":{"visibility":"exported","reason":"core","score":0.72},"call_graph":{"callees":[{"symbol":"getCheckedEntry","path":"zapcore/entry.go"}],"callers":[{"symbol":"(*CheckedEntry).Should","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/error.go","symbol":"encodeError","signature":"func encodeError(key string, err error, enc ObjectEncoder) (retErr error)","start_line":47,"end_line":79,"code":"func encodeError(key string, err error, enc ObjectEncoder) (retErr error) {\n\t// Try to capture panics (from nil references or otherwise) when calling\n\t// the Error() method\n\tdefer func() {\n\t\tif rerr := recover(); rerr != nil {\n\t\t\t// If it's a nil pointer, just say \"\u003cnil\u003e\". The likeliest causes are a\n\t\t\t// error that fails to guard against nil or a nil pointer for a\n\t\t\t// value receiver, and in either case, \"\u003cnil\u003e\" is a nice result.\n\t\t\tif v := reflect.ValueOf(err); v.Kind() == reflect.Ptr \u0026\u0026 v.IsNil() {\n\t\t\t\tenc.AddString(key, \"\u003cnil\u003e\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tretErr = fmt.Errorf(\"PANIC=%v\", rerr)\n\t\t}\n\t}()\n\n\tbasic := err.Error()\n\tenc.AddString(key, basic)\n\n\tswitch e := err.(type) {\n\tcase errorGroup:\n\t\treturn enc.AddArray(key+\"Causes\", errArray(e.Errors()))\n\tcase fmt.Formatter:\n\t\tverbose := fmt.Sprintf(\"%+v\", e)\n\t\tif verbose != basic {\n\t\t\t// This is a rich error type, like those produced by\n\t\t\t// github.com/pkg/errors.\n\t\t\tenc.AddString(key+\"Verbose\", verbose)\n\t\t}\n\t}\n\treturn nil\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.51},"call_graph":{"callees":[{"symbol":"(*InvalidUnmarshalError).Error","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(*MapObjectEncoder).AddString","path":"zapcore/memory_encoder.go"},{"symbol":"(*MaxBytesError).Error","path":"../../../../usr/local/go/src/net/http/request.go"},{"symbol":"(*ReadError).Error","path":"../../../../usr/local/go/src/compress/flate/inflate.go"},{"symbol":"(*jsonEncoder).AddString","path":"zapcore/json_encoder.go"},{"symbol":"(InvalidIndexError).Error","path":"../../../../usr/local/go/src/vendor/golang.org/x/net/http2/hpack/hpack.go"},{"symbol":"(fileSizeError).Error","path":"../../../../usr/local/go/src/time/zoneinfo_read.go"},{"symbol":"(http2goAwayFlowError).Error","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"encodeError$1","path":"zapcore/error.go"}],"callers":[{"symbol":"(*errArrayElem).MarshalLogObject","path":"zapcore/error.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/error.go","symbol":"(errArray).MarshalLogArray","signature":"func (errs errArray) MarshalLogArray(arr ArrayEncoder) error","start_line":94,"end_line":108,"code":"func (errs errArray) MarshalLogArray(arr ArrayEncoder) error {\n\tfor i := range errs {\n\t\tif errs[i] == nil {\n\t\t\tcontinue\n\t\t}\n\n\t\tel := newErrArrayElem(errs[i])\n\t\terr := arr.AppendObject(el)\n\t\tel.Free()\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"core","score":0.71},"call_graph":{"callees":[{"symbol":"(*Pool).Get[*go.uber.org/zap.errArrayElem]","path":"internal/pool/pool.go"},{"symbol":"(*Pool).Put[*go.uber.org/zap.errArrayElem]","path":"internal/pool/pool.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*errArray).MarshalLogArray","path":"error.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/error.go","symbol":"newErrArrayElem","signature":"func newErrArrayElem(err error) *errArrayElem","start_line":119,"end_line":123,"code":"func newErrArrayElem(err error) *errArrayElem {\n\te := _errArrayElemPool.Get()\n\te.err = err\n\treturn e\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[{"symbol":"(*Pool).Get[*go.uber.org/zap/zapcore.errArrayElem]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(errArray).MarshalLogArray","path":"zapcore/error.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/error.go","symbol":"(*errArrayElem).MarshalLogArray","signature":"func (e *errArrayElem) MarshalLogArray(arr ArrayEncoder) error","start_line":125,"end_line":127,"code":"func (e *errArrayElem) MarshalLogArray(arr ArrayEncoder) error {\n\treturn arr.AppendObject(e)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.61},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/error.go","symbol":"(*errArrayElem).MarshalLogObject","signature":"func (e *errArrayElem) MarshalLogObject(enc ObjectEncoder) error","start_line":129,"end_line":131,"code":"func (e *errArrayElem) MarshalLogObject(enc ObjectEncoder) error {\n\treturn encodeError(\"error\", e.err, enc)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.62},"call_graph":{"callees":[{"symbol":"encodeError","path":"zapcore/error.go"}],"callers":[{"symbol":"(*MapObjectEncoder).AddObject","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/error.go","symbol":"(*errArrayElem).Free","signature":"func (e *errArrayElem) Free()","start_line":133,"end_line":136,"code":"func (e *errArrayElem) Free() {\n\te.err = nil\n\t_errArrayElemPool.Put(e)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.64},"call_graph":{"callees":[{"symbol":"(*Pool).Put[*go.uber.org/zap/zapcore.errArrayElem]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(errArray).MarshalLogArray","path":"zapcore/error.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/field.go","symbol":"(Field).AddTo","signature":"func (f Field) AddTo(enc ObjectEncoder)","start_line":114,"end_line":186,"code":"func (f Field) AddTo(enc ObjectEncoder) {\n\tvar err error\n\n\tswitch f.Type {\n\tcase ArrayMarshalerType:\n\t\terr = enc.AddArray(f.Key, f.Interface.(ArrayMarshaler))\n\tcase ObjectMarshalerType:\n\t\terr = enc.AddObject(f.Key, f.Interface.(ObjectMarshaler))\n\tcase InlineMarshalerType:\n\t\terr = f.Interface.(ObjectMarshaler).MarshalLogObject(enc)\n\tcase BinaryType:\n\t\tenc.AddBinary(f.Key, f.Interface.([]byte))\n\tcase BoolType:\n\t\tenc.AddBool(f.Key, f.Integer == 1)\n\tcase ByteStringType:\n\t\tenc.AddByteString(f.Key, f.Interface.([]byte))\n\tcase Complex128Type:\n\t\tenc.AddComplex128(f.Key, f.Interface.(complex128))\n\tcase Complex64Type:\n\t\tenc.AddComplex64(f.Key, f.Interface.(complex64))\n\tcase DurationType:\n\t\tenc.AddDuration(f.Key, time.Duration(f.Integer))\n\tcase Float64Type:\n\t\tenc.AddFloat64(f.Key, math.Float64frombits(uint64(f.Integer)))\n\tcase Float32Type:\n\t\tenc.AddFloat32(f.Key, math.Float32frombits(uint32(f.Integer)))\n\tcase Int64Type:\n\t\tenc.AddInt64(f.Key, f.Integer)\n\tcase Int32Type:\n\t\tenc.AddInt32(f.Key, int32(f.Integer))\n\tcase Int16Type:\n\t\tenc.AddInt16(f.Key, int16(f.Integer))\n\tcase Int8Type:\n\t\tenc.AddInt8(f.Key, int8(f.Integer))\n\tcase StringType:\n\t\tenc.AddString(f.Key, f.String)\n\tcase TimeType:\n\t\tif f.Interface != nil {\n\t\t\tenc.AddTime(f.Key, time.Unix(0, f.Integer).In(f.Interface.(*time.Location)))\n\t\t} else {\n\t\t\t// Fall back to UTC if location is nil.\n\t\t\tenc.AddTime(f.Key, time.Unix(0, f.Integer))\n\t\t}\n\tcase TimeFullType:\n\t\tenc.AddTime(f.Key, f.Interface.(time.Time))\n\tcase Uint64Type:\n\t\tenc.AddUint64(f.Key, uint64(f.Integer))\n\tcase Uint32Type:\n\t\tenc.AddUint32(f.Key, uint32(f.Integer))\n\tcase Uint16Type:\n\t\tenc.AddUint16(f.Key, uint16(f.Integer))\n\tcase Uint8Type:\n\t\tenc.AddUint8(f.Key, uint8(f.Integer))\n\tcase UintptrType:\n\t\tenc.AddUintptr(f.Key, uintptr(f.Integer))\n\tcase ReflectType:\n\t\terr = enc.AddReflected(f.Key, f.Interface)\n\tcase NamespaceType:\n\t\tenc.OpenNamespace(f.Key)\n\tcase StringerType:\n\t\terr = encodeStringer(f.Key, f.Interface, enc)\n\tcase ErrorType:\n\t\terr = encodeError(f.Key, f.Interface.(error), enc)\n\tcase SkipType:\n\t\tbreak\n\tdefault:\n\t\tpanic(fmt.Sprintf(\"unknown field type: %v\", f))\n\t}\n\n\tif err != nil {\n\t\tenc.AddString(fmt.Sprintf(\"%sError\", f.Key), err.Error())\n\t}\n}\n","selection":{"visibility":"exported","reason":"core","score":0.72},"call_graph":{"callees":[{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*MapObjectEncoder).AddString","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AddArray","path":"zapcore/json_encoder.go"},{"symbol":"(Time).In","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"Float32frombits","path":"../../../../usr/local/go/src/math/unsafe.go"},{"symbol":"Float64frombits","path":"../../../../usr/local/go/src/math/unsafe.go"},{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"Unix","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"encodeError","path":"zapcore/error.go"},{"symbol":"encodeStringer","path":"zapcore/field.go"}],"callers":[{"symbol":"(*Field).AddTo","path":"zapcore/field.go"},{"symbol":"(*errArrayElem).MarshalLogObject","path":"error.go"},{"symbol":"(LoggedEntry).ContextMap","path":"zaptest/observer/logged_entry.go"},{"symbol":"(dictObject).MarshalLogObject","path":"field.go"},{"symbol":"(invalidPair).MarshalLogObject","path":"sugar.go"},{"symbol":"addFields","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/field.go","symbol":"(Field).Equals","signature":"func (f Field) Equals(other Field) bool","start_line":190,"end_line":206,"code":"func (f Field) Equals(other Field) bool {\n\tif f.Type != other.Type {\n\t\treturn false\n\t}\n\tif f.Key != other.Key {\n\t\treturn false\n\t}\n\n\tswitch f.Type {\n\tcase BinaryType, ByteStringType:\n\t\treturn bytes.Equal(f.Interface.([]byte), other.Interface.([]byte))\n\tcase ArrayMarshalerType, ObjectMarshalerType, ErrorType, ReflectType:\n\t\treturn reflect.DeepEqual(f.Interface, other.Interface)\n\tdefault:\n\t\treturn f == other\n\t}\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[{"symbol":"DeepEqual","path":"../../../../usr/local/go/src/reflect/deepequal.go"},{"symbol":"Equal","path":"../../../../usr/local/go/src/bytes/bytes.go"}],"callers":[{"symbol":"(*Field).Equals","path":"zapcore/field.go"},{"symbol":"FilterField$1","path":"zaptest/observer/observer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/field.go","symbol":"addFields","signature":"func addFields(enc ObjectEncoder, fields []Field)","start_line":208,"end_line":212,"code":"func addFields(enc ObjectEncoder, fields []Field) {\n\tfor i := range fields {\n\t\tfields[i].AddTo(enc)\n\t}\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.51},"call_graph":{"callees":[{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"callers":[{"symbol":"(*ioCore).With","path":"zapcore/core.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).writeContext","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/field.go","symbol":"encodeStringer","signature":"func encodeStringer(key string, stringer interface{}, enc ObjectEncoder) (retErr error)","start_line":214,"end_line":233,"code":"func encodeStringer(key string, stringer interface{}, enc ObjectEncoder) (retErr error) {\n\t// Try to capture panics (from nil references or otherwise) when calling\n\t// the String() method, similar to https://golang.org/src/fmt/print.go#L540\n\tdefer func() {\n\t\tif err := recover(); err != nil {\n\t\t\t// If it's a nil pointer, just say \"\u003cnil\u003e\". The likeliest causes are a\n\t\t\t// Stringer that fails to guard against nil or a nil pointer for a\n\t\t\t// value receiver, and in either case, \"\u003cnil\u003e\" is a nice result.\n\t\t\tif v := reflect.ValueOf(stringer); v.Kind() == reflect.Ptr \u0026\u0026 v.IsNil() {\n\t\t\t\tenc.AddString(key, \"\u003cnil\u003e\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tretErr = fmt.Errorf(\"PANIC=%v\", err)\n\t\t}\n\t}()\n\n\tenc.AddString(key, stringer.(fmt.Stringer).String())\n\treturn nil\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[{"symbol":"(*Userinfo).String","path":"../../../../usr/local/go/src/net/url/url.go"},{"symbol":"(*socksAddr).String","path":"../../../../usr/local/go/src/net/http/socks_bundle.go"},{"symbol":"(*timerCtx).String","path":"../../../../usr/local/go/src/context/context.go"},{"symbol":"(*valueCtx).String","path":"../../../../usr/local/go/src/context/context.go"},{"symbol":"(Hash).String","path":"../../../../usr/local/go/src/crypto/crypto.go"},{"symbol":"(RCode).String","path":"../../../../usr/local/go/src/vendor/golang.org/x/net/dns/dnsmessage/message.go"},{"symbol":"(backgroundCtx).String","path":"../../../../usr/local/go/src/context/context.go"},{"symbol":"(nat).String","path":"../../../../usr/local/go/src/math/big/nat.go"},{"symbol":"(rtype).String","path":"../../../../usr/local/go/src/internal/reflectlite/type.go"},{"symbol":"encodeStringer$1","path":"zapcore/field.go"}],"callers":[{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/hook.go","symbol":"RegisterHooks","signature":"func RegisterHooks(core Core, hooks ...func(Entry) error) Core","start_line":40,"end_line":46,"code":"func RegisterHooks(core Core, hooks ...func(Entry) error) Core {\n\tfuncs := append([]func(Entry) error{}, hooks...)\n\treturn \u0026hooked{\n\t\tCore:  core,\n\t\tfuncs: funcs,\n\t}\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"Hooks$1","path":"options.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/hook.go","symbol":"(*hooked).Level","signature":"func (h *hooked) Level() Level","start_line":48,"end_line":50,"code":"func (h *hooked) Level() Level {\n\treturn LevelOf(h.Core)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.63},"call_graph":{"callees":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"callers":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/hook.go","symbol":"(*hooked).Check","signature":"func (h *hooked) Check(ent Entry, ce *CheckedEntry) *CheckedEntry","start_line":52,"end_line":60,"code":"func (h *hooked) Check(ent Entry, ce *CheckedEntry) *CheckedEntry {\n\t// Let the wrapped Core decide whether to log this message or not. This\n\t// also gives the downstream a chance to register itself directly with the\n\t// CheckedEntry.\n\tif downstream := h.Core.Check(ent, ce); downstream != nil {\n\t\treturn downstream.AddCore(ent, h)\n\t}\n\treturn ce\n}\n","selection":{"visibility":"exported","reason":"core","score":0.74},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).AddCore","path":"zapcore/entry.go"},{"symbol":"(*contextObserver).Check","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"},{"symbol":"(nopCore).Check","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/hook.go","symbol":"(*hooked).With","signature":"func (h *hooked) With(fields []Field) Core","start_line":62,"end_line":67,"code":"func (h *hooked) With(fields []Field) Core {\n\treturn \u0026hooked{\n\t\tCore:  h.Core.With(fields),\n\t\tfuncs: h.funcs,\n\t}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.89},"call_graph":{"callees":[{"symbol":"(*contextObserver).With","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*ioCore).With","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"(nopCore).With","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"Fields$1","path":"options.go"},{"symbol":"initOnce$1","path":"zapcore/lazy_with.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/hook.go","symbol":"(*hooked).Write","signature":"func (h *hooked) Write(ent Entry, _ []Field) error","start_line":69,"end_line":77,"code":"func (h *hooked) Write(ent Entry, _ []Field) error {\n\t// Since our downstream had a chance to register itself directly with the\n\t// CheckedMessage, we don't need to call it here.\n\tvar err error\n\tfor i := range h.funcs {\n\t\terr = multierr.Append(err, h.funcs[i](ent))\n\t}\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"core","score":0.8},"call_graph":{"callees":[{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*levelFilterCore).Write","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Write","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/increase_level.go","symbol":"NewIncreaseLevelCore","signature":"func NewIncreaseLevelCore(core Core, level LevelEnabler) (Core, error)","start_line":39,"end_line":47,"code":"func NewIncreaseLevelCore(core Core, level LevelEnabler) (Core, error) {\n\tfor l := _maxLevel; l \u003e= _minLevel; l-- {\n\t\tif !core.Enabled(l) \u0026\u0026 level.Enabled(l) {\n\t\t\treturn nil, fmt.Errorf(\"invalid increase level, as level %q is allowed by increased level, but not by existing core\", l)\n\t\t}\n\t}\n\n\treturn \u0026levelFilterCore{core, level}, nil\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"}],"callers":[{"symbol":"IncreaseLevel$1","path":"options.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/increase_level.go","symbol":"(*levelFilterCore).Enabled","signature":"func (c *levelFilterCore) Enabled(lvl Level) bool","start_line":49,"end_line":51,"code":"func (c *levelFilterCore) Enabled(lvl Level) bool {\n\treturn c.level.Enabled(lvl)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.68},"call_graph":{"callees":[{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).Errorln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Infoln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).V","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"LevelOf","path":"zapcore/level.go"},{"symbol":"NewIncreaseLevelCore","path":"zapcore/increase_level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/increase_level.go","symbol":"(*levelFilterCore).Level","signature":"func (c *levelFilterCore) Level() Level","start_line":53,"end_line":55,"code":"func (c *levelFilterCore) Level() Level {\n\treturn LevelOf(c.level)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.63},"call_graph":{"callees":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"callers":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/increase_level.go","symbol":"(*levelFilterCore).With","signature":"func (c *levelFilterCore) With(fields []Field) Core","start_line":57,"end_line":59,"code":"func (c *levelFilterCore) With(fields []Field) Core {\n\treturn \u0026levelFilterCore{c.core.With(fields), c.level}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.79},"call_graph":{"callees":[{"symbol":"(*contextObserver).With","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*ioCore).With","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"(nopCore).With","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"Fields$1","path":"options.go"},{"symbol":"initOnce$1","path":"zapcore/lazy_with.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/increase_level.go","symbol":"(*levelFilterCore).Check","signature":"func (c *levelFilterCore) Check(ent Entry, ce *CheckedEntry) *CheckedEntry","start_line":61,"end_line":67,"code":"func (c *levelFilterCore) Check(ent Entry, ce *CheckedEntry) *CheckedEntry {\n\tif !c.Enabled(ent.Level) {\n\t\treturn ce\n\t}\n\n\treturn c.core.Check(ent, ce)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.74},"call_graph":{"callees":[{"symbol":"(*contextObserver).Check","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"},{"symbol":"(nopCore).Check","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/increase_level.go","symbol":"(*levelFilterCore).Write","signature":"func (c *levelFilterCore) Write(ent Entry, fields []Field) error","start_line":69,"end_line":71,"code":"func (c *levelFilterCore) Write(ent Entry, fields []Field) error {\n\treturn c.core.Write(ent, fields)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[{"symbol":"(*contextObserver).Write","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Write","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Write","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Write","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Write","path":"zapcore/tee.go"},{"symbol":"(nopCore).Write","path":"zapcore/core.go"}],"callers":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*levelFilterCore).Write","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Write","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/increase_level.go","symbol":"(*levelFilterCore).Sync","signature":"func (c *levelFilterCore) Sync() error","start_line":73,"end_line":75,"code":"func (c *levelFilterCore) Sync() error {\n\treturn c.core.Sync()\n}\n","selection":{"visibility":"exported","reason":"core","score":0.66},"call_graph":{"callees":[{"symbol":"(*contextObserver).Sync","path":"zaptest/observer/observer.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Sync","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Sync","path":"zapcore/tee.go"},{"symbol":"(nopCore).Sync","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).Sync","path":"logger.go"},{"symbol":"(*levelFilterCore).Sync","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Sync","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"putJSONEncoder","signature":"func putJSONEncoder(enc *jsonEncoder)","start_line":41,"end_line":52,"code":"func putJSONEncoder(enc *jsonEncoder) {\n\tif enc.reflectBuf != nil {\n\t\tenc.reflectBuf.Free()\n\t}\n\tenc.EncoderConfig = nil\n\tenc.buf = nil\n\tenc.spaced = false\n\tenc.openNamespaces = 0\n\tenc.reflectBuf = nil\n\tenc.reflectEnc = nil\n\t_jsonPool.Put(enc)\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"(*Buffer).Free","path":"buffer/buffer.go"},{"symbol":"(*Pool).Put[*go.uber.org/zap/zapcore.jsonEncoder]","path":"internal/pool/pool.go"}],"callers":[{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"writeContext$1","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"NewJSONEncoder","signature":"func NewJSONEncoder(cfg EncoderConfig) Encoder","start_line":77,"end_line":79,"code":"func NewJSONEncoder(cfg EncoderConfig) Encoder {\n\treturn newJSONEncoder(cfg, false)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.81},"call_graph":{"callees":[{"symbol":"newJSONEncoder","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"NewExample","path":"logger.go"},{"symbol":"init$2","path":"encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"newJSONEncoder","signature":"func newJSONEncoder(cfg EncoderConfig, spaced bool) *jsonEncoder","start_line":81,"end_line":98,"code":"func newJSONEncoder(cfg EncoderConfig, spaced bool) *jsonEncoder {\n\tif cfg.SkipLineEnding {\n\t\tcfg.LineEnding = \"\"\n\t} else if cfg.LineEnding == \"\" {\n\t\tcfg.LineEnding = DefaultLineEnding\n\t}\n\n\t// If no EncoderConfig.NewReflectedEncoder is provided by the user, then use default\n\tif cfg.NewReflectedEncoder == nil {\n\t\tcfg.NewReflectedEncoder = defaultReflectedEncoder\n\t}\n\n\treturn \u0026jsonEncoder{\n\t\tEncoderConfig: \u0026cfg,\n\t\tbuf:           bufferpool.Get(),\n\t\tspaced:        spaced,\n\t}\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"(Pool).Get","path":"buffer/pool.go"},{"symbol":"NewPool$1","path":"buffer/pool.go"}],"callers":[{"symbol":"NewConsoleEncoder","path":"zapcore/console_encoder.go"},{"symbol":"NewJSONEncoder","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddArray","signature":"func (enc *jsonEncoder) AddArray(key string, arr ArrayMarshaler) error","start_line":100,"end_line":103,"code":"func (enc *jsonEncoder) AddArray(key string, arr ArrayMarshaler) error {\n\tenc.addKey(key)\n\treturn enc.AppendArray(arr)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.66},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddArray","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddArray","path":"zapcore/json_encoder.go"},{"symbol":"encodeError","path":"zapcore/error.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddObject","signature":"func (enc *jsonEncoder) AddObject(key string, obj ObjectMarshaler) error","start_line":105,"end_line":108,"code":"func (enc *jsonEncoder) AddObject(key string, obj ObjectMarshaler) error {\n\tenc.addKey(key)\n\treturn enc.AppendObject(obj)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddObject","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddObject","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddBinary","signature":"func (enc *jsonEncoder) AddBinary(key string, val []byte)","start_line":110,"end_line":112,"code":"func (enc *jsonEncoder) AddBinary(key string, val []byte) {\n\tenc.AddString(key, base64.StdEncoding.EncodeToString(val))\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*Encoding).EncodeToString","path":"../../../../usr/local/go/src/encoding/base64/base64.go"},{"symbol":"(*jsonEncoder).AddString","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddBinary","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddBinary","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddByteString","signature":"func (enc *jsonEncoder) AddByteString(key string, val []byte)","start_line":114,"end_line":117,"code":"func (enc *jsonEncoder) AddByteString(key string, val []byte) {\n\tenc.addKey(key)\n\tenc.AppendByteString(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendByteString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddByteString","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddByteString","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddBool","signature":"func (enc *jsonEncoder) AddBool(key string, val bool)","start_line":119,"end_line":122,"code":"func (enc *jsonEncoder) AddBool(key string, val bool) {\n\tenc.addKey(key)\n\tenc.AppendBool(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendBool","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddBool","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddBool","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddComplex128","signature":"func (enc *jsonEncoder) AddComplex128(key string, val complex128)","start_line":124,"end_line":127,"code":"func (enc *jsonEncoder) AddComplex128(key string, val complex128) {\n\tenc.addKey(key)\n\tenc.AppendComplex128(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendComplex128","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddComplex128","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddComplex128","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddComplex64","signature":"func (enc *jsonEncoder) AddComplex64(key string, val complex64)","start_line":129,"end_line":132,"code":"func (enc *jsonEncoder) AddComplex64(key string, val complex64) {\n\tenc.addKey(key)\n\tenc.AppendComplex64(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendComplex64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddComplex64","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddComplex64","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddDuration","signature":"func (enc *jsonEncoder) AddDuration(key string, val time.Duration)","start_line":134,"end_line":137,"code":"func (enc *jsonEncoder) AddDuration(key string, val time.Duration) {\n\tenc.addKey(key)\n\tenc.AppendDuration(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddDuration","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddDuration","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddFloat64","signature":"func (enc *jsonEncoder) AddFloat64(key string, val float64)","start_line":139,"end_line":142,"code":"func (enc *jsonEncoder) AddFloat64(key string, val float64) {\n\tenc.addKey(key)\n\tenc.AppendFloat64(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendFloat64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddFloat64","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddFloat64","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddFloat32","signature":"func (enc *jsonEncoder) AddFloat32(key string, val float32)","start_line":144,"end_line":147,"code":"func (enc *jsonEncoder) AddFloat32(key string, val float32) {\n\tenc.addKey(key)\n\tenc.AppendFloat32(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendFloat32","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddFloat32","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddFloat32","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddInt64","signature":"func (enc *jsonEncoder) AddInt64(key string, val int64)","start_line":149,"end_line":152,"code":"func (enc *jsonEncoder) AddInt64(key string, val int64) {\n\tenc.addKey(key)\n\tenc.AppendInt64(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.67},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddInt","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddInt16","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddInt32","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddInt8","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddInt64","path":"zapcore/json_encoder.go"},{"symbol":"(invalidPair).MarshalLogObject","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).resetReflectBuf","signature":"func (enc *jsonEncoder) resetReflectBuf()","start_line":154,"end_line":161,"code":"func (enc *jsonEncoder) resetReflectBuf() {\n\tif enc.reflectBuf == nil {\n\t\tenc.reflectBuf = bufferpool.Get()\n\t\tenc.reflectEnc = enc.NewReflectedEncoder(enc.reflectBuf)\n\t} else {\n\t\tenc.reflectBuf.Reset()\n\t}\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.55},"call_graph":{"callees":[{"symbol":"(*Buffer).Reset","path":"buffer/buffer.go"},{"symbol":"(Pool).Get","path":"buffer/pool.go"},{"symbol":"NewPool$1","path":"buffer/pool.go"},{"symbol":"defaultReflectedEncoder","path":"zapcore/reflected_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).resetReflectBuf","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).encodeReflected","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).resetReflectBuf","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).encodeReflected","signature":"func (enc *jsonEncoder) encodeReflected(obj interface{}) ([]byte, error)","start_line":167,"end_line":177,"code":"func (enc *jsonEncoder) encodeReflected(obj interface{}) ([]byte, error) {\n\tif obj == nil {\n\t\treturn nullLiteralBytes, nil\n\t}\n\tenc.resetReflectBuf()\n\tif err := enc.reflectEnc.Encode(obj); err != nil {\n\t\treturn nil, err\n\t}\n\tenc.reflectBuf.TrimNewline()\n\treturn enc.reflectBuf.Bytes(), nil\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"(*Buffer).Bytes","path":"buffer/buffer.go"},{"symbol":"(*Buffer).TrimNewline","path":"buffer/buffer.go"},{"symbol":"(*Encoder).Encode","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"(*jsonEncoder).resetReflectBuf","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).encodeReflected","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddReflected","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendReflected","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).encodeReflected","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddReflected","signature":"func (enc *jsonEncoder) AddReflected(key string, obj interface{}) error","start_line":179,"end_line":187,"code":"func (enc *jsonEncoder) AddReflected(key string, obj interface{}) error {\n\tvalueBytes, err := enc.encodeReflected(obj)\n\tif err != nil {\n\t\treturn err\n\t}\n\tenc.addKey(key)\n\t_, err = enc.buf.Write(valueBytes)\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*Buffer).Write","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).encodeReflected","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddReflected","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddReflected","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).OpenNamespace","signature":"func (enc *jsonEncoder) OpenNamespace(key string)","start_line":189,"end_line":193,"code":"func (enc *jsonEncoder) OpenNamespace(key string) {\n\tenc.addKey(key)\n\tenc.buf.AppendByte('{')\n\tenc.openNamespaces++\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).OpenNamespace","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).OpenNamespace","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddString","signature":"func (enc *jsonEncoder) AddString(key, val string)","start_line":195,"end_line":198,"code":"func (enc *jsonEncoder) AddString(key, val string) {\n\tenc.addKey(key)\n\tenc.AppendString(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.69},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddBinary","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddString","path":"zapcore/json_encoder.go"},{"symbol":"encodeError","path":"zapcore/error.go"},{"symbol":"encodeError$1","path":"zapcore/error.go"},{"symbol":"encodeStringer","path":"zapcore/field.go"},{"symbol":"encodeStringer$1","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddTime","signature":"func (enc *jsonEncoder) AddTime(key string, val time.Time)","start_line":200,"end_line":203,"code":"func (enc *jsonEncoder) AddTime(key string, val time.Time) {\n\tenc.addKey(key)\n\tenc.AppendTime(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.67},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddTime","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddTime","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AddUint64","signature":"func (enc *jsonEncoder) AddUint64(key string, val uint64)","start_line":205,"end_line":208,"code":"func (enc *jsonEncoder) AddUint64(key string, val uint64) {\n\tenc.addKey(key)\n\tenc.AppendUint64(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.67},"call_graph":{"callees":[{"symbol":"(*jsonEncoder).AppendUint64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AddUint64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddUint","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddUint16","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddUint32","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddUint8","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddUintptr","path":"zapcore/json_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"(consoleEncoder).AddUint64","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendArray","signature":"func (enc *jsonEncoder) AppendArray(arr ArrayMarshaler) error","start_line":210,"end_line":216,"code":"func (enc *jsonEncoder) AppendArray(arr ArrayMarshaler) error {\n\tenc.addElementSeparator()\n\tenc.buf.AppendByte('[')\n\terr := arr.MarshalLogArray(enc)\n\tenc.buf.AppendByte(']')\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*errArrayElem).MarshalLogArray","path":"zapcore/error.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(bools).MarshalLogArray","path":"array.go"},{"symbol":"(int32s).MarshalLogArray","path":"array.go"},{"symbol":"(int8s).MarshalLogArray","path":"array.go"},{"symbol":"(invalidPairs).MarshalLogArray","path":"sugar.go"},{"symbol":"(times).MarshalLogArray","path":"array.go"},{"symbol":"(uint64s).MarshalLogArray","path":"array.go"},{"symbol":"(uintptrs).MarshalLogArray","path":"array.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddArray","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendArray","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendObject","signature":"func (enc *jsonEncoder) AppendObject(obj ObjectMarshaler) error","start_line":218,"end_line":230,"code":"func (enc *jsonEncoder) AppendObject(obj ObjectMarshaler) error {\n\t// Close ONLY new openNamespaces that are created during\n\t// AppendObject().\n\told := enc.openNamespaces\n\tenc.openNamespaces = 0\n\tenc.addElementSeparator()\n\tenc.buf.AppendByte('{')\n\terr := obj.MarshalLogObject(enc)\n\tenc.buf.AppendByte('}')\n\tenc.closeOpenNamespaces()\n\tenc.openNamespaces = old\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.78},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*errArrayElem).MarshalLogObject","path":"error.go"},{"symbol":"(*errArrayElem).MarshalLogObject","path":"zapcore/error.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).closeOpenNamespaces","path":"zapcore/json_encoder.go"},{"symbol":"(ObjectMarshalerFunc).MarshalLogObject","path":"zapcore/marshaler.go"},{"symbol":"(dictObject).MarshalLogObject","path":"field.go"},{"symbol":"(invalidPair).MarshalLogObject","path":"sugar.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*errArrayElem).MarshalLogArray","path":"zapcore/error.go"},{"symbol":"(*jsonEncoder).AddObject","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(errArray).MarshalLogArray","path":"error.go"},{"symbol":"(errArray).MarshalLogArray","path":"zapcore/error.go"},{"symbol":"(invalidPairs).MarshalLogArray","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendBool","signature":"func (enc *jsonEncoder) AppendBool(val bool)","start_line":232,"end_line":235,"code":"func (enc *jsonEncoder) AppendBool(val bool) {\n\tenc.addElementSeparator()\n\tenc.buf.AppendBool(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.67},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendBool","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendBool","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddBool","path":"zapcore/json_encoder.go"},{"symbol":"(bools).MarshalLogArray","path":"array.go"},{"symbol":"(consoleEncoder).AppendBool","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendByteString","signature":"func (enc *jsonEncoder) AppendByteString(val []byte)","start_line":237,"end_line":242,"code":"func (enc *jsonEncoder) AppendByteString(val []byte) {\n\tenc.addElementSeparator()\n\tenc.buf.AppendByte('\"')\n\tenc.safeAddByteString(val)\n\tenc.buf.AppendByte('\"')\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.76},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).safeAddByteString","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendByteString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddByteString","path":"zapcore/json_encoder.go"},{"symbol":"(byteStringsArray).MarshalLogArray","path":"array.go"},{"symbol":"(consoleEncoder).AppendByteString","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).appendComplex","signature":"func (enc *jsonEncoder) appendComplex(val complex128, precision int)","start_line":247,"end_line":263,"code":"func (enc *jsonEncoder) appendComplex(val complex128, precision int) {\n\tenc.addElementSeparator()\n\t// Cast to a platform-independent, fixed-size type.\n\tr, i := float64(real(val)), float64(imag(val))\n\tenc.buf.AppendByte('\"')\n\t// Because we're always in a quoted string, we can use strconv without\n\t// special-casing NaN and +/-Inf.\n\tenc.buf.AppendFloat(r, precision)\n\t// If imaginary part is less than 0, minus (-) sign is added by default\n\t// by AppendFloat.\n\tif i \u003e= 0 {\n\t\tenc.buf.AppendByte('+')\n\t}\n\tenc.buf.AppendFloat(i, precision)\n\tenc.buf.AppendByte('i')\n\tenc.buf.AppendByte('\"')\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendFloat","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).appendComplex","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendComplex128","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendComplex64","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).appendComplex","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendDuration","signature":"func (enc *jsonEncoder) AppendDuration(val time.Duration)","start_line":265,"end_line":275,"code":"func (enc *jsonEncoder) AppendDuration(val time.Duration) {\n\tcur := enc.buf.Len()\n\tif e := enc.EncodeDuration; e != nil {\n\t\te(val, enc)\n\t}\n\tif cur == enc.buf.Len() {\n\t\t// User-supplied EncodeDuration is a no-op. Fall back to nanoseconds to keep\n\t\t// JSON valid.\n\t\tenc.AppendInt64(int64(val))\n\t}\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.76},"call_graph":{"callees":[{"symbol":"(*Buffer).Len","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"MillisDurationEncoder","path":"zapcore/encoder.go"},{"symbol":"NanosDurationEncoder","path":"zapcore/encoder.go"},{"symbol":"SecondsDurationEncoder","path":"zapcore/encoder.go"},{"symbol":"StringDurationEncoder","path":"zapcore/encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendDuration","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddDuration","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendDuration","path":"zapcore/json_encoder.go"},{"symbol":"(durations).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendInt64","signature":"func (enc *jsonEncoder) AppendInt64(val int64)","start_line":277,"end_line":280,"code":"func (enc *jsonEncoder) AppendInt64(val int64) {\n\tenc.addElementSeparator()\n\tenc.buf.AppendInt(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.69},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendInt","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendDuration","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendInt","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendInt16","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendInt32","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendInt8","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"MillisDurationEncoder","path":"zapcore/encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendReflected","signature":"func (enc *jsonEncoder) AppendReflected(val interface{}) error","start_line":282,"end_line":290,"code":"func (enc *jsonEncoder) AppendReflected(val interface{}) error {\n\tvalueBytes, err := enc.encodeReflected(val)\n\tif err != nil {\n\t\treturn err\n\t}\n\tenc.addElementSeparator()\n\t_, err = enc.buf.Write(valueBytes)\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*Buffer).Write","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).encodeReflected","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendReflected","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendReflected","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendString","signature":"func (enc *jsonEncoder) AppendString(val string)","start_line":292,"end_line":297,"code":"func (enc *jsonEncoder) AppendString(val string) {\n\tenc.addElementSeparator()\n\tenc.buf.AppendByte('\"')\n\tenc.safeAddString(val)\n\tenc.buf.AppendByte('\"')\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.89},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).safeAddString","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"CapitalLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"FullCallerEncoder","path":"zapcore/encoder.go"},{"symbol":"LowercaseColorLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"LowercaseLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"ShortCallerEncoder","path":"zapcore/encoder.go"},{"symbol":"StringDurationEncoder","path":"zapcore/encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendTimeLayout","signature":"func (enc *jsonEncoder) AppendTimeLayout(time time.Time, layout string)","start_line":299,"end_line":304,"code":"func (enc *jsonEncoder) AppendTimeLayout(time time.Time, layout string) {\n\tenc.addElementSeparator()\n\tenc.buf.AppendByte('\"')\n\tenc.buf.AppendTime(time, layout)\n\tenc.buf.AppendByte('\"')\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendTime","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendTimeLayout","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendTimeLayout","path":"zapcore/json_encoder.go"},{"symbol":"encodeTimeLayout","path":"zapcore/encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendTime","signature":"func (enc *jsonEncoder) AppendTime(val time.Time)","start_line":306,"end_line":316,"code":"func (enc *jsonEncoder) AppendTime(val time.Time) {\n\tcur := enc.buf.Len()\n\tif e := enc.EncodeTime; e != nil {\n\t\te(val, enc)\n\t}\n\tif cur == enc.buf.Len() {\n\t\t// User-supplied EncodeTime is a no-op. Fall back to nanos since epoch to keep\n\t\t// output JSON valid.\n\t\tenc.AppendInt64(val.UnixNano())\n\t}\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.76},"call_graph":{"callees":[{"symbol":"(*Buffer).Len","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"(Time).UnixNano","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"EpochMillisTimeEncoder","path":"zapcore/encoder.go"},{"symbol":"EpochNanosTimeEncoder","path":"zapcore/encoder.go"},{"symbol":"EpochTimeEncoder","path":"zapcore/encoder.go"},{"symbol":"ISO8601TimeEncoder","path":"zapcore/encoder.go"},{"symbol":"RFC3339NanoTimeEncoder","path":"zapcore/encoder.go"},{"symbol":"RFC3339TimeEncoder","path":"zapcore/encoder.go"},{"symbol":"TimeEncoderOfLayout$1","path":"zapcore/encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddTime","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendTime","path":"zapcore/json_encoder.go"},{"symbol":"(times).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).AppendUint64","signature":"func (enc *jsonEncoder) AppendUint64(val uint64)","start_line":318,"end_line":321,"code":"func (enc *jsonEncoder) AppendUint64(val uint64) {\n\tenc.addElementSeparator()\n\tenc.buf.AppendUint(val)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.68},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendUint","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).AppendUint64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddUint64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendUint","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendUint16","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendUint32","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendUint8","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendUintptr","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).AppendUint64","path":"zapcore/json_encoder.go"},{"symbol":"(uint64s).MarshalLogArray","path":"array.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).Clone","signature":"func (enc *jsonEncoder) Clone() Encoder","start_line":346,"end_line":350,"code":"func (enc *jsonEncoder) Clone() Encoder {\n\tclone := enc.clone()\n\tclone.buf.Write(enc.buf.Bytes())\n\treturn clone\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.76},"call_graph":{"callees":[{"symbol":"(*Buffer).Bytes","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Write","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).clone","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*ioCore).clone","path":"zapcore/core.go"},{"symbol":"(consoleEncoder).Clone","path":"zapcore/console_encoder.go"},{"symbol":"(consoleEncoder).writeContext","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).clone","signature":"func (enc *jsonEncoder) clone() *jsonEncoder","start_line":352,"end_line":359,"code":"func (enc *jsonEncoder) clone() *jsonEncoder {\n\tclone := _jsonPool.Get()\n\tclone.EncoderConfig = enc.EncoderConfig\n\tclone.spaced = enc.spaced\n\tclone.openNamespaces = enc.openNamespaces\n\tclone.buf = bufferpool.Get()\n\treturn clone\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.59},"call_graph":{"callees":[{"symbol":"(*Pool).Get[*go.uber.org/zap/zapcore.jsonEncoder]","path":"internal/pool/pool.go"},{"symbol":"(Pool).Get","path":"buffer/pool.go"},{"symbol":"NewPool$1","path":"buffer/pool.go"}],"callers":[{"symbol":"(*consoleEncoder).clone","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).Clone","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).clone","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).EncodeEntry","signature":"func (enc *jsonEncoder) EncodeEntry(ent Entry, fields []Field) (*buffer.Buffer, error)","start_line":361,"end_line":431,"code":"func (enc *jsonEncoder) EncodeEntry(ent Entry, fields []Field) (*buffer.Buffer, error) {\n\tfinal := enc.clone()\n\tfinal.buf.AppendByte('{')\n\n\tif final.LevelKey != \"\" \u0026\u0026 final.EncodeLevel != nil {\n\t\tfinal.addKey(final.LevelKey)\n\t\tcur := final.buf.Len()\n\t\tfinal.EncodeLevel(ent.Level, final)\n\t\tif cur == final.buf.Len() {\n\t\t\t// User-supplied EncodeLevel was a no-op. Fall back to strings to keep\n\t\t\t// output JSON valid.\n\t\t\tfinal.AppendString(ent.Level.String())\n\t\t}\n\t}\n\tif final.TimeKey != \"\" \u0026\u0026 !ent.Time.IsZero() {\n\t\tfinal.AddTime(final.TimeKey, ent.Time)\n\t}\n\tif ent.LoggerName != \"\" \u0026\u0026 final.NameKey != \"\" {\n\t\tfinal.addKey(final.NameKey)\n\t\tcur := final.buf.Len()\n\t\tnameEncoder := final.EncodeName\n\n\t\t// if no name encoder provided, fall back to FullNameEncoder for backwards\n\t\t// compatibility\n\t\tif nameEncoder == nil {\n\t\t\tnameEncoder = FullNameEncoder\n\t\t}\n\n\t\tnameEncoder(ent.LoggerName, final)\n\t\tif cur == final.buf.Len() {\n\t\t\t// User-supplied EncodeName was a no-op. Fall back to strings to\n\t\t\t// keep output JSON valid.\n\t\t\tfinal.AppendString(ent.LoggerName)\n\t\t}\n\t}\n\tif ent.Caller.Defined {\n\t\tif final.CallerKey != \"\" {\n\t\t\tfinal.addKey(final.CallerKey)\n\t\t\tcur := final.buf.Len()\n\t\t\tfinal.EncodeCaller(ent.Caller, final)\n\t\t\tif cur == final.buf.Len() {\n\t\t\t\t// User-supplied EncodeCaller was a no-op. Fall back to strings to\n\t\t\t\t// keep output JSON valid.\n\t\t\t\tfinal.AppendString(ent.Caller.String())\n\t\t\t}\n\t\t}\n\t\tif final.FunctionKey != \"\" {\n\t\t\tfinal.addKey(final.FunctionKey)\n\t\t\tfinal.AppendString(ent.Caller.Function)\n\t\t}\n\t}\n\tif final.MessageKey != \"\" {\n\t\tfinal.addKey(enc.MessageKey)\n\t\tfinal.AppendString(ent.Message)\n\t}\n\tif enc.buf.Len() \u003e 0 {\n\t\tfinal.addElementSeparator()\n\t\tfinal.buf.Write(enc.buf.Bytes())\n\t}\n\taddFields(final, fields)\n\tfinal.closeOpenNamespaces()\n\tif ent.Stack != \"\" \u0026\u0026 final.StacktraceKey != \"\" {\n\t\tfinal.AddString(final.StacktraceKey, ent.Stack)\n\t}\n\tfinal.buf.AppendByte('}')\n\tfinal.buf.AppendString(final.LineEnding)\n\n\tret := final.buf\n\tputJSONEncoder(final)\n\treturn ret, nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Len","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).AddTime","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).clone","path":"zapcore/json_encoder.go"},{"symbol":"(EntryCaller).String","path":"zapcore/entry.go"},{"symbol":"(Level).String","path":"zapcore/level.go"},{"symbol":"(Time).IsZero","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"(*ioCore).Write","path":"zapcore/core.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).truncate","signature":"func (enc *jsonEncoder) truncate()","start_line":433,"end_line":435,"code":"func (enc *jsonEncoder) truncate() {\n\tenc.buf.Reset()\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.45},"call_graph":{"callees":[{"symbol":"(*Buffer).Reset","path":"buffer/buffer.go"}],"callers":[{"symbol":"(*consoleEncoder).truncate","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).truncate","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).closeOpenNamespaces","signature":"func (enc *jsonEncoder) closeOpenNamespaces()","start_line":437,"end_line":442,"code":"func (enc *jsonEncoder) closeOpenNamespaces() {\n\tfor i := 0; i \u003c enc.openNamespaces; i++ {\n\t\tenc.buf.AppendByte('}')\n\t}\n\tenc.openNamespaces = 0\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"}],"callers":[{"symbol":"(*consoleEncoder).closeOpenNamespaces","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).closeOpenNamespaces","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).writeContext","path":"zapcore/console_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).addKey","signature":"func (enc *jsonEncoder) addKey(key string)","start_line":444,"end_line":453,"code":"func (enc *jsonEncoder) addKey(key string) {\n\tenc.addElementSeparator()\n\tenc.buf.AppendByte('\"')\n\tenc.safeAddString(key)\n\tenc.buf.AppendByte('\"')\n\tenc.buf.AppendByte(':')\n\tif enc.spaced {\n\t\tenc.buf.AppendByte(' ')\n\t}\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.63},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).safeAddString","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*jsonEncoder).AddArray","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddBool","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddByteString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddComplex128","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddComplex64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddDuration","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddFloat32","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddFloat64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AddString","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).addElementSeparator","signature":"func (enc *jsonEncoder) addElementSeparator()","start_line":455,"end_line":469,"code":"func (enc *jsonEncoder) addElementSeparator() {\n\tlast := enc.buf.Len() - 1\n\tif last \u003c 0 {\n\t\treturn\n\t}\n\tswitch enc.buf.Bytes()[last] {\n\tcase '{', '[', ':', ',', ' ':\n\t\treturn\n\tdefault:\n\t\tenc.buf.AppendByte(',')\n\t\tif enc.spaced {\n\t\t\tenc.buf.AppendByte(' ')\n\t\t}\n\t}\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.6},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Bytes","path":"buffer/buffer.go"},{"symbol":"(*Buffer).Len","path":"buffer/buffer.go"}],"callers":[{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendBool","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendByteString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendInt64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendUint64","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).appendComplex","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).appendFloat","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).appendFloat","signature":"func (enc *jsonEncoder) appendFloat(val float64, bitSize int)","start_line":471,"end_line":483,"code":"func (enc *jsonEncoder) appendFloat(val float64, bitSize int) {\n\tenc.addElementSeparator()\n\tswitch {\n\tcase math.IsNaN(val):\n\t\tenc.buf.AppendString(`\"NaN\"`)\n\tcase math.IsInf(val, 1):\n\t\tenc.buf.AppendString(`\"+Inf\"`)\n\tcase math.IsInf(val, -1):\n\t\tenc.buf.AppendString(`\"-Inf\"`)\n\tdefault:\n\t\tenc.buf.AppendFloat(val, bitSize)\n\t}\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendFloat","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendString","path":"buffer/buffer.go"},{"symbol":"(*jsonEncoder).addElementSeparator","path":"zapcore/json_encoder.go"},{"symbol":"IsInf","path":"../../../../usr/local/go/src/math/bits.go"},{"symbol":"IsNaN","path":"../../../../usr/local/go/src/math/bits.go"}],"callers":[{"symbol":"(*consoleEncoder).appendFloat","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendFloat32","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendFloat64","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).appendFloat","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).safeAddString","signature":"func (enc *jsonEncoder) safeAddString(s string)","start_line":488,"end_line":495,"code":"func (enc *jsonEncoder) safeAddString(s string) {\n\tsafeAppendStringLike(\n\t\t(*buffer.Buffer).AppendString,\n\t\tutf8.DecodeRuneInString,\n\t\tenc.buf,\n\t\ts,\n\t)\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"safeAppendStringLike[string]","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).safeAddString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).addKey","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).safeAddString","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"(*jsonEncoder).safeAddByteString","signature":"func (enc *jsonEncoder) safeAddByteString(s []byte)","start_line":498,"end_line":505,"code":"func (enc *jsonEncoder) safeAddByteString(s []byte) {\n\tsafeAppendStringLike(\n\t\t(*buffer.Buffer).AppendBytes,\n\t\tutf8.DecodeRune,\n\t\tenc.buf,\n\t\ts,\n\t)\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.55},"call_graph":{"callees":[{"symbol":"safeAppendStringLike[[]byte]","path":"zapcore/json_encoder.go"}],"callers":[{"symbol":"(*consoleEncoder).safeAddByteString","path":"zapcore/json_encoder.go"},{"symbol":"(*jsonEncoder).AppendByteString","path":"zapcore/json_encoder.go"},{"symbol":"(consoleEncoder).safeAddByteString","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/json_encoder.go","symbol":"safeAppendStringLike","signature":"func safeAppendStringLike[S []byte | string](\n\t// appendTo appends this string-like object to the buffer.\n\tappendTo func(*buffer.Buffer, S),\n\t// decodeRune decodes the next rune from the string-like object\n\t// and returns its value and width in bytes.\n\tdecodeRune func(S) (rune, int),\n\tbuf *buffer.Buffer,\n\ts S,\n)","start_line":509,"end_line":583,"code":"func safeAppendStringLike[S []byte | string](\n\t// appendTo appends this string-like object to the buffer.\n\tappendTo func(*buffer.Buffer, S),\n\t// decodeRune decodes the next rune from the string-like object\n\t// and returns its value and width in bytes.\n\tdecodeRune func(S) (rune, int),\n\tbuf *buffer.Buffer,\n\ts S,\n) {\n\t// The encoding logic below works by skipping over characters\n\t// that can be safely copied as-is,\n\t// until a character is found that needs special handling.\n\t// At that point, we copy everything we've seen so far,\n\t// and then handle that special character.\n\t//\n\t// last is the index of the last byte that was copied to the buffer.\n\tlast := 0\n\tfor i := 0; i \u003c len(s); {\n\t\tif s[i] \u003e= utf8.RuneSelf {\n\t\t\t// Character \u003e= RuneSelf may be part of a multi-byte rune.\n\t\t\t// They need to be decoded before we can decide how to handle them.\n\t\t\tr, size := decodeRune(s[i:])\n\t\t\tif r != utf8.RuneError || size != 1 {\n\t\t\t\t// No special handling required.\n\t\t\t\t// Skip over this rune and continue.\n\t\t\t\ti += size\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\t// Invalid UTF-8 sequence.\n\t\t\t// Replace it with the Unicode replacement character.\n\t\t\tappendTo(buf, s[last:i])\n\t\t\tbuf.AppendString(`\\ufffd`)\n\n\t\t\ti++\n\t\t\tlast = i\n\t\t} else {\n\t\t\t// Character \u003c RuneSelf is a single-byte UTF-8 rune.\n\t\t\tif s[i] \u003e= 0x20 \u0026\u0026 s[i] != '\\\\' \u0026\u0026 s[i] != '\"' {\n\t\t\t\t// No escaping necessary.\n\t\t\t\t// Skip over this character and continue.\n\t\t\t\ti++\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\t// This character needs to be escaped.\n\t\t\tappendTo(buf, s[last:i])\n\t\t\tswitch s[i] {\n\t\t\tcase '\\\\', '\"':\n\t\t\t\tbuf.AppendByte('\\\\')\n\t\t\t\tbuf.AppendByte(s[i])\n\t\t\tcase '\\n':\n\t\t\t\tbuf.AppendByte('\\\\')\n\t\t\t\tbuf.AppendByte('n')\n\t\t\tcase '\\r':\n\t\t\t\tbuf.AppendByte('\\\\')\n\t\t\t\tbuf.AppendByte('r')\n\t\t\tcase '\\t':\n\t\t\t\tbuf.AppendByte('\\\\')\n\t\t\t\tbuf.AppendByte('t')\n\t\t\tdefault:\n\t\t\t\t// Encode bytes \u003c 0x20, except for the escape sequences above.\n\t\t\t\tbuf.AppendString(`\\u00`)\n\t\t\t\tbuf.AppendByte(_hex[s[i]\u003e\u003e4])\n\t\t\t\tbuf.AppendByte(_hex[s[i]\u00260xF])\n\t\t\t}\n\n\t\t\ti++\n\t\t\tlast = i\n\t\t}\n\t}\n\n\t// add remaining\n\tappendTo(buf, s[last:])\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.56},"call_graph":{"callees":[{"symbol":"(*Buffer).AppendByte","path":"buffer/buffer.go"},{"symbol":"(*Buffer).AppendString","path":"buffer/buffer.go"}],"callers":[{"symbol":"safeAppendStringLike[[]byte]","path":"zapcore/json_encoder.go"},{"symbol":"safeAppendStringLike[string]","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/lazy_with.go","symbol":"NewLazyWith","signature":"func NewLazyWith(core Core, fields []Field) Core","start_line":33,"end_line":38,"code":"func NewLazyWith(core Core, fields []Field) Core {\n\treturn \u0026lazyWithCore{\n\t\tCore:   core,\n\t\tfields: fields,\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[],"callers":[{"symbol":"WithLazy$1","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/lazy_with.go","symbol":"(*lazyWithCore).initOnce","signature":"func (d *lazyWithCore) initOnce()","start_line":40,"end_line":44,"code":"func (d *lazyWithCore) initOnce() {\n\td.Once.Do(func() {\n\t\td.Core = d.Core.With(d.fields)\n\t})\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.51},"call_graph":{"callees":[{"symbol":"(*Once).Do","path":"../../../../usr/local/go/src/sync/once.go"}],"callers":[{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/lazy_with.go","symbol":"(*lazyWithCore).With","signature":"func (d *lazyWithCore) With(fields []Field) Core","start_line":46,"end_line":49,"code":"func (d *lazyWithCore) With(fields []Field) Core {\n\td.initOnce()\n\treturn d.Core.With(fields)\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.79},"call_graph":{"callees":[{"symbol":"(*contextObserver).With","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*ioCore).With","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*lazyWithCore).initOnce","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"(nopCore).With","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"Fields$1","path":"options.go"},{"symbol":"initOnce$1","path":"zapcore/lazy_with.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/lazy_with.go","symbol":"(*lazyWithCore).Check","signature":"func (d *lazyWithCore) Check(e Entry, ce *CheckedEntry) *CheckedEntry","start_line":51,"end_line":54,"code":"func (d *lazyWithCore) Check(e Entry, ce *CheckedEntry) *CheckedEntry {\n\td.initOnce()\n\treturn d.Core.Check(e, ce)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.64},"call_graph":{"callees":[{"symbol":"(*contextObserver).Check","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*lazyWithCore).initOnce","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"},{"symbol":"(nopCore).Check","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"ParseLevel","signature":"func ParseLevel(text string) (Level, error)","start_line":69,"end_line":73,"code":"func ParseLevel(text string) (Level, error) {\n\tvar level Level\n\terr := level.UnmarshalText([]byte(text))\n\treturn level, err\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[{"symbol":"(*Level).UnmarshalText","path":"zapcore/level.go"}],"callers":[{"symbol":"ParseAtomicLevel","path":"level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"LevelOf","signature":"func LevelOf(enab LevelEnabler) Level","start_line":98,"end_line":110,"code":"func LevelOf(enab LevelEnabler) Level {\n\tif lvler, ok := enab.(leveledEnabler); ok {\n\t\treturn lvler.Level()\n\t}\n\n\tfor lvl := _minLevel; lvl \u003c= _maxLevel; lvl++ {\n\t\tif enab.Enabled(lvl) {\n\t\t\treturn lvl\n\t\t}\n\t}\n\n\treturn InvalidLevel\n}\n","selection":{"visibility":"exported","reason":"core","score":0.73},"call_graph":{"callees":[{"symbol":"(*contextObserver).Level","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Level","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Level","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(*levelFilterCore).Level","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Level","path":"zapcore/sampler.go"},{"symbol":"(AtomicLevel).Level","path":"level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(multiCore).Level","path":"zapcore/tee.go"}],"callers":[{"symbol":"(*Logger).Level","path":"logger.go"},{"symbol":"(*SugaredLogger).Level","path":"sugar.go"},{"symbol":"(*contextObserver).Level","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Level","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Level","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Level","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Level","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Level","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"(Level).String","signature":"func (l Level) String() string","start_line":113,"end_line":132,"code":"func (l Level) String() string {\n\tswitch l {\n\tcase DebugLevel:\n\t\treturn \"debug\"\n\tcase InfoLevel:\n\t\treturn \"info\"\n\tcase WarnLevel:\n\t\treturn \"warn\"\n\tcase ErrorLevel:\n\t\treturn \"error\"\n\tcase DPanicLevel:\n\t\treturn \"dpanic\"\n\tcase PanicLevel:\n\t\treturn \"panic\"\n\tcase FatalLevel:\n\t\treturn \"fatal\"\n\tdefault:\n\t\treturn fmt.Sprintf(\"Level(%d)\", l)\n\t}\n}\n","selection":{"visibility":"exported","reason":"core","score":0.78},"call_graph":{"callees":[{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"(*FlagSet).Var","path":"../../../../usr/local/go/src/flag/flag.go"},{"symbol":"(*Level).String","path":"zapcore/level.go"},{"symbol":"(*jsonEncoder).EncodeEntry","path":"zapcore/json_encoder.go"},{"symbol":"(*pp).handleMethods","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"(AtomicLevel).String","path":"level.go"},{"symbol":"(Level).MarshalText","path":"zapcore/level.go"},{"symbol":"LowercaseColorLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"LowercaseLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"init#1","path":"zapcore/level_strings.go"},{"symbol":"stringify","path":"../../../../usr/local/go/src/context/context.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"(Level).CapitalString","signature":"func (l Level) CapitalString() string","start_line":135,"end_line":156,"code":"func (l Level) CapitalString() string {\n\t// Printing levels in all-caps is common enough that we should export this\n\t// functionality.\n\tswitch l {\n\tcase DebugLevel:\n\t\treturn \"DEBUG\"\n\tcase InfoLevel:\n\t\treturn \"INFO\"\n\tcase WarnLevel:\n\t\treturn \"WARN\"\n\tcase ErrorLevel:\n\t\treturn \"ERROR\"\n\tcase DPanicLevel:\n\t\treturn \"DPANIC\"\n\tcase PanicLevel:\n\t\treturn \"PANIC\"\n\tcase FatalLevel:\n\t\treturn \"FATAL\"\n\tdefault:\n\t\treturn fmt.Sprintf(\"LEVEL(%d)\", l)\n\t}\n}\n","selection":{"visibility":"exported","reason":"core","score":0.71},"call_graph":{"callees":[{"symbol":"Sprintf","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"(*Level).CapitalString","path":"zapcore/level.go"},{"symbol":"CapitalColorLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"CapitalLevelEncoder","path":"zapcore/encoder.go"},{"symbol":"init#1","path":"zapcore/level_strings.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"(Level).MarshalText","signature":"func (l Level) MarshalText() ([]byte, error)","start_line":160,"end_line":162,"code":"func (l Level) MarshalText() ([]byte, error) {\n\treturn []byte(l.String()), nil\n}\n","selection":{"visibility":"exported","reason":"core","score":0.6},"call_graph":{"callees":[{"symbol":"(Level).String","path":"zapcore/level.go"}],"callers":[{"symbol":"(*Level).MarshalText","path":"zapcore/level.go"},{"symbol":"(AtomicLevel).MarshalText","path":"level.go"},{"symbol":"(textValue).String","path":"../../../../usr/local/go/src/flag/flag.go"},{"symbol":"addrTextMarshalerEncoder","path":"../../../../usr/local/go/src/encoding/json/encode.go"},{"symbol":"resolveKeyName","path":"../../../../usr/local/go/src/encoding/json/encode.go"},{"symbol":"textMarshalerEncoder","path":"../../../../usr/local/go/src/encoding/json/encode.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"(*Level).UnmarshalText","signature":"func (l *Level) UnmarshalText(text []byte) error","start_line":170,"end_line":178,"code":"func (l *Level) UnmarshalText(text []byte) error {\n\tif l == nil {\n\t\treturn errUnmarshalNilLevel\n\t}\n\tif !l.unmarshalText(text) \u0026\u0026 !l.unmarshalText(bytes.ToLower(text)) {\n\t\treturn fmt.Errorf(\"unrecognized level: %q\", text)\n\t}\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"core","score":0.72},"call_graph":{"callees":[{"symbol":"(*Level).unmarshalText","path":"zapcore/level.go"},{"symbol":"Errorf","path":"../../../../usr/local/go/src/fmt/errors.go"},{"symbol":"ToLower","path":"../../../../usr/local/go/src/bytes/bytes.go"}],"callers":[{"symbol":"(*AtomicLevel).UnmarshalText","path":"level.go"},{"symbol":"(*Level).Set","path":"zapcore/level.go"},{"symbol":"(*decodeState).literalStore","path":"../../../../usr/local/go/src/encoding/json/decode.go"},{"symbol":"(textValue).Set","path":"../../../../usr/local/go/src/flag/flag.go"},{"symbol":"ParseLevel","path":"zapcore/level.go"},{"symbol":"decodePutURL","path":"http_handler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"(*Level).unmarshalText","signature":"func (l *Level) unmarshalText(text []byte) bool","start_line":180,"end_line":200,"code":"func (l *Level) unmarshalText(text []byte) bool {\n\tswitch string(text) {\n\tcase \"debug\":\n\t\t*l = DebugLevel\n\tcase \"info\", \"\": // make the zero value useful\n\t\t*l = InfoLevel\n\tcase \"warn\", \"warning\":\n\t\t*l = WarnLevel\n\tcase \"error\":\n\t\t*l = ErrorLevel\n\tcase \"dpanic\":\n\t\t*l = DPanicLevel\n\tcase \"panic\":\n\t\t*l = PanicLevel\n\tcase \"fatal\":\n\t\t*l = FatalLevel\n\tdefault:\n\t\treturn false\n\t}\n\treturn true\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.51},"call_graph":{"callees":[],"callers":[{"symbol":"(*Level).UnmarshalText","path":"zapcore/level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"(*Level).Set","signature":"func (l *Level) Set(s string) error","start_line":203,"end_line":205,"code":"func (l *Level) Set(s string) error {\n\treturn l.UnmarshalText([]byte(s))\n}\n","selection":{"visibility":"exported","reason":"core","score":0.6},"call_graph":{"callees":[{"symbol":"(*Level).UnmarshalText","path":"zapcore/level.go"}],"callers":[{"symbol":"(*FlagSet).parseOne","path":"../../../../usr/local/go/src/flag/flag.go"},{"symbol":"(*FlagSet).set","path":"../../../../usr/local/go/src/flag/flag.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"(*Level).Get","signature":"func (l *Level) Get() interface{}","start_line":208,"end_line":210,"code":"func (l *Level) Get() interface{} {\n\treturn *l\n}\n","selection":{"visibility":"exported","reason":"core","score":0.67},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level.go","symbol":"(Level).Enabled","signature":"func (l Level) Enabled(lvl Level) bool","start_line":213,"end_line":215,"code":"func (l Level) Enabled(lvl Level) bool {\n\treturn lvl \u003e= l\n}\n","selection":{"visibility":"exported","reason":"core","score":0.68},"call_graph":{"callees":[],"callers":[{"symbol":"(*Level).Enabled","path":"zapcore/level.go"},{"symbol":"(*Logger).Infoln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).V","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*SugaredLogger).log","path":"sugar.go"},{"symbol":"(*SugaredLogger).logln","path":"sugar.go"},{"symbol":"(*contextObserver).Check","path":"zaptest/observer/observer.go"},{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/level_strings.go","symbol":"init","signature":"func init()","start_line":41,"end_line":46,"code":"func init() {\n\tfor level, color := range _levelToColor {\n\t\t_levelToLowercaseColorString[level] = color.Add(level.String())\n\t\t_levelToCapitalColorString[level] = color.Add(level.CapitalString())\n\t}\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[{"symbol":"(*Once).Do","path":"../../../../usr/local/go/src/sync/once.go"},{"symbol":"errnoErr","path":"../../../../usr/local/go/src/internal/poll/errno_unix.go"},{"symbol":"runtime_pollOpen","path":"../../../../usr/local/go/src/internal/poll/fd_poll_runtime.go"}],"callers":[{"symbol":"(*FD).Init","path":"../../../../usr/local/go/src/internal/poll/fd_unix.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/marshaler.go","symbol":"(ObjectMarshalerFunc).MarshalLogObject","signature":"func (f ObjectMarshalerFunc) MarshalLogObject(enc ObjectEncoder) error","start_line":39,"end_line":41,"code":"func (f ObjectMarshalerFunc) MarshalLogObject(enc ObjectEncoder) error {\n\treturn f(enc)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.62},"call_graph":{"callees":[],"callers":[{"symbol":"(*MapObjectEncoder).AddObject","path":"zapcore/memory_encoder.go"},{"symbol":"(*ObjectMarshalerFunc).MarshalLogObject","path":"zapcore/marshaler.go"},{"symbol":"(*jsonEncoder).AppendObject","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"},{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/marshaler.go","symbol":"(ArrayMarshalerFunc).MarshalLogArray","signature":"func (f ArrayMarshalerFunc) MarshalLogArray(enc ArrayEncoder) error","start_line":59,"end_line":61,"code":"func (f ArrayMarshalerFunc) MarshalLogArray(enc ArrayEncoder) error {\n\treturn f(enc)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.61},"call_graph":{"callees":[],"callers":[{"symbol":"(*ArrayMarshalerFunc).MarshalLogArray","path":"zapcore/marshaler.go"},{"symbol":"(*MapObjectEncoder).AddArray","path":"zapcore/memory_encoder.go"},{"symbol":"(*jsonEncoder).AppendArray","path":"zapcore/json_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendArray","path":"zapcore/memory_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/memory_encoder.go","symbol":"NewMapObjectEncoder","signature":"func NewMapObjectEncoder() *MapObjectEncoder","start_line":36,"end_line":42,"code":"func NewMapObjectEncoder() *MapObjectEncoder {\n\tm := make(map[string]interface{})\n\treturn \u0026MapObjectEncoder{\n\t\tFields: m,\n\t\tcur:    m,\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.91},"call_graph":{"callees":[],"callers":[{"symbol":"(*MapObjectEncoder).AddObject","path":"zapcore/memory_encoder.go"},{"symbol":"(*sliceArrayEncoder).AppendObject","path":"zapcore/memory_encoder.go"},{"symbol":"(LoggedEntry).ContextMap","path":"zaptest/observer/logged_entry.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/memory_encoder.go","symbol":"(*MapObjectEncoder).AddArray","signature":"func (m *MapObjectEncoder) AddArray(key string, v ArrayMarshaler) error","start_line":45,"end_line":50,"code":"func (m *MapObjectEncoder) AddArray(key string, v ArrayMarshaler) error {\n\tarr := \u0026sliceArrayEncoder{elems: make([]interface{}, 0)}\n\terr := v.MarshalLogArray(arr)\n\tm.cur[key] = arr.elems\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.76},"call_graph":{"callees":[{"symbol":"(bools).MarshalLogArray","path":"array.go"},{"symbol":"(errArray).MarshalLogArray","path":"error.go"},{"symbol":"(float64s).MarshalLogArray","path":"array.go"},{"symbol":"(int16s).MarshalLogArray","path":"array.go"},{"symbol":"(stringArray).MarshalLogArray","path":"array.go"},{"symbol":"(times).MarshalLogArray","path":"array.go"},{"symbol":"(uint16s).MarshalLogArray","path":"array.go"},{"symbol":"(uint64s).MarshalLogArray","path":"array.go"},{"symbol":"(uint8s).MarshalLogArray","path":"array.go"},{"symbol":"(uints).MarshalLogArray","path":"array.go"}],"callers":[{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"encodeError","path":"zapcore/error.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/memory_encoder.go","symbol":"(*MapObjectEncoder).AddObject","signature":"func (m *MapObjectEncoder) AddObject(k string, v ObjectMarshaler) error","start_line":53,"end_line":57,"code":"func (m *MapObjectEncoder) AddObject(k string, v ObjectMarshaler) error {\n\tnewMap := NewMapObjectEncoder()\n\tm.cur[k] = newMap.Fields\n\treturn v.MarshalLogObject(newMap)\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(*errArrayElem).MarshalLogObject","path":"error.go"},{"symbol":"(*errArrayElem).MarshalLogObject","path":"zapcore/error.go"},{"symbol":"(ObjectMarshalerFunc).MarshalLogObject","path":"zapcore/marshaler.go"},{"symbol":"(dictObject).MarshalLogObject","path":"field.go"},{"symbol":"(invalidPair).MarshalLogObject","path":"sugar.go"},{"symbol":"NewMapObjectEncoder","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/memory_encoder.go","symbol":"(*MapObjectEncoder).AddReflected","signature":"func (m *MapObjectEncoder) AddReflected(k string, v interface{}) error","start_line":123,"end_line":126,"code":"func (m *MapObjectEncoder) AddReflected(k string, v interface{}) error {\n\tm.cur[k] = v\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":[],"callers":[{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/memory_encoder.go","symbol":"(*MapObjectEncoder).OpenNamespace","signature":"func (m *MapObjectEncoder) OpenNamespace(k string)","start_line":129,"end_line":133,"code":"func (m *MapObjectEncoder) OpenNamespace(k string) {\n\tns := make(map[string]interface{})\n\tm.cur[k] = ns\n\tm.cur = ns\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[],"callers":[{"symbol":"(Field).AddTo","path":"zapcore/field.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/memory_encoder.go","symbol":"(*sliceArrayEncoder).AppendArray","signature":"func (s *sliceArrayEncoder) AppendArray(v ArrayMarshaler) error","start_line":141,"end_line":146,"code":"func (s *sliceArrayEncoder) AppendArray(v ArrayMarshaler) error {\n\tenc := \u0026sliceArrayEncoder{}\n\terr := v.MarshalLogArray(enc)\n\ts.elems = append(s.elems, enc.elems)\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.75},"call_graph":{"callees":[{"symbol":"(ArrayMarshalerFunc).MarshalLogArray","path":"zapcore/marshaler.go"},{"symbol":"(complex64s).MarshalLogArray","path":"array.go"},{"symbol":"(durations).MarshalLogArray","path":"array.go"},{"symbol":"(errArray).MarshalLogArray","path":"zapcore/error.go"},{"symbol":"(float64s).MarshalLogArray","path":"array.go"},{"symbol":"(int16s).MarshalLogArray","path":"array.go"},{"symbol":"(int8s).MarshalLogArray","path":"array.go"},{"symbol":"(uint32s).MarshalLogArray","path":"array.go"},{"symbol":"(uintptrs).MarshalLogArray","path":"array.go"},{"symbol":"(uints).MarshalLogArray","path":"array.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/memory_encoder.go","symbol":"(*sliceArrayEncoder).AppendObject","signature":"func (s *sliceArrayEncoder) AppendObject(v ObjectMarshaler) error","start_line":148,"end_line":153,"code":"func (s *sliceArrayEncoder) AppendObject(v ObjectMarshaler) error {\n\tm := NewMapObjectEncoder()\n\terr := v.MarshalLogObject(m)\n\ts.elems = append(s.elems, m.Fields)\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.78},"call_graph":{"callees":[{"symbol":"(*errArrayElem).MarshalLogObject","path":"error.go"},{"symbol":"(*errArrayElem).MarshalLogObject","path":"zapcore/error.go"},{"symbol":"(ObjectMarshalerFunc).MarshalLogObject","path":"zapcore/marshaler.go"},{"symbol":"(dictObject).MarshalLogObject","path":"field.go"},{"symbol":"(invalidPair).MarshalLogObject","path":"sugar.go"},{"symbol":"NewMapObjectEncoder","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*errArrayElem).MarshalLogArray","path":"zapcore/error.go"},{"symbol":"(errArray).MarshalLogArray","path":"error.go"},{"symbol":"(errArray).MarshalLogArray","path":"zapcore/error.go"},{"symbol":"(invalidPairs).MarshalLogArray","path":"sugar.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/memory_encoder.go","symbol":"(*sliceArrayEncoder).AppendReflected","signature":"func (s *sliceArrayEncoder) AppendReflected(v interface{}) error","start_line":155,"end_line":158,"code":"func (s *sliceArrayEncoder) AppendReflected(v interface{}) error {\n\ts.elems = append(s.elems, v)\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"encoder","score":0.65},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/reflected_encoder.go","symbol":"defaultReflectedEncoder","signature":"func defaultReflectedEncoder(w io.Writer) ReflectedEncoder","start_line":36,"end_line":41,"code":"func defaultReflectedEncoder(w io.Writer) ReflectedEncoder {\n\tenc := json.NewEncoder(w)\n\t// For consistency with our custom JSON encoder.\n\tenc.SetEscapeHTML(false)\n\treturn enc\n}\n","selection":{"visibility":"unexported","reason":"encoder","score":0.55},"call_graph":{"callees":[{"symbol":"(*Encoder).SetEscapeHTML","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"NewEncoder","path":"../../../../usr/local/go/src/encoding/json/stream.go"}],"callers":[{"symbol":"(*jsonEncoder).resetReflectBuf","path":"zapcore/json_encoder.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"newCounters","signature":"func newCounters() *counters","start_line":40,"end_line":42,"code":"func newCounters() *counters {\n\treturn \u0026counters{}\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.4},"call_graph":{"callees":[],"callers":[{"symbol":"NewSamplerWithOptions","path":"zapcore/sampler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"(*counters).get","signature":"func (cs *counters) get(lvl Level, key string) *counter","start_line":44,"end_line":48,"code":"func (cs *counters) get(lvl Level, key string) *counter {\n\ti := lvl - _minLevel\n\tj := fnv32a(key) % _countersPerLevel\n\treturn \u0026cs[i][j]\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[{"symbol":"fnv32a","path":"zapcore/sampler.go"}],"callers":[{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"fnv32a","signature":"func fnv32a(s string) uint32","start_line":51,"end_line":62,"code":"func fnv32a(s string) uint32 {\n\tconst (\n\t\toffset32 = 2166136261\n\t\tprime32  = 16777619\n\t)\n\thash := uint32(offset32)\n\tfor i := 0; i \u003c len(s); i++ {\n\t\thash ^= uint32(s[i])\n\t\thash *= prime32\n\t}\n\treturn hash\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.5},"call_graph":{"callees":[],"callers":[{"symbol":"(*counters).get","path":"zapcore/sampler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"(*counter).IncCheckReset","signature":"func (c *counter) IncCheckReset(t time.Time, tick time.Duration) uint64","start_line":64,"end_line":81,"code":"func (c *counter) IncCheckReset(t time.Time, tick time.Duration) uint64 {\n\ttn := t.UnixNano()\n\tresetAfter := c.resetAt.Load()\n\tif resetAfter \u003e tn {\n\t\treturn c.counter.Add(1)\n\t}\n\n\tc.counter.Store(1)\n\n\tnewResetAfter := tn + tick.Nanoseconds()\n\tif !c.resetAt.CompareAndSwap(resetAfter, newResetAfter) {\n\t\t// We raced with another goroutine trying to reset, and it also reset\n\t\t// the counter to 1, so we need to reincrement the counter.\n\t\treturn c.counter.Add(1)\n\t}\n\n\treturn 1\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[{"symbol":"(*Int64).CompareAndSwap","path":"../../../../usr/local/go/src/sync/atomic/type.go"},{"symbol":"(*Int64).Load","path":"../../../../usr/local/go/src/sync/atomic/type.go"},{"symbol":"(*Uint64).Add","path":"../../../../usr/local/go/src/sync/atomic/type.go"},{"symbol":"(*Uint64).Store","path":"../../../../usr/local/go/src/sync/atomic/type.go"},{"symbol":"(Duration).Nanoseconds","path":"../../../../usr/local/go/src/time/time.go"},{"symbol":"(Time).UnixNano","path":"../../../../usr/local/go/src/time/time.go"}],"callers":[{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"(optionFunc).apply","signature":"func (f optionFunc) apply(s *sampler)","start_line":97,"end_line":99,"code":"func (f optionFunc) apply(s *sampler) {\n\tf(s)\n}\n","selection":{"visibility":"unexported","reason":"core","score":0.42},"call_graph":{"callees":[{"symbol":"SamplerHook$1","path":"zapcore/sampler.go"}],"callers":[{"symbol":"(*optionFunc).apply","path":"zapcore/sampler.go"},{"symbol":"NewSamplerWithOptions","path":"zapcore/sampler.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"SamplerHook","signature":"func SamplerHook(hook func(entry Entry, dec SamplingDecision)) SamplerOption","start_line":121,"end_line":125,"code":"func SamplerHook(hook func(entry Entry, dec SamplingDecision)) SamplerOption {\n\treturn optionFunc(func(s *sampler) {\n\t\ts.hook = hook\n\t})\n}\n","selection":{"visibility":"exported","reason":"core","score":0.7},"call_graph":{"callees":[],"callers":[{"symbol":"buildOptions$1","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"NewSamplerWithOptions","signature":"func NewSamplerWithOptions(core Core, tick time.Duration, first, thereafter int, opts ...SamplerOption) Core","start_line":152,"end_line":166,"code":"func NewSamplerWithOptions(core Core, tick time.Duration, first, thereafter int, opts ...SamplerOption) Core {\n\ts := \u0026sampler{\n\t\tCore:       core,\n\t\ttick:       tick,\n\t\tcounts:     newCounters(),\n\t\tfirst:      uint64(first),\n\t\tthereafter: uint64(thereafter),\n\t\thook:       nopSamplingHook,\n\t}\n\tfor _, opt := range opts {\n\t\topt.apply(s)\n\t}\n\n\treturn s\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.86},"call_graph":{"callees":[{"symbol":"(optionFunc).apply","path":"zapcore/sampler.go"},{"symbol":"newCounters","path":"zapcore/sampler.go"}],"callers":[{"symbol":"NewSampler","path":"zapcore/sampler.go"},{"symbol":"buildOptions$1","path":"config.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"NewSampler","signature":"func NewSampler(core Core, tick time.Duration, first, thereafter int) Core","start_line":195,"end_line":197,"code":"func NewSampler(core Core, tick time.Duration, first, thereafter int) Core {\n\treturn NewSamplerWithOptions(core, tick, first, thereafter)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.75},"call_graph":{"callees":[{"symbol":"NewSamplerWithOptions","path":"zapcore/sampler.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"(*sampler).Level","signature":"func (s *sampler) Level() Level","start_line":199,"end_line":201,"code":"func (s *sampler) Level() Level {\n\treturn LevelOf(s.Core)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.63},"call_graph":{"callees":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"callers":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"(*sampler).With","signature":"func (s *sampler) With(fields []Field) Core","start_line":203,"end_line":212,"code":"func (s *sampler) With(fields []Field) Core {\n\treturn \u0026sampler{\n\t\tCore:       s.Core.With(fields),\n\t\ttick:       s.tick,\n\t\tcounts:     s.counts,\n\t\tfirst:      s.first,\n\t\tthereafter: s.thereafter,\n\t\thook:       s.hook,\n\t}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.89},"call_graph":{"callees":[{"symbol":"(*contextObserver).With","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*ioCore).With","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"(nopCore).With","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"Fields$1","path":"options.go"},{"symbol":"initOnce$1","path":"zapcore/lazy_with.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/sampler.go","symbol":"(*sampler).Check","signature":"func (s *sampler) Check(ent Entry, ce *CheckedEntry) *CheckedEntry","start_line":214,"end_line":229,"code":"func (s *sampler) Check(ent Entry, ce *CheckedEntry) *CheckedEntry {\n\tif !s.Enabled(ent.Level) {\n\t\treturn ce\n\t}\n\n\tif ent.Level \u003e= _minLevel \u0026\u0026 ent.Level \u003c= _maxLevel {\n\t\tcounter := s.counts.get(ent.Level, ent.Message)\n\t\tn := counter.IncCheckReset(ent.Time, s.tick)\n\t\tif n \u003e s.first \u0026\u0026 (s.thereafter == 0 || (n-s.first)%s.thereafter != 0) {\n\t\t\ts.hook(ent, LogDropped)\n\t\t\treturn ce\n\t\t}\n\t\ts.hook(ent, LogSampled)\n\t}\n\treturn s.Core.Check(ent, ce)\n}\n","selection":{"visibility":"exported","reason":"core","score":0.74},"call_graph":{"callees":[{"symbol":"(*counter).IncCheckReset","path":"zapcore/sampler.go"},{"symbol":"(*counters).get","path":"zapcore/sampler.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Check","path":"zapcore/core.go"},{"symbol":"nopSamplingHook","path":"zapcore/sampler.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/tee.go","symbol":"NewTee","signature":"func NewTee(cores ...Core) Core","start_line":37,"end_line":46,"code":"func NewTee(cores ...Core) Core {\n\tswitch len(cores) {\n\tcase 0:\n\t\treturn NewNopCore()\n\tcase 1:\n\t\treturn cores[0]\n\tdefault:\n\t\treturn multiCore(cores)\n\t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"NewNopCore","path":"zapcore/core.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/tee.go","symbol":"(multiCore).With","signature":"func (mc multiCore) With(fields []Field) Core","start_line":48,"end_line":54,"code":"func (mc multiCore) With(fields []Field) Core {\n\tclone := make(multiCore, len(mc))\n\tfor i := range mc {\n\t\tclone[i] = mc[i].With(fields)\n\t}\n\treturn clone\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.89},"call_graph":{"callees":[{"symbol":"(*contextObserver).With","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*ioCore).With","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"(nopCore).With","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*multiCore).With","path":"zapcore/tee.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"Fields$1","path":"options.go"},{"symbol":"initOnce$1","path":"zapcore/lazy_with.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/tee.go","symbol":"(multiCore).Level","signature":"func (mc multiCore) Level() Level","start_line":56,"end_line":64,"code":"func (mc multiCore) Level() Level {\n\tminLvl := _maxLevel // mc is never empty\n\tfor i := range mc {\n\t\tif lvl := LevelOf(mc[i]); lvl \u003c minLvl {\n\t\t\tminLvl = lvl\n\t\t}\n\t}\n\treturn minLvl\n}\n","selection":{"visibility":"exported","reason":"core","score":0.73},"call_graph":{"callees":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"callers":[{"symbol":"(*multiCore).Level","path":"zapcore/tee.go"},{"symbol":"LevelOf","path":"zapcore/level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/tee.go","symbol":"(multiCore).Enabled","signature":"func (mc multiCore) Enabled(lvl Level) bool","start_line":66,"end_line":73,"code":"func (mc multiCore) Enabled(lvl Level) bool {\n\tfor i := range mc {\n\t\tif mc[i].Enabled(lvl) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n","selection":{"visibility":"exported","reason":"core","score":0.78},"call_graph":{"callees":[{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).Infoln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).V","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Warningln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*SugaredLogger).log","path":"sugar.go"},{"symbol":"(*SugaredLogger).logln","path":"sugar.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"},{"symbol":"(*multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/tee.go","symbol":"(multiCore).Check","signature":"func (mc multiCore) Check(ent Entry, ce *CheckedEntry) *CheckedEntry","start_line":75,"end_line":80,"code":"func (mc multiCore) Check(ent Entry, ce *CheckedEntry) *CheckedEntry {\n\tfor i := range mc {\n\t\tce = mc[i].Check(ent, ce)\n\t}\n\treturn ce\n}\n","selection":{"visibility":"exported","reason":"core","score":0.74},"call_graph":{"callees":[{"symbol":"(*contextObserver).Check","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Check","path":"zapcore/core.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"},{"symbol":"(nopCore).Check","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*multiCore).Check","path":"zapcore/tee.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/tee.go","symbol":"(multiCore).Write","signature":"func (mc multiCore) Write(ent Entry, fields []Field) error","start_line":82,"end_line":88,"code":"func (mc multiCore) Write(ent Entry, fields []Field) error {\n\tvar err error\n\tfor i := range mc {\n\t\terr = multierr.Append(err, mc[i].Write(ent, fields))\n\t}\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"core","score":0.8},"call_graph":{"callees":[{"symbol":"(*contextObserver).Write","path":"zaptest/observer/observer.go"},{"symbol":"(*hooked).Write","path":"zapcore/hook.go"},{"symbol":"(*ioCore).Write","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Write","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Write","path":"zapcore/tee.go"},{"symbol":"(nopCore).Write","path":"zapcore/core.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*levelFilterCore).Write","path":"zapcore/increase_level.go"},{"symbol":"(*multiCore).Write","path":"zapcore/tee.go"},{"symbol":"(multiCore).Write","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/tee.go","symbol":"(multiCore).Sync","signature":"func (mc multiCore) Sync() error","start_line":90,"end_line":96,"code":"func (mc multiCore) Sync() error {\n\tvar err error\n\tfor i := range mc {\n\t\terr = multierr.Append(err, mc[i].Sync())\n\t}\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"core","score":0.76},"call_graph":{"callees":[{"symbol":"(*contextObserver).Sync","path":"zaptest/observer/observer.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*levelFilterCore).Sync","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Sync","path":"zapcore/tee.go"},{"symbol":"(nopCore).Sync","path":"zapcore/core.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*Logger).Sync","path":"logger.go"},{"symbol":"(*levelFilterCore).Sync","path":"zapcore/increase_level.go"},{"symbol":"(*multiCore).Sync","path":"zapcore/tee.go"},{"symbol":"(multiCore).Sync","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/write_syncer.go","symbol":"AddSync","signature":"func AddSync(w io.Writer) WriteSyncer","start_line":40,"end_line":47,"code":"func AddSync(w io.Writer) WriteSyncer {\n\tswitch w := w.(type) {\n\tcase WriteSyncer:\n\t\treturn w\n\tdefault:\n\t\treturn writerWrapper{w}\n\t}\n}\n","selection":{"visibility":"exported","reason":"core","score":0.71},"call_graph":{"callees":[],"callers":[{"symbol":"CombineWriteSyncers","path":"writer.go"},{"symbol":"NewNop","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/write_syncer.go","symbol":"Lock","signature":"func Lock(ws WriteSyncer) WriteSyncer","start_line":56,"end_line":62,"code":"func Lock(ws WriteSyncer) WriteSyncer {\n\tif _, ok := ws.(*lockedWriteSyncer); ok {\n\t\t// no need to layer on another lock\n\t\treturn ws\n\t}\n\treturn \u0026lockedWriteSyncer{ws: ws}\n}\n","selection":{"visibility":"exported","reason":"core","score":0.76},"call_graph":{"callees":[],"callers":[{"symbol":"CombineWriteSyncers","path":"writer.go"},{"symbol":"New","path":"logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/write_syncer.go","symbol":"(*lockedWriteSyncer).Write","signature":"func (s *lockedWriteSyncer) Write(bs []byte) (int, error)","start_line":64,"end_line":69,"code":"func (s *lockedWriteSyncer) Write(bs []byte) (int, error) {\n\ts.Lock()\n\tn, err := s.ws.Write(bs)\n\ts.Unlock()\n\treturn n, err\n}\n","selection":{"visibility":"exported","reason":"core","score":0.8},"call_graph":{"callees":[{"symbol":"(*Discarder).Write","path":"internal/ztest/writer.go"},{"symbol":"(*MAC).Write","path":"../../../../usr/local/go/src/vendor/golang.org/x/crypto/internal/poly1305/poly1305.go"},{"symbol":"(*Writer).Write","path":"zapio/writer.go"},{"symbol":"(*digest).Write","path":"../../../../usr/local/go/src/crypto/md5/md5.go"},{"symbol":"(*dotWriter).Write","path":"../../../../usr/local/go/src/net/textproto/writer.go"},{"symbol":"(*encoder).Write","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"(*prefixSuffixSaver).Write","path":"../../../../usr/local/go/src/os/exec/exec.go"},{"symbol":"(*response).Write","path":"../../../../usr/local/go/src/net/http/server.go"},{"symbol":"(TestingWriter).Write","path":"zaptest/logger.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*Encoder).Encode","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"(*Writer).Close","path":"../../../../usr/local/go/src/compress/gzip/gzip.go"},{"symbol":"(*Writer).writeString","path":"../../../../usr/local/go/src/compress/gzip/gzip.go"},{"symbol":"(*dictWriter).Write","path":"../../../../usr/local/go/src/compress/flate/deflate.go"},{"symbol":"(*encoder).Write","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"(*multiWriteSyncer).Write","path":"zapcore/write_syncer.go"},{"symbol":"(*multiWriter).Write","path":"../../../../usr/local/go/src/io/multi.go"},{"symbol":"init#1","path":"../../../../usr/local/go/src/crypto/internal/fips140/check/check.go"},{"symbol":"printStack","path":"../../../../usr/local/go/src/internal/bisect/bisect.go"},{"symbol":"writeHeader","path":"../../../../usr/local/go/src/encoding/pem/pem.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/write_syncer.go","symbol":"(*lockedWriteSyncer).Sync","signature":"func (s *lockedWriteSyncer) Sync() error","start_line":71,"end_line":76,"code":"func (s *lockedWriteSyncer) Sync() error {\n\ts.Lock()\n\terr := s.ws.Sync()\n\ts.Unlock()\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"core","score":0.76},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*File).Sync","path":"../../../../usr/local/go/src/os/file_posix.go"},{"symbol":"(*Syncer).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*Writer).Sync","path":"zapio/writer.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(TestingWriter).Sync","path":"zaptest/logger.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(writerWrapper).Sync","path":"zapcore/write_syncer.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(*multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/write_syncer.go","symbol":"(writerWrapper).Sync","signature":"func (w writerWrapper) Sync() error","start_line":82,"end_line":84,"code":"func (w writerWrapper) Sync() error {\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"core","score":0.66},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*File).Sync","path":"../../../../usr/local/go/src/os/file_posix.go"},{"symbol":"(*Mutex).Lock","path":"../../../../usr/local/go/src/sync/mutex.go"},{"symbol":"(*Mutex).Unlock","path":"../../../../usr/local/go/src/sync/mutex.go"},{"symbol":"(*Syncer).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*Writer).Sync","path":"zapio/writer.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(TestingWriter).Sync","path":"zaptest/logger.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(writerWrapper).Sync","path":"zapcore/write_syncer.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/write_syncer.go","symbol":"NewMultiWriteSyncer","signature":"func NewMultiWriteSyncer(ws ...WriteSyncer) WriteSyncer","start_line":90,"end_line":95,"code":"func NewMultiWriteSyncer(ws ...WriteSyncer) WriteSyncer {\n\tif len(ws) == 1 {\n\t\treturn ws[0]\n\t}\n\treturn multiWriteSyncer(ws)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[],"callers":[{"symbol":"CombineWriteSyncers","path":"writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/write_syncer.go","symbol":"(multiWriteSyncer).Write","signature":"func (ws multiWriteSyncer) Write(p []byte) (int, error)","start_line":101,"end_line":114,"code":"func (ws multiWriteSyncer) Write(p []byte) (int, error) {\n\tvar writeErr error\n\tnWritten := 0\n\tfor _, w := range ws {\n\t\tn, err := w.Write(p)\n\t\twriteErr = multierr.Append(writeErr, err)\n\t\tif nWritten == 0 \u0026\u0026 n != 0 {\n\t\t\tnWritten = n\n\t\t} else if n \u003c nWritten {\n\t\t\tnWritten = n\n\t\t}\n\t}\n\treturn nWritten, writeErr\n}\n","selection":{"visibility":"exported","reason":"core","score":0.8},"call_graph":{"callees":[{"symbol":"(*Conn).Write","path":"../../../../usr/local/go/src/crypto/tls/conn.go"},{"symbol":"(*Discarder).Write","path":"internal/ztest/writer.go"},{"symbol":"(*SHA3).Write","path":"../../../../usr/local/go/src/crypto/sha3/sha3.go"},{"symbol":"(*lockedWriteSyncer).Write","path":"zapcore/write_syncer.go"},{"symbol":"(*prefixSuffixSaver).Write","path":"../../../../usr/local/go/src/os/exec/exec.go"},{"symbol":"(FailWriter).Write","path":"internal/ztest/writer.go"},{"symbol":"(ShortWriter).Write","path":"internal/ztest/writer.go"},{"symbol":"(TestingWriter).Write","path":"zaptest/logger.go"},{"symbol":"(discard).Write","path":"../../../../usr/local/go/src/io/io.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*Config).writeKeyLog","path":"../../../../usr/local/go/src/crypto/tls/common.go"},{"symbol":"(*Encoder).Encode","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"(*Writer).Close","path":"../../../../usr/local/go/src/vendor/golang.org/x/text/transform/transform.go"},{"symbol":"(*encoder).Close","path":"../../../../usr/local/go/src/encoding/base64/base64.go"},{"symbol":"(*http2Framer).endWrite","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"(*ioCore).Write","path":"zapcore/core.go"},{"symbol":"(*multiWriteSyncer).Write","path":"zapcore/write_syncer.go"},{"symbol":"(*multiWriter).Write","path":"../../../../usr/local/go/src/io/multi.go"},{"symbol":"init#1","path":"../../../../usr/local/go/src/crypto/internal/fips140/check/check.go"},{"symbol":"printFileLine","path":"../../../../usr/local/go/src/internal/bisect/bisect.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapcore/write_syncer.go","symbol":"(multiWriteSyncer).Sync","signature":"func (ws multiWriteSyncer) Sync() error","start_line":116,"end_line":122,"code":"func (ws multiWriteSyncer) Sync() error {\n\tvar err error\n\tfor _, w := range ws {\n\t\terr = multierr.Append(err, w.Sync())\n\t}\n\treturn err\n}\n","selection":{"visibility":"exported","reason":"core","score":0.76},"call_graph":{"callees":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*File).Sync","path":"../../../../usr/local/go/src/os/file_posix.go"},{"symbol":"(*Syncer).Sync","path":"internal/ztest/writer.go"},{"symbol":"(*Writer).Sync","path":"zapio/writer.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(TestingWriter).Sync","path":"zaptest/logger.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(writerWrapper).Sync","path":"zapcore/write_syncer.go"},{"symbol":"Append","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(*multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(optionFunc).apply","signature":"func (f optionFunc) apply(log *Logger)","start_line":55,"end_line":57,"code":"func (f optionFunc) apply(log *Logger) {\n\tf(log)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.42},"call_graph":{"callees":[{"symbol":"WithDebug$1","path":"zapgrpc/zapgrpc.go"},{"symbol":"withWarn$1","path":"zapgrpc/zapgrpc.go"}],"callers":[{"symbol":"(*optionFunc).apply","path":"zapgrpc/zapgrpc.go"},{"symbol":"NewLogger","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"WithDebug","signature":"func WithDebug() Option","start_line":64,"end_line":73,"code":"func WithDebug() Option {\n\treturn optionFunc(func(logger *Logger) {\n\t\tlogger.print = \u0026printer{\n\t\t\tenab:   logger.levelEnabler,\n\t\t\tlevel:  zapcore.DebugLevel,\n\t\t\tprint:  logger.delegate.Debug,\n\t\t\tprintf: logger.delegate.Debugf,\n\t\t}\n\t})\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.85},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"withWarn","signature":"func withWarn() Option","start_line":77,"end_line":86,"code":"func withWarn() Option {\n\treturn optionFunc(func(logger *Logger) {\n\t\tlogger.fatal = \u0026printer{\n\t\t\tenab:   logger.levelEnabler,\n\t\t\tlevel:  zapcore.WarnLevel,\n\t\t\tprint:  logger.delegate.Warn,\n\t\t\tprintf: logger.delegate.Warnf,\n\t\t}\n\t})\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"NewLogger","signature":"func NewLogger(l *zap.Logger, options ...Option) *Logger","start_line":89,"end_line":110,"code":"func NewLogger(l *zap.Logger, options ...Option) *Logger {\n\tlogger := \u0026Logger{\n\t\tdelegate:     l.Sugar(),\n\t\tlevelEnabler: l.Core(),\n\t}\n\tlogger.print = \u0026printer{\n\t\tenab:   logger.levelEnabler,\n\t\tlevel:  zapcore.InfoLevel,\n\t\tprint:  logger.delegate.Info,\n\t\tprintf: logger.delegate.Infof,\n\t}\n\tlogger.fatal = \u0026printer{\n\t\tenab:   logger.levelEnabler,\n\t\tlevel:  zapcore.FatalLevel,\n\t\tprint:  logger.delegate.Fatal,\n\t\tprintf: logger.delegate.Fatalf,\n\t}\n\tfor _, option := range options {\n\t\toption.apply(logger)\n\t}\n\treturn logger\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"(*Logger).Core","path":"logger.go"},{"symbol":"(*Logger).Sugar","path":"logger.go"},{"symbol":"(optionFunc).apply","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*printer).Print","signature":"func (v *printer) Print(args ...interface{})","start_line":123,"end_line":125,"code":"func (v *printer) Print(args ...interface{}) {\n\tv.print(args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*printer).Print","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*printer).Printf","signature":"func (v *printer) Printf(format string, args ...interface{})","start_line":127,"end_line":129,"code":"func (v *printer) Printf(format string, args ...interface{}) {\n\tv.printf(format, args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Debugf","path":"sugar.go"},{"symbol":"(*SugaredLogger).Fatalf","path":"sugar.go"},{"symbol":"(*SugaredLogger).Infof","path":"sugar.go"},{"symbol":"(*SugaredLogger).Warnf","path":"sugar.go"},{"symbol":"Fatalf","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Panicf","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Printf","path":"../../../../usr/local/go/src/log/log.go"}],"callers":[{"symbol":"(*Logger).Fatalf","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Printf","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*printer).Println","signature":"func (v *printer) Println(args ...interface{})","start_line":131,"end_line":135,"code":"func (v *printer) Println(args ...interface{}) {\n\tif v.enab.Enabled(v.level) {\n\t\tv.print(sprintln(args))\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.71},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Warn","path":"sugar.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"},{"symbol":"Panic","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Panicln","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Print","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Println","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"sprintln","path":"zapgrpc/zapgrpc.go"}],"callers":[{"symbol":"(*Logger).Fatalln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Println","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Print","signature":"func (l *Logger) Print(args ...interface{})","start_line":150,"end_line":152,"code":"func (l *Logger) Print(args ...interface{}) {\n\tl.print.Print(args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*printer).Print","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Printf","signature":"func (l *Logger) Printf(format string, args ...interface{})","start_line":157,"end_line":159,"code":"func (l *Logger) Printf(format string, args ...interface{}) {\n\tl.print.Printf(format, args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*printer).Printf","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Println","signature":"func (l *Logger) Println(args ...interface{})","start_line":164,"end_line":166,"code":"func (l *Logger) Println(args ...interface{}) {\n\tl.print.Println(args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Debug","path":"sugar.go"},{"symbol":"(*SugaredLogger).Fatal","path":"sugar.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"Fatal","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Panic","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"Println","path":"../../../../usr/local/go/src/log/log.go"},{"symbol":"sprintln","path":"zapgrpc/zapgrpc.go"}],"callers":[{"symbol":"(*Logger).Fatalln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Println","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Info","signature":"func (l *Logger) Info(args ...interface{})","start_line":169,"end_line":171,"code":"func (l *Logger) Info(args ...interface{}) {\n\tl.delegate.Info(args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Info","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Infoln","signature":"func (l *Logger) Infoln(args ...interface{})","start_line":174,"end_line":178,"code":"func (l *Logger) Infoln(args ...interface{}) {\n\tif l.levelEnabler.Enabled(zapcore.InfoLevel) {\n\t\tl.delegate.Info(sprintln(args))\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Info","path":"sugar.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"},{"symbol":"sprintln","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Infof","signature":"func (l *Logger) Infof(format string, args ...interface{})","start_line":181,"end_line":183,"code":"func (l *Logger) Infof(format string, args ...interface{}) {\n\tl.delegate.Infof(format, args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Infof","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Warning","signature":"func (l *Logger) Warning(args ...interface{})","start_line":186,"end_line":188,"code":"func (l *Logger) Warning(args ...interface{}) {\n\tl.delegate.Warn(args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Warn","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Warningln","signature":"func (l *Logger) Warningln(args ...interface{})","start_line":191,"end_line":195,"code":"func (l *Logger) Warningln(args ...interface{}) {\n\tif l.levelEnabler.Enabled(zapcore.WarnLevel) {\n\t\tl.delegate.Warn(sprintln(args))\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Warn","path":"sugar.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"},{"symbol":"sprintln","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Warningf","signature":"func (l *Logger) Warningf(format string, args ...interface{})","start_line":198,"end_line":200,"code":"func (l *Logger) Warningf(format string, args ...interface{}) {\n\tl.delegate.Warnf(format, args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Warnf","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Error","signature":"func (l *Logger) Error(args ...interface{})","start_line":203,"end_line":205,"code":"func (l *Logger) Error(args ...interface{}) {\n\tl.delegate.Error(args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.64},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Error","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Errorln","signature":"func (l *Logger) Errorln(args ...interface{})","start_line":208,"end_line":212,"code":"func (l *Logger) Errorln(args ...interface{}) {\n\tif l.levelEnabler.Enabled(zapcore.ErrorLevel) {\n\t\tl.delegate.Error(sprintln(args))\n\t}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Error","path":"sugar.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"},{"symbol":"sprintln","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Errorf","signature":"func (l *Logger) Errorf(format string, args ...interface{})","start_line":215,"end_line":217,"code":"func (l *Logger) Errorf(format string, args ...interface{}) {\n\tl.delegate.Errorf(format, args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.69},"call_graph":{"callees":[{"symbol":"(*SugaredLogger).Errorf","path":"sugar.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Fatal","signature":"func (l *Logger) Fatal(args ...interface{})","start_line":220,"end_line":222,"code":"func (l *Logger) Fatal(args ...interface{}) {\n\tl.fatal.Print(args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*printer).Print","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Fatalln","signature":"func (l *Logger) Fatalln(args ...interface{})","start_line":225,"end_line":227,"code":"func (l *Logger) Fatalln(args ...interface{}) {\n\tl.fatal.Println(args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).Fatalf","signature":"func (l *Logger) Fatalf(format string, args ...interface{})","start_line":230,"end_line":232,"code":"func (l *Logger) Fatalf(format string, args ...interface{}) {\n\tl.fatal.Printf(format, args...)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*printer).Printf","path":"zapgrpc/zapgrpc.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"(*Logger).V","signature":"func (l *Logger) V(level int) bool","start_line":235,"end_line":237,"code":"func (l *Logger) V(level int) bool {\n\treturn l.levelEnabler.Enabled(_grpcToZapLevel[level])\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapgrpc/zapgrpc.go","symbol":"sprintln","signature":"func sprintln(args []interface{}) string","start_line":239,"end_line":243,"code":"func sprintln(args []interface{}) string {\n\ts := fmt.Sprintln(args...)\n\t// Drop the new line character added by Sprintln\n\treturn s[:len(s)-1]\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.52},"call_graph":{"callees":[{"symbol":"Sprintln","path":"../../../../usr/local/go/src/fmt/print.go"}],"callers":[{"symbol":"(*Logger).Errorln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Infoln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*Logger).Warningln","path":"zapgrpc/zapgrpc.go"},{"symbol":"(*printer).Println","path":"zapgrpc/zapgrpc.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapio/writer.go","symbol":"(*Writer).Write","signature":"func (w *Writer) Write(bs []byte) (n int, err error)","start_line":75,"end_line":87,"code":"func (w *Writer) Write(bs []byte) (n int, err error) {\n\t// Skip all checks if the level isn't enabled.\n\tif !w.Log.Core().Enabled(w.Level) {\n\t\treturn len(bs), nil\n\t}\n\n\tn = len(bs)\n\tfor len(bs) \u003e 0 {\n\t\tbs = w.writeLine(bs)\n\t}\n\n\treturn n, nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.8},"call_graph":{"callees":[{"symbol":"(*Logger).Core","path":"logger.go"},{"symbol":"(*Writer).writeLine","path":"zapio/writer.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Encoder).Encode","path":"../../../../usr/local/go/src/encoding/json/stream.go"},{"symbol":"(*Writer).Write","path":"../../../../usr/local/go/src/bufio/bufio.go"},{"symbol":"(*dictWriter).Write","path":"../../../../usr/local/go/src/compress/flate/deflate.go"},{"symbol":"(*dumper).Write","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"(*multiError).writeSingleline","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"},{"symbol":"(*multiWriter).WriteString","path":"../../../../usr/local/go/src/io/multi.go"},{"symbol":"Fprint","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"Fprintf","path":"../../../../usr/local/go/src/fmt/print.go"},{"symbol":"JSEscape","path":"../../../../usr/local/go/src/text/template/funcs.go"},{"symbol":"init#1","path":"../../../../usr/local/go/src/crypto/internal/fips140/check/check.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapio/writer.go","symbol":"(*Writer).writeLine","signature":"func (w *Writer) writeLine(line []byte) (remaining []byte)","start_line":91,"end_line":116,"code":"func (w *Writer) writeLine(line []byte) (remaining []byte) {\n\tidx := bytes.IndexByte(line, '\\n')\n\tif idx \u003c 0 {\n\t\t// If there are no newlines, buffer the entire string.\n\t\tw.buff.Write(line)\n\t\treturn nil\n\t}\n\n\t// Split on the newline, buffer and flush the left.\n\tline, remaining = line[:idx], line[idx+1:]\n\n\t// Fast path: if we don't have a partial message from a previous write\n\t// in the buffer, skip the buffer and log directly.\n\tif w.buff.Len() == 0 {\n\t\tw.log(line)\n\t\treturn\n\t}\n\n\tw.buff.Write(line)\n\n\t// Log empty messages in the middle of the stream so that we don't lose\n\t// information when the user writes \"foo\\n\\nbar\".\n\tw.flush(true /* allowEmpty */)\n\n\treturn remaining\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*Buffer).Len","path":"../../../../usr/local/go/src/bytes/buffer.go"},{"symbol":"(*Buffer).Write","path":"../../../../usr/local/go/src/bytes/buffer.go"},{"symbol":"(*Writer).flush","path":"zapio/writer.go"},{"symbol":"(*Writer).log","path":"zapio/writer.go"},{"symbol":"IndexByte","path":"../../../../usr/local/go/src/bytes/bytes.go"}],"callers":[{"symbol":"(*Writer).Write","path":"zapio/writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapio/writer.go","symbol":"(*Writer).Close","signature":"func (w *Writer) Close() error","start_line":122,"end_line":124,"code":"func (w *Writer) Close() error {\n\treturn w.Sync()\n}\n","selection":{"visibility":"exported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*Writer).Sync","path":"zapio/writer.go"}],"callers":[{"symbol":"(*Response).closeBody","path":"../../../../usr/local/go/src/net/http/response.go"},{"symbol":"(*transferWriter).writeBody","path":"../../../../usr/local/go/src/net/http/transfer.go"},{"symbol":"(StreamWriter).Close","path":"../../../../usr/local/go/src/crypto/cipher/io.go"},{"symbol":"(WordEncoder).bEncode","path":"../../../../usr/local/go/src/mime/encodedword.go"},{"symbol":"(sectionReadCloser).Close","path":"../../../../usr/local/go/src/mime/multipart/formdata.go"},{"symbol":"Dump","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"Encode","path":"../../../../usr/local/go/src/encoding/pem/pem.go"},{"symbol":"closeDescriptors","path":"../../../../usr/local/go/src/os/exec/exec.go"},{"symbol":"roundTrip$2","path":"../../../../usr/local/go/src/net/http/h2_bundle.go"},{"symbol":"writeBody$1","path":"../../../../usr/local/go/src/net/http/transfer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapio/writer.go","symbol":"(*Writer).Sync","signature":"func (w *Writer) Sync() error","start_line":128,"end_line":134,"code":"func (w *Writer) Sync() error {\n\t// Don't allow empty messages on explicit Sync calls or on Close\n\t// because we don't want an extraneous empty message at the end of the\n\t// stream -- it's common for files to end with a newline.\n\tw.flush(false /* allowEmpty */)\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.76},"call_graph":{"callees":[{"symbol":"(*Writer).flush","path":"zapio/writer.go"}],"callers":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*Writer).Close","path":"zapio/writer.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapio/writer.go","symbol":"(*Writer).flush","signature":"func (w *Writer) flush(allowEmpty bool)","start_line":138,"end_line":143,"code":"func (w *Writer) flush(allowEmpty bool) {\n\tif allowEmpty || w.buff.Len() \u003e 0 {\n\t\tw.log(w.buff.Bytes())\n\t}\n\tw.buff.Reset()\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.51},"call_graph":{"callees":[{"symbol":"(*Buffer).Bytes","path":"../../../../usr/local/go/src/bytes/buffer.go"},{"symbol":"(*Buffer).Len","path":"../../../../usr/local/go/src/bytes/buffer.go"},{"symbol":"(*Buffer).Reset","path":"../../../../usr/local/go/src/bytes/buffer.go"},{"symbol":"(*Writer).log","path":"zapio/writer.go"}],"callers":[{"symbol":"(*Writer).Sync","path":"zapio/writer.go"},{"symbol":"(*Writer).writeLine","path":"zapio/writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zapio/writer.go","symbol":"(*Writer).log","signature":"func (w *Writer) log(b []byte)","start_line":145,"end_line":149,"code":"func (w *Writer) log(b []byte) {\n\tif ce := w.Log.Check(w.Level, string(b)); ce != nil {\n\t\tce.Write()\n\t}\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.6},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).Check","path":"logger.go"}],"callers":[{"symbol":"(*Writer).flush","path":"zapio/writer.go"},{"symbol":"(*Writer).writeLine","path":"zapio/writer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/logger.go","symbol":"(loggerOptionFunc).applyLoggerOption","signature":"func (f loggerOptionFunc) applyLoggerOption(opts *loggerOptions)","start_line":42,"end_line":44,"code":"func (f loggerOptionFunc) applyLoggerOption(opts *loggerOptions) {\n\tf(opts)\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.4},"call_graph":{"callees":[{"symbol":"Level$1","path":"zaptest/logger.go"},{"symbol":"WrapOptions$1","path":"zaptest/logger.go"}],"callers":[{"symbol":"(*loggerOptionFunc).applyLoggerOption","path":"zaptest/logger.go"},{"symbol":"NewLogger","path":"zaptest/logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/logger.go","symbol":"Level","signature":"func Level(enab zapcore.LevelEnabler) LoggerOption","start_line":48,"end_line":52,"code":"func Level(enab zapcore.LevelEnabler) LoggerOption {\n\treturn loggerOptionFunc(func(opts *loggerOptions) {\n\t\topts.Level = enab\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.73},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/logger.go","symbol":"WrapOptions","signature":"func WrapOptions(zapOpts ...zap.Option) LoggerOption","start_line":55,"end_line":59,"code":"func WrapOptions(zapOpts ...zap.Option) LoggerOption {\n\treturn loggerOptionFunc(func(opts *loggerOptions) {\n\t\topts.zapOptions = zapOpts\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/logger.go","symbol":"NewLogger","signature":"func NewLogger(t TestingT, opts ...LoggerOption) *zap.Logger","start_line":77,"end_line":101,"code":"func NewLogger(t TestingT, opts ...LoggerOption) *zap.Logger {\n\tcfg := loggerOptions{\n\t\tLevel: zapcore.DebugLevel,\n\t}\n\tfor _, o := range opts {\n\t\to.applyLoggerOption(\u0026cfg)\n\t}\n\n\twriter := NewTestingWriter(t)\n\tzapOptions := []zap.Option{\n\t\t// Send zap errors to the same writer and mark the test as failed if\n\t\t// that happens.\n\t\tzap.ErrorOutput(writer.WithMarkFailed(true)),\n\t}\n\tzapOptions = append(zapOptions, cfg.zapOptions...)\n\n\treturn zap.New(\n\t\tzapcore.NewCore(\n\t\t\tzapcore.NewConsoleEncoder(zap.NewDevelopmentEncoderConfig()),\n\t\t\twriter,\n\t\t\tcfg.Level,\n\t\t),\n\t\tzapOptions...,\n\t)\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":[{"symbol":"(TestingWriter).WithMarkFailed","path":"zaptest/logger.go"},{"symbol":"(loggerOptionFunc).applyLoggerOption","path":"zaptest/logger.go"},{"symbol":"ErrorOutput","path":"options.go"},{"symbol":"New","path":"logger.go"},{"symbol":"NewConsoleEncoder","path":"zapcore/console_encoder.go"},{"symbol":"NewCore","path":"zapcore/core.go"},{"symbol":"NewDevelopmentEncoderConfig","path":"config.go"},{"symbol":"NewTestingWriter","path":"zaptest/logger.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/logger.go","symbol":"NewTestingWriter","signature":"func NewTestingWriter(t TestingT) TestingWriter","start_line":127,"end_line":129,"code":"func NewTestingWriter(t TestingT) TestingWriter {\n\treturn TestingWriter{t: t}\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.75},"call_graph":{"callees":[],"callers":[{"symbol":"NewLogger","path":"zaptest/logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/logger.go","symbol":"(TestingWriter).WithMarkFailed","signature":"func (w TestingWriter) WithMarkFailed(v bool) TestingWriter","start_line":133,"end_line":136,"code":"func (w TestingWriter) WithMarkFailed(v bool) TestingWriter {\n\tw.markFailed = v\n\treturn w\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.75},"call_graph":{"callees":[],"callers":[{"symbol":"(*TestingWriter).WithMarkFailed","path":"zaptest/logger.go"},{"symbol":"NewLogger","path":"zaptest/logger.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/logger.go","symbol":"(TestingWriter).Write","signature":"func (w TestingWriter) Write(p []byte) (n int, err error)","start_line":139,"end_line":152,"code":"func (w TestingWriter) Write(p []byte) (n int, err error) {\n\tn = len(p)\n\n\t// Strip trailing newline because t.Log always adds one.\n\tp = bytes.TrimRight(p, \"\\n\")\n\n\t// Note: t.Log is safe for concurrent use.\n\tw.t.Logf(\"%s\", p)\n\tif w.markFailed {\n\t\tw.t.Fail()\n\t}\n\n\treturn n, nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.8},"call_graph":{"callees":[{"symbol":"TrimRight","path":"../../../../usr/local/go/src/bytes/bytes.go"}],"callers":[{"symbol":"(*Buffers).WriteTo","path":"../../../../usr/local/go/src/net/net.go"},{"symbol":"(*Conn).writeHandshakeRecord","path":"../../../../usr/local/go/src/crypto/tls/conn.go"},{"symbol":"(*TestingWriter).Write","path":"zaptest/logger.go"},{"symbol":"(*Writer).Write","path":"../../../../usr/local/go/src/vendor/golang.org/x/text/transform/transform.go"},{"symbol":"(*dumper).Close","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"(*huffmanBitWriter).write","path":"../../../../usr/local/go/src/compress/flate/huffman_bit_writer.go"},{"symbol":"(*teeReader).Read","path":"../../../../usr/local/go/src/io/io.go"},{"symbol":"(StreamWriter).Write","path":"../../../../usr/local/go/src/crypto/cipher/io.go"},{"symbol":"Dump","path":"../../../../usr/local/go/src/encoding/hex/hex.go"},{"symbol":"writePrefixLine","path":"../../go/pkg/mod/go.uber.org/multierr@v1.10.0/error.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/logger.go","symbol":"(TestingWriter).Sync","signature":"func (w TestingWriter) Sync() error","start_line":155,"end_line":157,"code":"func (w TestingWriter) Sync() error {\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.66},"call_graph":{"callees":[],"callers":[{"symbol":"(*BufferedWriteSyncer).Sync","path":"zapcore/buffered_write_syncer.go"},{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*TestingWriter).Sync","path":"zaptest/logger.go"},{"symbol":"(*ioCore).Sync","path":"zapcore/core.go"},{"symbol":"(*lockedWriteSyncer).Sync","path":"zapcore/write_syncer.go"},{"symbol":"(multiWriteSyncer).Sync","path":"zapcore/write_syncer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/logged_entry.go","symbol":"(LoggedEntry).ContextMap","signature":"func (e LoggedEntry) ContextMap() map[string]interface{}","start_line":33,"end_line":39,"code":"func (e LoggedEntry) ContextMap() map[string]interface{} {\n\tencoder := zapcore.NewMapObjectEncoder()\n\tfor _, f := range e.Context {\n\t\tf.AddTo(encoder)\n\t}\n\treturn encoder.Fields\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(Field).AddTo","path":"zapcore/field.go"},{"symbol":"NewMapObjectEncoder","path":"zapcore/memory_encoder.go"}],"callers":[{"symbol":"(*LoggedEntry).ContextMap","path":"zaptest/observer/logged_entry.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).Len","signature":"func (o *ObservedLogs) Len() int","start_line":43,"end_line":48,"code":"func (o *ObservedLogs) Len() int {\n\to.mu.RLock()\n\tn := len(o.logs)\n\to.mu.RUnlock()\n\treturn n\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*RWMutex).RLock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).RUnlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).All","signature":"func (o *ObservedLogs) All() []LoggedEntry","start_line":51,"end_line":57,"code":"func (o *ObservedLogs) All() []LoggedEntry {\n\to.mu.RLock()\n\tret := make([]LoggedEntry, len(o.logs))\n\tcopy(ret, o.logs)\n\to.mu.RUnlock()\n\treturn ret\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*RWMutex).RLock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).RUnlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[{"symbol":"(*ObservedLogs).AllUntimed","path":"zaptest/observer/observer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).TakeAll","signature":"func (o *ObservedLogs) TakeAll() []LoggedEntry","start_line":61,"end_line":67,"code":"func (o *ObservedLogs) TakeAll() []LoggedEntry {\n\to.mu.Lock()\n\tret := o.logs\n\to.logs = nil\n\to.mu.Unlock()\n\treturn ret\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*RWMutex).Lock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).Unlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).AllUntimed","signature":"func (o *ObservedLogs) AllUntimed() []LoggedEntry","start_line":72,"end_line":78,"code":"func (o *ObservedLogs) AllUntimed() []LoggedEntry {\n\tret := o.All()\n\tfor i := range ret {\n\t\tret[i].Time = time.Time{}\n\t}\n\treturn ret\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*ObservedLogs).All","path":"zaptest/observer/observer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).FilterLevelExact","signature":"func (o *ObservedLogs) FilterLevelExact(level zapcore.Level) *ObservedLogs","start_line":81,"end_line":85,"code":"func (o *ObservedLogs) FilterLevelExact(level zapcore.Level) *ObservedLogs {\n\treturn o.Filter(func(e LoggedEntry) bool {\n\t\treturn e.Level == level\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*ObservedLogs).Filter","path":"zaptest/observer/observer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).FilterMessage","signature":"func (o *ObservedLogs) FilterMessage(msg string) *ObservedLogs","start_line":88,"end_line":92,"code":"func (o *ObservedLogs) FilterMessage(msg string) *ObservedLogs {\n\treturn o.Filter(func(e LoggedEntry) bool {\n\t\treturn e.Message == msg\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*ObservedLogs).Filter","path":"zaptest/observer/observer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).FilterLoggerName","signature":"func (o *ObservedLogs) FilterLoggerName(name string) *ObservedLogs","start_line":95,"end_line":99,"code":"func (o *ObservedLogs) FilterLoggerName(name string) *ObservedLogs {\n\treturn o.Filter(func(e LoggedEntry) bool {\n\t\treturn e.LoggerName == name\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*ObservedLogs).Filter","path":"zaptest/observer/observer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).FilterMessageSnippet","signature":"func (o *ObservedLogs) FilterMessageSnippet(snippet string) *ObservedLogs","start_line":102,"end_line":106,"code":"func (o *ObservedLogs) FilterMessageSnippet(snippet string) *ObservedLogs {\n\treturn o.Filter(func(e LoggedEntry) bool {\n\t\treturn strings.Contains(e.Message, snippet)\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*ObservedLogs).Filter","path":"zaptest/observer/observer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).FilterField","signature":"func (o *ObservedLogs) FilterField(field zapcore.Field) *ObservedLogs","start_line":109,"end_line":118,"code":"func (o *ObservedLogs) FilterField(field zapcore.Field) *ObservedLogs {\n\treturn o.Filter(func(e LoggedEntry) bool {\n\t\tfor _, ctxField := range e.Context {\n\t\t\tif ctxField.Equals(field) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*ObservedLogs).Filter","path":"zaptest/observer/observer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).FilterFieldKey","signature":"func (o *ObservedLogs) FilterFieldKey(key string) *ObservedLogs","start_line":121,"end_line":130,"code":"func (o *ObservedLogs) FilterFieldKey(key string) *ObservedLogs {\n\treturn o.Filter(func(e LoggedEntry) bool {\n\t\tfor _, ctxField := range e.Context {\n\t\t\tif ctxField.Key == key {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t})\n}\n","selection":{"visibility":"exported","reason":"other","score":0.7},"call_graph":{"callees":[{"symbol":"(*ObservedLogs).Filter","path":"zaptest/observer/observer.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).Filter","signature":"func (o *ObservedLogs) Filter(keep func(LoggedEntry) bool) *ObservedLogs","start_line":134,"end_line":145,"code":"func (o *ObservedLogs) Filter(keep func(LoggedEntry) bool) *ObservedLogs {\n\to.mu.RLock()\n\tdefer o.mu.RUnlock()\n\n\tvar filtered []LoggedEntry\n\tfor _, entry := range o.logs {\n\t\tif keep(entry) {\n\t\t\tfiltered = append(filtered, entry)\n\t\t}\n\t}\n\treturn \u0026ObservedLogs{logs: filtered}\n}\n","selection":{"visibility":"exported","reason":"other","score":0.72},"call_graph":{"callees":[{"symbol":"(*RWMutex).RLock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).RUnlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"FilterField$1","path":"zaptest/observer/observer.go"},{"symbol":"FilterFieldKey$1","path":"zaptest/observer/observer.go"},{"symbol":"FilterLevelExact$1","path":"zaptest/observer/observer.go"},{"symbol":"FilterLoggerName$1","path":"zaptest/observer/observer.go"},{"symbol":"FilterMessage$1","path":"zaptest/observer/observer.go"},{"symbol":"FilterMessageSnippet$1","path":"zaptest/observer/observer.go"}],"callers":[{"symbol":"(*ObservedLogs).FilterField","path":"zaptest/observer/observer.go"},{"symbol":"(*ObservedLogs).FilterFieldKey","path":"zaptest/observer/observer.go"},{"symbol":"(*ObservedLogs).FilterLevelExact","path":"zaptest/observer/observer.go"},{"symbol":"(*ObservedLogs).FilterLoggerName","path":"zaptest/observer/observer.go"},{"symbol":"(*ObservedLogs).FilterMessage","path":"zaptest/observer/observer.go"},{"symbol":"(*ObservedLogs).FilterMessageSnippet","path":"zaptest/observer/observer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*ObservedLogs).add","signature":"func (o *ObservedLogs) add(log LoggedEntry)","start_line":147,"end_line":151,"code":"func (o *ObservedLogs) add(log LoggedEntry) {\n\to.mu.Lock()\n\to.logs = append(o.logs, log)\n\to.mu.Unlock()\n}\n","selection":{"visibility":"unexported","reason":"other","score":0.5},"call_graph":{"callees":[{"symbol":"(*RWMutex).Lock","path":"../../../../usr/local/go/src/sync/rwmutex.go"},{"symbol":"(*RWMutex).Unlock","path":"../../../../usr/local/go/src/sync/rwmutex.go"}],"callers":[{"symbol":"(*contextObserver).Write","path":"zaptest/observer/observer.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"New","signature":"func New(enab zapcore.LevelEnabler) (zapcore.Core, *ObservedLogs)","start_line":155,"end_line":161,"code":"func New(enab zapcore.LevelEnabler) (zapcore.Core, *ObservedLogs) {\n\tol := \u0026ObservedLogs{}\n\treturn \u0026contextObserver{\n\t\tLevelEnabler: enab,\n\t\tlogs:         ol,\n\t}, ol\n}\n","selection":{"visibility":"exported","reason":"constructor","score":0.85},"call_graph":{"callees":null,"callers":null,"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*contextObserver).Level","signature":"func (co *contextObserver) Level() zapcore.Level","start_line":174,"end_line":176,"code":"func (co *contextObserver) Level() zapcore.Level {\n\treturn zapcore.LevelOf(co.LevelEnabler)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.63},"call_graph":{"callees":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"callers":[{"symbol":"LevelOf","path":"zapcore/level.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*contextObserver).Check","signature":"func (co *contextObserver) Check(ent zapcore.Entry, ce *zapcore.CheckedEntry) *zapcore.CheckedEntry","start_line":178,"end_line":183,"code":"func (co *contextObserver) Check(ent zapcore.Entry, ce *zapcore.CheckedEntry) *zapcore.CheckedEntry {\n\tif co.Enabled(ent.Level) {\n\t\treturn ce.AddCore(ent, co)\n\t}\n\treturn ce\n}\n","selection":{"visibility":"exported","reason":"other","score":0.74},"call_graph":{"callees":[{"symbol":"(*CheckedEntry).AddCore","path":"zapcore/entry.go"},{"symbol":"(*levelFilterCore).Enabled","path":"zapcore/increase_level.go"},{"symbol":"(AtomicLevel).Enabled","path":"level.go"},{"symbol":"(Level).Enabled","path":"zapcore/level.go"},{"symbol":"(LevelEnablerFunc).Enabled","path":"level.go"},{"symbol":"(multiCore).Enabled","path":"zapcore/tee.go"},{"symbol":"(nopCore).Enabled","path":"zapcore/core.go"}],"callers":[{"symbol":"(*Logger).check","path":"logger.go"},{"symbol":"(*hooked).Check","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).Check","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).Check","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).Check","path":"zapcore/sampler.go"},{"symbol":"(multiCore).Check","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*contextObserver).With","signature":"func (co *contextObserver) With(fields []zapcore.Field) zapcore.Core","start_line":185,"end_line":191,"code":"func (co *contextObserver) With(fields []zapcore.Field) zapcore.Core {\n\treturn \u0026contextObserver{\n\t\tLevelEnabler: co.LevelEnabler,\n\t\tlogs:         co.logs,\n\t\tcontext:      append(co.context[:len(co.context):len(co.context)], fields...),\n\t}\n}\n","selection":{"visibility":"exported","reason":"public_api","score":0.89},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).With","path":"logger.go"},{"symbol":"(*hooked).With","path":"zapcore/hook.go"},{"symbol":"(*lazyWithCore).With","path":"zapcore/lazy_with.go"},{"symbol":"(*levelFilterCore).With","path":"zapcore/increase_level.go"},{"symbol":"(*sampler).With","path":"zapcore/sampler.go"},{"symbol":"(multiCore).With","path":"zapcore/tee.go"},{"symbol":"Fields$1","path":"options.go"},{"symbol":"initOnce$1","path":"zapcore/lazy_with.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*contextObserver).Write","signature":"func (co *contextObserver) Write(ent zapcore.Entry, fields []zapcore.Field) error","start_line":193,"end_line":199,"code":"func (co *contextObserver) Write(ent zapcore.Entry, fields []zapcore.Field) error {\n\tall := make([]zapcore.Field, 0, len(fields)+len(co.context))\n\tall = append(all, co.context...)\n\tall = append(all, fields...)\n\tco.logs.add(LoggedEntry{ent, all})\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.8},"call_graph":{"callees":[{"symbol":"(*ObservedLogs).add","path":"zaptest/observer/observer.go"}],"callers":[{"symbol":"(*CheckedEntry).Write","path":"zapcore/entry.go"},{"symbol":"(*levelFilterCore).Write","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Write","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/observer/observer.go","symbol":"(*contextObserver).Sync","signature":"func (co *contextObserver) Sync() error","start_line":201,"end_line":203,"code":"func (co *contextObserver) Sync() error {\n\treturn nil\n}\n","selection":{"visibility":"exported","reason":"other","score":0.66},"call_graph":{"callees":[],"callers":[{"symbol":"(*Logger).Sync","path":"logger.go"},{"symbol":"(*levelFilterCore).Sync","path":"zapcore/increase_level.go"},{"symbol":"(multiCore).Sync","path":"zapcore/tee.go"}],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/timeout.go","symbol":"Timeout","signature":"func Timeout(base time.Duration) time.Duration","start_line":34,"end_line":36,"code":"func Timeout(base time.Duration) time.Duration {\n\treturn ztest.Timeout(base)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"Timeout","path":"internal/ztest/timeout.go"}],"callers":[],"precision":"native"}}
{"repo":"uber-go/zap","commit":"07077a697f639389cc998ff91b8885feb25f520d","lang":"go","path":"zaptest/timeout.go","symbol":"Sleep","signature":"func Sleep(base time.Duration)","start_line":43,"end_line":45,"code":"func Sleep(base time.Duration) {\n\tztest.Sleep(base)\n}\n","selection":{"visibility":"exported","reason":"other","score":0.61},"call_graph":{"callees":[{"symbol":"Sleep","path":"internal/ztest/timeout.go"}],"callers":[],"precision":"native"}}
